{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?1dde","webpack:///./src/components/SearchView.vue?70fa","webpack:///./src/components/CellDetails.vue?c149","webpack:///./src/components/GeneDetails.vue?574b","webpack:///./src/App.vue?dd5d","webpack:///./src/components/TheHeader.vue?00cf","webpack:///src/components/TheHeader.vue","webpack:///./src/components/TheHeader.vue?0263","webpack:///./src/components/TheHeader.vue","webpack:///./src/components/SearchView.vue?8aab","webpack:///src/components/SearchView.vue","webpack:///./src/components/SearchView.vue?50ea","webpack:///./src/components/SearchView.vue","webpack:///./src/components/CellGraph.vue?e4ba","webpack:///./src/config.js","webpack:///./src/util.js","webpack:///./src/apis/utils.js","webpack:///./src/apis/graph.js","webpack:///./src/apis/draw.js","webpack:///./src/apis/structure.js","webpack:///./src/apis/tangler.js","webpack:///./src/apis/layout.js","webpack:///src/components/CellGraph.vue","webpack:///./src/components/CellGraph.vue?92f0","webpack:///./src/components/CellGraph.vue","webpack:///./src/components/GeneDetails.vue?e6a8","webpack:///src/components/GeneDetails.vue","webpack:///./src/components/GeneDetails.vue?3747","webpack:///./src/components/GeneDetails.vue","webpack:///./src/components/CellDetails.vue?98bd","webpack:///src/components/CellDetails.vue","webpack:///./src/components/CellDetails.vue?29d7","webpack:///./src/components/CellDetails.vue","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue","webpack:///./src/store.js","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","staticClass","selectedTheme","model","callback","$$v","goDark","expression","$store","getters","getCellTypeGraphData","staticRenderFns","_v","_s","msg","props","String","component","$vuetify","theme","themes","getCurrentThemeMode","background","style","search","sortOptions","on","sortBasedOnOption","option","class","listHeight","loaded","listLocalCopy","_l","keyValuePair","index","$event","setCellSelected","_e","neighbor","geneSearch","item","id","setGeneItem","loadedGeneIdToNameDict","navigateToGenePage","loadedGeneIdToDescriptionDict","cellData","mounted","fetchData","cardHeight","getCardHeight","detailItem","listSize","loadedDictData","loadedGeneData","methods","curList","pop","cellName","dispatch","generateListCopy","entries","open","gene","globalThis","computed","filteredData","getSearch","filter","filteredGeneData","getGeneSearchFromSearchView","undefined","includes","geneSelected","getGeneSelected","getOption","set","input","watch","geneArr","components","maxCardHeight","cellType1","cellType2","ref","FIRST_ROW_CARD_MAX_HEIGHT","MAX_SELECTED_CELL_TYPE_NUMBER","CELL_TYPE_DEFAULT_COLOR","CELL_TYPE_CHANGED_COLOR","NODE_RADIUS_DEFAULT","NODE_RADIUS_POPPED","COLOR_RAMP","FORMAT_TO_ID","split","join","replace","GENERATE_LIST_COPY","originalList","_","cloneDeep","average","lst","sum","reduce","prev","cur","avg","listOfLists","len","array","Array","simpleSorter","graph","hlevel","pass","levels","getLevels","cmp","a","b","primaryParent","console","log","ai","levelIdx","bi","parents","ap","map","bp","children","ac","bc","dalevel","idx","forEach","level","li","sort","nodes","primaryChildren","Vertex","params","height","width","istree","phantom","depth","longest","ancestors","Set","descendentAncestors","levelrank","x","y","grandkidIndex","twidth","Link","source","target","color","Graph","links","constraints","groups","analysis","nodefunc","nodupes","results","queue","roots","maxLongest","Math","max","node","orderedNodes","child","pCount","npars","root","expand","tree","nchildren","nnode","strifyNodes","field","v","phantomGraph","longLinks","link","oldLinks","indexOf","analyzeGraph","newLong","isTree","breadthFirst","ancestor","add","drawGraph","paths","selector","vueThis","nodeRadius","bvert","bezierVert","svg","d3","append","attr","transform","cseg","x1","y1","x2","y2","bv","pathId","util","nodeId","handleMouseOver","d3plus","require","Tooltip","thead","position","render","handleMouseOut","remove","handleMouseClick","selectedCellName","nodeClass","nodeColor","nodeName","nodeStroke","selectAll","enter","pstr","next","drawPhantoms","text","jsonToGraph","keys","sourceName","targetName","maxChildren","parent","parentKids","treeLayout","topmargin","levelSep","vertexRadius","phantomRadius","spacer","space","minwid","left","ni","goalX","maxX","min","keyValueDict","pathsDict","linkArrayEdgeCases","showGraph","$refs","cellSelected","getCellSelected","topGeneCellList","getTopGeneCellList","toString","svgClear","svgHighlight","geneExist","cellTypesThatFitCriteria","svgFade","svgEdgeCase1","svgEdgeCase2","svgEdgeCase3","removeGeneDetails","geneNotEmpty","geneSelectedPresentedName","geneSelectedDescription","scopedSlots","_u","fn","_g","setGeneIndexBarChartRatio","setGeneIndexBarChartColor","maxGeneMagnitude","toFixed","fixedGeneDigits","cellTypeNames","filteredList","filterBySearchList","list","lowerCaseElement","toLowerCase","element","returnToDefaultList","geneValue","topGeneDataExist","topGenes","columnIndex","abs","filteredGeneCellList","getGeneSearchOption","getCellInGeneSearch","removeCellSelected","cellSelectedExist","geneDataExist","geneNameOnHover","setOverlapGeneBackgroundColor","setGeneNameOnHover","clearGeneNameOnHover","cardHighlight","cellArr","cellTypeNameIndexDict","cellTypeName","cellTypeNameInColumnTwo","swapEntryPositions","itr","indexA","indexB","temp","getDefaultCellTypes","geneCellCopy","indexGeneValue","geneValueObject","geneIndexInFirstRow","sortCells","currentCellTypes","dynamicData","geneCellCopy1","getCellDetails","getGeneSearch","cellTypes","cell2FilteredArray","cell1FilteredArray","resultArr","onHover","geneCellCopy2","Header","SearchView","GeneDetails","CellDetails","Vue","use","Vuex","state","cellDetails","cellSelectedPrevious","cellTypeGraphData","currentThemeMode","topGeneCellListPrevious","topGeneDictData","geneSearchOption","optionSelected","cellInGeneSearch","geneSearchFromSearchView","mutations","ADD_TO_CELL_DETAILS","payload","CHANGE_CELL_DETAILS","ADD_TO_CELL_SELECTED","CHANGE_CELL_SELECTED","POP_FROM_CELL_SELECTED","CHANGE_CELL_TYPE_GRAPH_DATA","CHANGE_CURRENT_THEME_MODE","ADD_TO_TOP_GENE_CELL_LIST","CHANGE_TOP_GENE_CELL_LIST","CHANGE_TOP_GENE_CELL_LIST_PREVIOUS","CHANGE_CELL_SELECTED_PREVIOUS","CHANGE_TOP_GENE_DICT_DATA","CHANGE_GENE_SEARCH_OPTION","CHANGE_GENE_SELECTED","CHANGE_CELL_IN_GENE_SEARCH","CHANGE_GENE_SEARCH","CHANGE_GENE_SEARCH_FROM_SEARCH_VIEW","CHANGE_SEARCH","CHANGE_OPTION","actions","addToCellDetails","context","commit","changeCellDetails","addToCellSelected","changeCellSelected","popFromCellSelected","changeCellTypeGraphData","changeCurrentThemeMode","addToTopGeneCellList","changeTopGeneCellList","changeTopGeneCellListPrevious","changeCellSelectedPrevious","changeTopGeneDictData","changeGeneSearchOption","changeGeneSelected","changeCellInGeneSearch","searchContent","changeGeneSearch","changeGeneSearchFromSearchView","changeSearch","changeOption","getTopGeneCellListPrevious","getCellSelectedPrevious","getTopGeneDictData","Store","config","productionTip","options","VueLodash","vuetifyOptions","iconfont","dark","primary","secondary","accent","error","light","Vuetify","h","App","store","vuetify","$mount"],"mappings":"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","file":"js/app.d38392b2.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SearchView.vue?vue&type=style&index=0&id=092fe382&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SearchView.vue?vue&type=style&index=0&id=092fe382&scoped=true&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CellDetails.vue?vue&type=style&index=0&id=e4f8390c&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CellDetails.vue?vue&type=style&index=0&id=e4f8390c&scoped=true&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GeneDetails.vue?vue&type=style&index=0&id=4b3d4f00&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GeneDetails.vue?vue&type=style&index=0&id=4b3d4f00&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('v-app',[_c('v-container',{attrs:{\"fluid\":\"\"}},[_c('v-switch',{staticClass:\"switch\",attrs:{\"color\":\"primary\",\"label\":_vm.selectedTheme},model:{value:(_vm.goDark),callback:function ($$v) {_vm.goDark=$$v},expression:\"goDark\"}}),_c('Header',{attrs:{\"msg\":\"CellO Viewer\"}})],1),_c('v-container',{attrs:{\"bg\":\"\",\"grid-list-md\":\"\",\"fluid\":\"\"}},[_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"md5\":\"\"}},[_c('SearchView',{attrs:{\"cellData\":this.$store.getters.getCellTypeGraphData}})],1),_c('v-flex',{attrs:{\"md7\":\"\"}},[_c('Graph',{attrs:{\"cellData\":this.$store.getters.getCellTypeGraphData}})],1)],1),_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"md5\":\"\"}},[_c('GeneDetails')],1),_c('v-flex',{attrs:{\"md7\":\"\"}},[_c('CellDetails')],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\",\"align-center\":\"\"}},[_c('v-flex',{attrs:{\"md12\":\"\",\"center\":\"\"}},[_c('h1',{staticClass:\"view-title\"},[_vm._v(\"🦠\"+_vm._s(_vm.msg)+\"🧬\")])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-layout row wrap align-center>\n    <v-flex md12 center>\n      <h1 class=\"view-title\">&#x1F9A0;{{ msg }}&#x1F9EC;</h1>\n    </v-flex>\n  </v-layout>\n</template>\n\n<script>\nexport default {\n  name: \"app-header\",\n  props: {\n    msg: String\n  }\n};\n</script>\n\n<style scoped>\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TheHeader.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TheHeader.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TheHeader.vue?vue&type=template&id=6c560743&scoped=true&\"\nimport script from \"./TheHeader.vue?vue&type=script&lang=js&\"\nexport * from \"./TheHeader.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6c560743\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\",\"align-center\":\"\"}},[_c('v-flex',{attrs:{\"md12\":\"\"}},[_c('v-card',{attrs:{\"max-height\":\"600\",\"color\":_vm.$vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n          .background}},[_c('v-card-title',{staticClass:\"justify-left\"},[_c('h4',{staticClass:\"view-title\"},[_vm._v(\"Search View\")])]),_c('v-tabs',{attrs:{\"fixed-tabs\":\"\",\"background-color\":_vm.$vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n            .background}},[_c('v-tab',[_vm._v(\"Cell Centric\")]),_c('v-tab',[_vm._v(\"Gene Centric\")]),_c('v-tab-item',[_c('v-card-text',{style:({\n              background:\n                _vm.$vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n                  .background\n            })},[_c('v-layout',[_c('v-flex',{attrs:{\"md9\":\"\",\"sm12\":\"\"}},[_c('v-text-field',{attrs:{\"append-icon\":\"search\",\"label\":\"search\",\"single-line\":\"\",\"hide-details\":\"\",\"hide-no-data\":\"\"},model:{value:(_vm.search),callback:function ($$v) {_vm.search=$$v},expression:\"search\"}})],1),_c('v-spacer'),_c('v-flex',{attrs:{\"md3\":\"\",\"sm12\":\"\"}},[_c('v-select',{attrs:{\"items\":_vm.sortOptions,\"label\":\"sort\"},on:{\"input\":_vm.sortBasedOnOption},model:{value:(_vm.option),callback:function ($$v) {_vm.option=$$v},expression:\"option\"}})],1)],1),_c('v-layout',{staticClass:\"list\",class:{ 'max-height': _vm.listHeight },attrs:{\"row\":\"\",\"wrap\":\"\"}},[(_vm.loaded && _vm.listLocalCopy)?_c('v-flex',{attrs:{\"md12\":\"\"}},[_c('v-list',{style:({\n                    background:\n                      _vm.$vuetify.theme.themes[\n                        this.$store.getters.getCurrentThemeMode\n                      ].background\n                  })},_vm._l((_vm.filteredData),function(keyValuePair,index){return _c('v-list-item',{key:index,staticClass:\"list\",on:{\"click\":function($event){return _vm.setCellSelected(keyValuePair[0])}}},[_c('v-layout',[(keyValuePair[0] && keyValuePair[1])?_c('v-flex',{staticClass:\"index\",attrs:{\"md3\":\"\",\"offset-md1\":\"\"}},[_vm._v(_vm._s(keyValuePair[0])+\": \")]):_vm._e(),(keyValuePair[1])?_c('v-flex',{attrs:{\"md6\":\"\",\"offset-md1\":\"\"}},_vm._l((keyValuePair[1]),function(neighbor,index){return _c('v-list',{key:index,attrs:{\"dense\":\"\"}},[(index === keyValuePair[1].length - 1)?_c('div',[_vm._v(\" \"+_vm._s(neighbor)+\" \")]):_c('div',[_vm._v(_vm._s(neighbor)+\",\")])])}),1):_vm._e()],1)],1)}),1)],1):_vm._e()],1)],1)],1),_c('v-tab-item',[_c('v-card-text',[_c('v-layout',[_c('v-flex',{attrs:{\"md12\":\"\",\"sm12\":\"\"}},[_c('v-text-field',{attrs:{\"append-icon\":\"search\",\"label\":\"search\",\"single-line\":\"\",\"hide-details\":\"\",\"hide-no-data\":\"\"},model:{value:(_vm.geneSearch),callback:function ($$v) {_vm.geneSearch=$$v},expression:\"geneSearch\"}})],1)],1),_c('virtual-list',{staticClass:\"list\",attrs:{\"size\":40,\"remain\":10}},_vm._l((_vm.filteredGeneData),function(item){return _c('v-list-item',{key:item.id,attrs:{\"three-line\":\"\"},on:{\"click\":function($event){return _vm.setGeneItem(item)}}},[_c('v-list-item-content',{staticClass:\"list-item-box\"},[_c('v-list-item-title',[_vm._v(_vm._s(_vm.loadedGeneIdToNameDict[item])+\": \")]),_c('v-list-item-subtitle',[_c('a',{staticClass:\"web-link\",on:{\"click\":function($event){return _vm.navigateToGenePage(item)}}},[_vm._v(\" \"+_vm._s(item)+\" \")])]),_c('v-list-item-subtitle',[_vm._v(\" \"+_vm._s(_vm.loadedGeneIdToDescriptionDict[item])+\" \")])],1)],1)}),1)],1)],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-layout row wrap align-center>\n    <v-flex md12>\n      <v-card\n        max-height=\"600\"\n        :color=\"\n          $vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n            .background\n        \"\n      >\n        <v-card-title class=\"justify-left\">\n          <h4 class=\"view-title\">Search View</h4>\n        </v-card-title>\n\n        <v-tabs\n          fixed-tabs\n          :background-color=\"\n            $vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n              .background\n          \"\n        >\n          <v-tab>Cell Centric</v-tab>\n          <v-tab>Gene Centric</v-tab>\n          <v-tab-item>\n            <v-card-text\n              :style=\"{\n                background:\n                  $vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n                    .background\n              }\"\n            >\n              <v-layout>\n                <v-flex md9 sm12>\n                  <v-text-field\n                    v-model=\"search\"\n                    append-icon=\"search\"\n                    label=\"search\"\n                    single-line\n                    hide-details\n                    hide-no-data\n                  ></v-text-field>\n                </v-flex>\n                <v-spacer />\n                <v-flex md3 sm12>\n                  <v-select\n                    v-model=\"option\"\n                    :items=\"sortOptions\"\n                    @input=\"sortBasedOnOption\"\n                    label=\"sort\"\n                  ></v-select>\n                </v-flex>\n              </v-layout>\n              <v-layout\n                row\n                wrap\n                class=\"list\"\n                :class=\"{ 'max-height': listHeight }\"\n              >\n                <v-flex md12 v-if=\"loaded && listLocalCopy\">\n                  <v-list\n                    :style=\"{\n                      background:\n                        $vuetify.theme.themes[\n                          this.$store.getters.getCurrentThemeMode\n                        ].background\n                    }\"\n                  >\n                    <v-list-item\n                      v-for=\"(keyValuePair, index) in filteredData\"\n                      :key=\"index\"\n                      class=\"list\"\n                      @click=\"setCellSelected(keyValuePair[0])\"\n                    >\n                      <v-layout>\n                        <v-flex\n                          md3\n                          offset-md1\n                          v-if=\"keyValuePair[0] && keyValuePair[1]\"\n                          class=\"index\"\n                          >{{ keyValuePair[0] }}:&nbsp;</v-flex\n                        >\n                        <v-flex md6 offset-md1 v-if=\"keyValuePair[1]\">\n                          <v-list\n                            v-for=\"(neighbor, index) in keyValuePair[1]\"\n                            :key=\"index\"\n                            dense\n                          >\n                            <div v-if=\"index === keyValuePair[1].length - 1\">\n                              {{ neighbor }}\n                            </div>\n                            <div v-else>{{ neighbor }},</div>\n                          </v-list>\n                        </v-flex>\n                      </v-layout>\n                    </v-list-item>\n                  </v-list>\n                </v-flex>\n              </v-layout>\n            </v-card-text>\n          </v-tab-item>\n          <!-- Gene Centric Search View -->\n          <v-tab-item>\n            <v-card-text>\n              <v-layout>\n                <v-flex md12 sm12>\n                  <v-text-field\n                    v-model=\"geneSearch\"\n                    append-icon=\"search\"\n                    label=\"search\"\n                    single-line\n                    hide-details\n                    hide-no-data\n                  ></v-text-field>\n                </v-flex>\n              </v-layout>\n              <virtual-list :size=\"40\" :remain=\"10\" class=\"list\">\n                <v-list-item\n                  three-line\n                  v-for=\"item of filteredGeneData\"\n                  :key=\"item.id\"\n                  @click=\"setGeneItem(item)\"\n                >\n                  <v-list-item-content class=\"list-item-box\">\n                    <v-list-item-title\n                      >{{ loadedGeneIdToNameDict[item] }}:&nbsp;\n                    </v-list-item-title>\n                    <v-list-item-subtitle>\n                      <a class=\"web-link\" @click=\"navigateToGenePage(item)\">\n                        {{ item }}\n                      </a>\n                    </v-list-item-subtitle>\n                    <v-list-item-subtitle>\n                      {{ loadedGeneIdToDescriptionDict[item] }}\n                    </v-list-item-subtitle>\n                  </v-list-item-content>\n                </v-list-item>\n              </virtual-list>\n            </v-card-text>\n          </v-tab-item>\n        </v-tabs>\n      </v-card>\n    </v-flex>\n  </v-layout>\n</template>\n\n<script>\n/* eslint-disable */\nimport * as d3 from \"d3\";\nimport virtualList from \"vue-virtual-scroll-list\";\nimport _ from \"lodash\";\n\nexport default {\n  name: \"cell-list\",\n  props: {\n    cellData: Object\n  },\n  mounted() {\n    this.fetchData();\n  },\n  data() {\n    return {\n      cardHeight: this.$store.getters.getCardHeight,\n      detailItem: [],\n      listHeight: \"500px\",\n      listLocalCopy: [],\n      listSize: 2, // Put this in store at cleanup phase\n      loaded: false,\n      loadedDictData: {},\n      loadedGeneData: [],\n      loadedGeneIdToNameDict: {},\n      loadedGeneIdToDescriptionDict: {},\n      sortOptions: [\"default\", \"alphabetical\"]\n    };\n  },\n  methods: {\n    async fetchData() {\n      this.loadedGeneData = await d3.json(\"./genes.json\");\n      this.loadedDictData = await d3.json(\"./top_abs_10_dict.json\");\n      this.loadedGeneIdToNameDict = await d3.json(\"./gene_id_to_name.json\");\n      this.loadedGeneIdToDescriptionDict = await d3.json(\n        \"gene_id_to_description.json\"\n      );\n    },\n    setCellSelected(cellName) {\n      let curList = this.$store.getters.getCellSelected;\n      while (curList.length >= this.listSize) {\n        curList.pop();\n      }\n      curList.push(cellName);\n      this.$store.dispatch(\"changeCellSelected\", curList);\n    },\n    generateListCopy(originalList) {\n      return Object.entries(_.cloneDeep(originalList));\n    },\n    navigateToGenePage(item) {\n      window.open(\n        \"http://useast.ensembl.org/Homo_sapiens/Gene/Summary?g=\" + item\n      );\n    },\n    setGeneItem(gene) {\n      this.$store.dispatch(\"changeGeneSelected\", gene);\n    },\n    sortBasedOnOption(option) {\n      let globalThis = this;\n      this.$store.dispatch(\"changeOption\", String(option));\n      this.listLocalCopy = this.generateListCopy(this.cellData);\n      switch (option) {\n        case \"alphabetical\":\n          globalThis.listLocalCopy = _.sortBy(\n            this.listLocalCopy,\n            [\n              function(list) {\n                console.log(list[0]);\n                return list[0];\n              }\n            ],\n            [\"asc\"]\n          );\n          return globalThis.listLocalCopy;\n      }\n    }\n  },\n  computed: {\n    filteredData() {\n      if (this.$store.getters.getSearch === \"\") {\n        return this.listLocalCopy;\n      } else {\n        return this.listLocalCopy.filter(cell => {\n          let searchResult = this.search.toLowerCase();\n          let caseInsesitiveCell0 = cell[0].toLowerCase();\n          let caseInsesitiveCellList = cell[1];\n          // Make all cell name in corresponding list to be lowercase\n          for (const cell of caseInsesitiveCellList) {\n            cell = cell.toLowerCase();\n          }\n          return (\n            caseInsesitiveCell0.includes(searchResult) ||\n            caseInsesitiveCellList.includes(searchResult)\n          );\n        });\n      }\n    },\n\n    /**\n     * Filtered gene data for gene centric view\n     */\n    filteredGeneData() {\n      let globalThis = this;\n\n      if (this.$store.getters.getGeneSearchFromSearchView === \"\") {\n        return this.loadedGeneData;\n      } else {\n        return this.loadedGeneData.filter(gene => {\n          if (globalThis.loadedGeneIdToNameDict[gene] == undefined) {\n            return;\n          }\n          return globalThis.loadedGeneIdToNameDict[gene].includes(\n            this.geneSearch\n          );\n        });\n      }\n    },\n    geneSelected: {\n      get() {\n        return this.$store.getters.getGeneSelected;\n      }\n    },\n    option: {\n      get() {\n        return this.$store.getters.getOption;\n      },\n      set(option) {\n        this.$store.dispatch(\"changeOption\", option);\n      }\n    },\n    search: {\n      get() {\n        return this.$store.getters.getSearch;\n      },\n      set(input) {\n        this.$store.dispatch(\"changeSearch\", input);\n      }\n    },\n    geneSearch: {\n      get() {\n        return this.$store.getters.getGeneSearchFromSearchView;\n      },\n      set(input) {\n        this.$store.dispatch(\"changeGeneSearchFromSearchView\", input);\n      }\n    }\n  },\n  watch: {\n    cellData() {\n      this.loaded = true;\n      this.listLocalCopy = this.generateListCopy(this.cellData);\n    },\n    geneSelected() {\n      let globalThis = this;\n      this.$store.dispatch(\"changeTopGeneCellList\", []);\n      for (const [key, value] of Object.entries(this.loadedDictData)) {\n        let geneArr = value;\n        for (let i = 0; i < geneArr.length; i++) {\n          if (geneArr[i][2] === globalThis.geneSelected) {\n            let cellName = key;\n            let geneValue = value[i][1];\n            globalThis.$store.dispatch(\"addToTopGeneCellList\", [\n              cellName,\n              geneValue\n            ]);\n          }\n        }\n      }\n    }\n  },\n  components: {\n    \"virtual-list\": virtualList\n  }\n};\n</script>\n\n<style scoped>\nv-card-title {\n  margin: 100px;\n}\n.list {\n  max-height: 350px;\n  overflow-y: auto;\n}\n.title {\n  margin-top: 10px;\n}\n.list-item-box {\n  text-align: left;\n}\n.web-link {\n  text-decoration: underline;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SearchView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SearchView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SearchView.vue?vue&type=template&id=092fe382&scoped=true&\"\nimport script from \"./SearchView.vue?vue&type=script&lang=js&\"\nexport * from \"./SearchView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SearchView.vue?vue&type=style&index=0&id=092fe382&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"092fe382\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"md12\":\"\"}},[_c('v-card',{attrs:{\"max-height\":_vm.maxCardHeight,\"color\":_vm.$vuetify.theme.themes[this.$store.getters.getCurrentThemeMode].background}},[_c('v-card-title',{staticClass:\"justify-center\"},[_c('h4',{staticClass:\"view-title\"},[_vm._v(\"Graph View\")]),_c('v-spacer'),(_vm.cellType1)?_c('v-chip',{staticClass:\"ma-2\"},[_vm._v(_vm._s(_vm.cellType1))]):_vm._e(),(_vm.cellType2)?_c('v-chip',{staticClass:\"ma-2\"},[_vm._v(_vm._s(_vm.cellType2))]):_vm._e()],1),_c('v-card-text',[_c('div',{ref:\"graph\",attrs:{\"id\":\"graph\"}})])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export const FIRST_ROW_CARD_MAX_HEIGHT = 600;\nexport const MAX_SELECTED_CELL_TYPE_NUMBER = 2;\nexport const CELL_TYPE_DEFAULT_COLOR = \"#faed27\";\nexport const CELL_TYPE_CHANGED_COLOR = \"#f33\";\nexport const NODE_RADIUS_DEFAULT = 5;\nexport const NODE_RADIUS_POPPED = 8;\nexport const COLOR_RAMP = [\n    \"#40004b\",\n    \"#762a83\",\n    \"#9970ab\",\n    \"#c2a5cf\",\n    \"#e7d4e8\",\n    \"#d9f0d3\",\n    \"#a6dba0\",\n    \"#5aae61\",\n    \"#1b7837\",\n    \"#00441b\",\n]","/* eslint-disable */\n\nimport _ from \"lodash\";\nimport * as d3 from \"d3\";\n\nexport const FORMAT_TO_ID = cellName => {\n  return cellName\n    .split(\" \")\n    .join(\"-\")\n    .split(\"(\")\n    .join(\"\")\n    .split(\")\")\n    .join(\"\")\n    .split(\",\")\n    .join(\"\")\n    .replace(/\\//g, \"-\");\n};\n\nexport const GENERATE_LIST_COPY = originalList => {\n  return Object.entries(_.cloneDeep(originalList));\n};","/*jshint esversion: 6 */\n// @ts-check\n// eslint-disable-next-line no-unused-vars\n// @ts-ignore\n/* eslint-disable */\nimport { Vertex } from \"./graph.js\";\n/**\n *\n * @param {number[]} lst\n */\nexport function average(lst) {\n  if (!lst.length) return 0;\n  let sum = lst.reduce((prev, cur) => (cur += prev));\n  let avg = sum / lst.length;\n  return avg;\n}\n\nexport function sum(lst) {\n  if (!lst.length) return 0;\n  return lst.reduce((prev, cur) => (cur += prev));\n}\n\n/**\n *\n * @param {number} len\n */\nexport function listOfLists(len) {\n  const array = Array(len);\n  for (let i = 0; i < array.length; i++) {\n    array[i] = [];\n  }\n  return array;\n}\n\n/* given 2 edges (x coordinates) do the edges cross? */\nexport function isCross(p1, c1, p2, c2) {\n  return (p1 > p2 && c1 < c2) || (p1 < p2 && c1 > c2) ? 1 : 0;\n}\n\n/**\n * Count the number of crossings between two (adjacent) levels\n * @param {Vertex[]} parents\n */\nexport function countCrossingsLevel(parents) {\n  let count = 0;\n  // no easy way to iterate over the links of a level...\n  if (parents.length > 1) {\n    for (let i = 0; i < parents.length - 1; i++) {\n      let p1 = parents[i];\n      p1.children.forEach(function(c1) {\n        // jshint ignore:line\n        for (let j = i + 1; j < parents.length; j++) {\n          let p2 = parents[j];\n          p2.children.forEach(function(c2) {\n            // jshint ignore:line\n            count += isCross(\n              p1.levelIdx,\n              c1.levelIdx,\n              p2.levelIdx,\n              c2.levelIdx\n            );\n          });\n        }\n      });\n    }\n  }\n  return count;\n}\n\nexport function countCrossingsGraph(graph) {\n  const levels = graph.getLevels();\n  let crossings = 0;\n  for (let i = 0; i < levels.length - 1; i++) {\n    let lc = countCrossingsLevel(levels[i]);\n    crossings += lc;\n  }\n  return crossings;\n}\n\nexport function simpleSorter(graph, hlevel = 3, pass = 0) {\n  const levels = graph.getLevels();\n\n  // compare two nodes\n  function cmp(a, b) {\n    // heuristic one - stick to your primary parent\n    if (!a.primaryParent) {\n      console.log(`node ${a.index} ${a.name} no primary parent`);\n    }\n    let ai = a.primaryParent.levelIdx;\n    let bi = b.primaryParent.levelIdx;\n    if (ai != bi) return ai - bi;\n    if (hlevel > 1) {\n      // hueristic two - consider all your parents\n      // only make sense if at least one has multiple parents\n      if (a.parents.length > 1 || b.parents.length > 1) {\n        let ap = average(a.parents.map(p => p.levelIdx));\n        let bp = average(b.parents.map(p => p.levelIdx));\n        if (ap != bp) return ap - bp;\n      } else {\n        // generally, looking at your children is a really bad\n        // idea - wait until it becomes useful (when things are stable)\n        // and only if you have only 1 child\n        if (pass > 5 && a.children.length == 1 && b.children.length == 1) {\n          // keep diving until someone doesn't have 1 child\n          let ac = a.children[0];\n          let bc = b.children[0];\n          while (ac.children.length == 1 && bc.children.length == 1) {\n            ac = ac.children[0];\n            bc = bc.children[0];\n          }\n          let ap = ac.levelIdx;\n          let bp = bc.levelIdx;\n          return ap - bp;\n        }\n      }\n    }\n    if (hlevel > 2) {\n      // heuristic three - transitive closure of your descendents ancestors\n      if (a.dalevel.length && b.dalevel.length) {\n        let ap = average(a.dalevel.map(p => p.levelIdx));\n        let bp = average(b.dalevel.map(p => p.levelIdx));\n        if (ap != bp) return ap - bp;\n      }\n    }\n    return 0;\n  }\n\n  // sort each level\n  let idx = 0;\n  levels.forEach(function(level, li) {\n    if (li > 0) {\n      level.sort(cmp);\n    }\n    level.forEach((n, i) => {\n      n.levelIdx = i;\n      n.index = idx++;\n    });\n  });\n\n  // reorder the nodes\n  graph.nodes.sort((a, b) => a.index - b.index);\n  // make sure the children are sorted correctly\n  graph.nodes.forEach(n => n.primaryChildren.sort((a, b) => a.index - b.index));\n  graph.nodes.forEach(n => n.children.sort((a, b) => a.index - b.index));\n}\n","/*jshint esversion: 6 */\n// @ts-check\n\n// @ts-ignore\nimport { listOfLists } from \"./utils.js\";\n\n/**\n * Can't be a Node since that's a reserved term by the DOM\n */\nexport class Vertex {\n  /**\n   * make a node\n   * @param {string} name\n   * @param {object} params\n   * @param {number} [params.width=10]\n   * @param {number} [params.height=10]\n   */\n  constructor(name, params = {}) {\n    this.name = name;\n    this.height = \"height\" in params ? params.height : 10;\n    this.width = \"width\" in params ? params.width : 10;\n    // these are usually added later by the reader\n    this.parents = [];\n    this.children = [];\n    this.istree = undefined;\n    this.index = undefined; // overl rank (index into nodes list)\n    this.phantom = false;\n    // these are added later by the analyzer, but we declare them to have no warnings\n    this.depth = -1;\n    this.longest = -1;\n    this.levelIdx = undefined; // index in the level (where in levels list)\n    this.ancestors = new Set();\n    this.descendentAncestors = new Set();\n    this.dalevel = [];\n\n    // these are used for sorting\n    this.levelrank = undefined;\n\n    // these are used for drawing\n    this.x = undefined;\n    this.y = undefined;\n\n    // for the new and improved sorter\n    this.primaryParent = undefined;\n    /** @type {Vertex[]} */\n    this.primaryChildren = [];\n    this.grandkidIndex = undefined;\n\n    // used for layout\n    this.twidth = undefined;\n  }\n}\n\nexport class Link {\n  /**\n   *\n   * @param {Vertex} source\n   * @param {Vertex} target\n   * @param {string} color\n   * @param {number} value\n   */\n  constructor(source, target, color = \"#000\", value = 1) {\n    this.source = source;\n    this.target = target;\n    this.color = color;\n    this.value = value;\n  }\n}\n\n/**\n * @callback NodeFunction\n * @param{Vertex} node\n */\n\n/**\n * @class\n */\nexport class Graph {\n  /**\n   *\n   * @param {Vertex[]} nodes\n   * @param {Link[]} links\n   * @param {Array} constraints\n   * @param {Array} groups\n   */\n  constructor(nodes, links, constraints = [], groups = []) {\n    /** @type {Vertex[]} */\n    this.nodes = nodes;\n    /** @type {Link[]} */\n    this.links = links;\n    this.constraints = constraints;\n    this.groups = groups;\n    this.analysis = undefined;\n  }\n  /**\n   * return a list of the roots\n   * @returns {Vertex[]}\n   */\n  roots() {\n    return this.nodes.filter(n => !n.parents.length);\n  }\n  /**\n   * return a list of the leaves\n   * @returns {Vertex[]}\n   */\n  leaves() {\n    return this.nodes.filter(n => !n.children.length);\n  }\n\n  /**\n   * apply a function to each node in breadth first order\n   * this only works on level graphs!\n   * @param {NodeFunction} nodefunc\n   */\n  breadthFirst(nodefunc, nodupes = true) {\n    let results = [];\n    // start with the roots\n    let queue = this.roots();\n    // now iterate until we're done\n    while (queue.length) {\n      const n = queue.shift();\n      results.push(nodefunc(n));\n      n.children.forEach(function(c) {\n        // jshint ignore:line\n        if (!nodupes || !queue.includes(c)) queue.push(c);\n      });\n    }\n    return results;\n  }\n\n  /**\n   * get the levels of the graph - it also resets the indecies in the levels\n   */\n  getLevels() {\n    const nodes = this.nodes;\n    const maxLongest = Math.max(...nodes.map(n => n.longest));\n\n    /** @type Vertex[][]] */\n    const levels = listOfLists(maxLongest);\n\n    nodes.forEach(n => levels[n.longest - 1].push(n));\n    levels.forEach(level => level.forEach((node, i) => (node.levelIdx = i)));\n\n    return levels;\n  }\n\n  /**\n   * Re-order the nodes based on a breadth first traversal\n   * it puts the nodes in order - which means it can mess stuff up\n   * It does re-assign indecies based on this new order.\n   * It does not re-assign level indecies.\n   */\n  orderNodes() {\n    // beginning with the roots, do a breadth first traversal of the tree to\n    // assign indecies\n    let idx = 0;\n    let orderedNodes = [];\n    let queue = this.nodes.filter(node => !node.primaryParent);\n    while (queue.length) {\n      const node = queue.shift();\n      node.index = idx++;\n      orderedNodes.push(node);\n      node.primaryChildren.forEach(child => queue.push(child)); // jshint ignore:line\n    }\n    this.nodes = orderedNodes;\n  }\n\n  /** describe the graph to the console */\n  describe() {\n    // count the number of nodes with each amount of parents\n    let pCount = {};\n    this.nodes.forEach(node => {\n      let npars = node.parents.length;\n      if (pCount[npars]) {\n        pCount[npars]++;\n      } else {\n        pCount[npars] = 1;\n      }\n    });\n  }\n\n  /** extract a D3 Hierarchy description  - this is the literal\n   *  (someone else has to call d3.hierarchy) */\n  hierarchy() {\n    /** get the root - if there are multiple roots, make a new root node */\n    let roots = this.roots();\n    let root;\n    if (roots.length == 1) {\n      root = {\n        name: roots[0].name,\n        node: roots[0],\n        nchildren: roots[0].primaryChildren\n      };\n    } else {\n      root = { name: \"Fake Root\", node: undefined, nchildren: roots };\n    }\n    /* proceed recursively */\n    function expand(tree) {\n      // converty nchildren (node list) to d3 form.\n      tree.children = [];\n      tree.nchildren.forEach(function(c) {\n        let nnode = { name: c.name, node: c, nchildren: c.primaryChildren };\n        tree.children.push(nnode);\n        expand(nnode);\n      });\n    }\n    expand(root);\n    return root;\n  }\n}\n\n/**\n * turn something with a forEach into a string (works for sets)\n * @param {*} lst\n */\nexport function strifyNodes(lst, field = \"name\") {\n  let s = \"[\";\n  lst.forEach(v => (s += v[field] + \" \"));\n  s += \"]\";\n  return s;\n}\n\n/**\n * Given a graph, change things such that all links are 1 level\n * this means that longer links get broken into a series of steps with phantom nodes inserted\n * @param {Graph} graph\n */\nfunction phantomGraph(graph) {\n  // a list of all of the long links\n  const longLinks = graph.links.filter(\n    link => link.target.longest - link.source.longest > 1\n  );\n  // links are only the links of the correct length\n  const links = graph.links.filter(\n    link => link.target.longest - link.source.longest == 1\n  );\n  // save the old links\n  // @ts-ignore\n  graph.oldLinks = graph.links;\n\n  // break up the long links\n  longLinks.forEach(function(link, li) {\n    // disconnect child and parent\n    link.target.parents.splice(link.target.parents.indexOf(link.source), 1);\n    link.source.children.splice(link.source.children.indexOf(link.target), 1);\n    let prev = link.source;\n    for (\n      let level = link.source.longest + 1;\n      level < link.target.longest;\n      level++\n    ) {\n      let nnode = new Vertex(`connector-${li}-${level}`);\n      nnode.phantom = true;\n      nnode.parents.push(prev);\n      nnode.longest = level;\n      nnode.depth = link.source.depth + 1;\n      nnode.istree = false;\n      prev.children.push(nnode);\n      graph.nodes.push(nnode);\n      links.push(new Link(prev, nnode));\n      prev = nnode;\n    }\n    link.target.parents.push(prev);\n    prev.children.push(link.target);\n    links.push(new Link(prev, link.target));\n  });\n\n  graph.links = links;\n}\n\n/**\n * analyze a graph in place\n * this just adds information to the nodes (in place)\n * depth, longest, istree, index\n * if we level the graph, we add phantom nodes BEFORE doing ancestry\n * @param {Graph} graph\n * @param {boolean} [level=true]\n */\nexport function analyzeGraph(graph, level = true) {\n  // some analysis\n  let roots = graph.roots();\n\n  // Depths\n  // do a simple breadth-first search to get depth - where depth is shortest path to a root\n  // start with the roots\n  let queue = [];\n  roots.forEach(x => {\n    x.depth = 1;\n    queue.push(x);\n  });\n  // now iterate until we're done\n  while (queue.length) {\n    const n = queue.shift();\n    n.children.forEach(child => {\n      // jshint ignore:line\n      if (child.depth < 1) {\n        child.depth = n.depth + 1;\n        queue.push(child);\n      }\n    });\n  }\n\n  // a tricker thing is to find the LONGEST path to a node\n  // I am doing this inefficiently - each node may be visited multiple times\n  // each time it is updated\n  queue = [];\n  roots.forEach(x => {\n    x.longest = 1;\n    queue.push(x);\n  });\n  // now iterate until we're done\n  while (queue.length) {\n    const n = queue.shift();\n    const newLong = n.longest + 1;\n    n.children.forEach(child => {\n      // jshint ignore:line\n      if (child.longest < newLong) {\n        child.longest = newLong;\n        queue.push(child);\n      }\n    });\n  }\n\n  // Is the subtree below a node a tree?\n  // this requires that: each child is a tree, and each child has 1 parent\n  // we cache this within the node\n  function isTree(n) {\n    // jshint ignore:line\n    if (n.istree != undefined) return n.istree;\n    // look for a child that makes us not a tree\n    let istree = true;\n    n.children.forEach(function(child) {\n      if (!isTree(child) || child.parents.length > 1) {\n        istree = false;\n      }\n    });\n    n.istree = istree;\n    return istree;\n  }\n  graph.nodes.forEach(n => isTree(n));\n\n  // add the phantom nodes if need be\n  if (level) phantomGraph(graph);\n\n  // assign indecies based on order - AFTER phantom nodes added\n  graph.nodes.forEach((n, i) => (n.index = i));\n\n  // analyses after adding the phantoms\n  let levels = graph.getLevels();\n\n  // ancestor sets - a place where naive breadth first actually makes sense\n  graph.breadthFirst(function(node) {\n    node.children.forEach(function(child) {\n      node.ancestors.forEach(ancestor => child.ancestors.add(ancestor));\n      child.ancestors.add(node);\n    });\n  });\n\n  // work bottom up, rather than using breadth first\n  for (let li = levels.length - 1; li >= 0; li--) {\n    const level = levels[li];\n    level.forEach(function(node) {\n      node.children.forEach(function(child) {\n        child.ancestors.forEach(a => node.descendentAncestors.add(a));\n        child.descendentAncestors.forEach(a => node.descendentAncestors.add(a));\n      });\n    });\n  }\n  // find the das at the level above the node\n  graph.nodes.forEach(function(node) {\n    node.dalevel = [...node.descendentAncestors].filter(\n      n => n.longest == node.longest\n    );\n  });\n}\n","/* eslint-disable no-console */\n/*jshint esversion: 6 */\n// @ts-check\n\n// eslint-disable-next-line no-unused-vars\nimport { Graph, strifyNodes } from \"./graph.js\";\n// @ts-ignore\n// @ts-ignore\nimport * as d3 from \"d3\";\nimport * as util from \"../util\";\n\n// /**\n//  *\n//  * @param {Graph} graph\n//  * @param {string} selector=\"body\"\n//  * @param {Object} params={}\n//  * @param {number} [params.height = 800]\n//  * @param {number} [params.nodeRadius = 4]\n//  * @param {?Boolean} [params.drawPhantoms]\n//  * @param {number} [params.bezierVert = 25]\n//  */\n// export function drawGraphLab(graph, selector = \"body\", vueThis, params = {}) {\n\n//   let linkType = \"paths\";\n//   let paths;\n\n//   /**\n//    * Where the vanilla JavaScript pass the click event to Vue\n//    */\n//   function update() {\n//     switch (linkType) {\n//       case \"arrows\":\n//         // draw directed edges with proper padding from node centers\n//         paths.attr(\"d\", function(d) {\n//           let deltaX = d.target.x - d.source.x,\n//             deltaY = d.target.y - d.source.y,\n//             dist = Math.sqrt(deltaX * deltaX + deltaY * deltaY),\n//             normX = deltaX / dist,\n//             normY = deltaY / dist,\n//             sourcePadding = d.source.phantom ? 1 : nodeRadius,\n//             targetPadding = d.target.phantom ? 1 : nodeRadius + 2,\n//             sourceX = d.source.x + sourcePadding * normX,\n//             sourceY = d.source.y + sourcePadding * normY,\n//             targetX = d.target.x - targetPadding * normX,\n//             targetY = d.target.y - targetPadding * normY;\n//           return \"M\" + sourceX + \",\" + sourceY + \"L\" + targetX + \",\" + targetY;\n//         });\n//         break; // end arrow update\n//       case \"lines\":\n//         paths.attr(\"x1\", d => d.source.x);\n//         paths.attr(\"y1\", d => d.source.y);\n//         paths.attr(\"x2\", d => d.target.x);\n//         paths.attr(\"y2\", d => d.target.y);\n//         break;\n//       case \"paths\":\n//         paths.attr(\"d\", function(d) {\n//           let x1 = d.source.x;\n//           let y1 = d.source.y + radius(d.source);\n//           let x2 = d.target.x;\n//           let y2 = d.target.y - radius(d.target);\n//           //return `M${x1},${y1}L${x2},${y2}`;\n//           return `M${x1},${y1}C${x1},${y1 + 15},${x2},${y2 - 15},${x2},${y2}`;\n//         });\n//         break;\n//     }\n\n//     // update node positions\n//     node\n//       .attr(\"cx\", function(d) {\n//         return d.x;\n//       })\n//       .attr(\"cy\", function(d) {\n//         return d.y;\n//       });\n//   }\n//   update();\n// }\n\n/**\n * New drawwing code - only does Beziers\n * has a few parameters\n * and cannot update node positions\n *\n * @param {Graph} graph\n * @param {string} selector=\"body\"\n * @param {Object} params={}\n * @param {number} [params.height = 800]\n * @param {number} [params.nodeRadius = 4.5]\n * @param {?Boolean} [params.drawPhantoms]\n * @param {number} [params.bezierVert = 25]\n */\n// @ts-ignore\n// @ts-ignore\nexport function drawGraph(graph, selector = \"body\", vueThis, params = {}) {\n  let nodeRadius = params.nodeRadius || 4.5;\n  let bvert = params.bezierVert || 15;\n  let height = params.height || 985;\n  const width = Math.max(...graph.nodes.map(n => n.x)) + nodeRadius;\n\n  let svg = d3\n    // @ts-ignore\n    .select(selector)\n    .append(\"svg\")\n    .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n    .attr(\"viewBox\", `0 0 ${width} ${height}`)\n    .call(\n      // @ts-ignore\n      d3.zoom().on(\"zoom\", function() {\n        // @ts-ignore\n        svg.attr(\"transform\", d3.event.transform);\n      })\n    )\n    .append(\"g\");\n\n  let paths;\n\n  // create the Bezier segment from x1,y1 to x2,y2 - assuming that x1,y1 was the last point\n  // note that the derivatives go vertically\n  function cseg(x1, y1, x2, y2) {\n    // I made this a variable to experiment with computing better values\n    // nothing works well\n    let bv = bvert;\n    return `C${x1},${y1 + nodeRadius + bv},${x2},${y2 -\n      nodeRadius -\n      bv},${x2},${y2 - nodeRadius}`;\n  }\n\n  // @ts-ignore\n  function pathId(links) {\n    return (\n      util.FORMAT_TO_ID(links[\"source\"][\"name\"]) +\n      \"---\" +\n      util.FORMAT_TO_ID(links[\"target\"][\"name\"])\n    );\n  }\n\n  // we only create links for the non-phantom source nodes\n  // we then trace through the phantom nodes\n  paths = svg\n    .selectAll(\".link\")\n    .data(graph.links.filter(link => !link.source.phantom))\n    .enter()\n    .append(\"svg:path\")\n    .attr(\"id\", pathId)\n    .attr(\"stroke-width\", 0.75)\n    .attr(\"fill\", \"none\")\n    .attr(\"d\", function(d) {\n      // start at the beginning of the first source\n      let x1 = d.source.x;\n      let y1 = d.source.y + nodeRadius;\n      let pstr = `M${x1},${y1}`;\n      let next = d.target;\n      // traverse phantom nodes\n      while (next.phantom) {\n        let x2 = next.x;\n        let y2 = next.y;\n        pstr += cseg(x1, y1, x2, y2);\n        // vertical line through the node's location\n        pstr += `L${x2},${y2 + nodeRadius}`;\n        next = next.children[0];\n        x1 = x2;\n        y1 = y2;\n      }\n      // now we go to the final place\n      let x2 = next.x;\n      let y2 = next.y;\n      pstr += cseg(x1, y1, x2, y2);\n      return pstr;\n    });\n\n  paths.style(\"stroke\", link => link.color).attr(\"class\", \"link\");\n  paths.on(\"mouseover\", function handle() {\n    // @ts-ignore\n    let link = d3.select(this);\n    link.style(\"stroke\", \"#FF6F61\");\n   \n    /**\n     * \n     * \n     * Need to add the hover over edge show tooltips\n     * on both nodes functionality here\n     * \n     * \n     */\n  });\n  paths.on(\"mouseout\", function handle(d) {\n    // @ts-ignore\n    d3.select(this).style(\"stroke\", d.color);\n  });\n\n  /**\n   * Assign an id to each circle based on node type\n   * @param {Object} node\n   */\n  // Assign an id to each circle based on node type\n  // @ts-ignore\n  function nodeId(node) {\n    if (node.phantom) {\n      return \"phantom-\" + util.FORMAT_TO_ID(node.name);\n    } else {\n      return \"circle-\" + util.FORMAT_TO_ID(node.name);\n    }\n  }\n\n  // @ts-ignore\n  function handleMouseOver() {\n    // Use D3 to select element, change color and size\n    // @ts-ignore\n    let node = d3.select(this);\n    node.attr(\"r\", nodeRadius * 2);\n\n    // @ts-ignore\n    let d3plus = require(\"d3plus-tooltip\");\n    // @ts-ignore: This is a notation that d3plus-tooltip uses\n    new d3plus.Tooltip()\n      .data([{ name: node.attr(\"name\") }])\n      .thead([\n        function(node) {\n          return node.name;\n        }\n      ])\n      .position(\"#\" + node.attr(\"id\"))\n      .render();\n  }\n\n  // @ts-ignore\n  function handleMouseOut() {\n    // @ts-ignore\n    d3.select(this).attr(\"r\", nodeRadius);\n    // @ts-ignore\n    d3.select(\".d3plus-tooltip\").remove();\n  }\n\n  function handleMouseClick() {\n    // @ts-ignore\n    vueThis.selectedCellName = d3.select(this).attr(\"name\");\n  }\n\n  function nodeClass(node) {\n    if (node.phantom) {\n      return \"phantom\";\n    } else {\n      return \"cell\";\n    }\n  }\n\n  function nodeColor(node) {\n    if (node.phantom) return \"#42b98300\";\n    if (node.istree) return \"#faed27\";\n    return \"#faed27\";\n  }\n\n  function nodeName(node) {\n    return node.name;\n  }\n\n  function nodeStroke(node) {\n    if (node.phantom) return \"none\";\n    return \"#000\";\n  }\n\n  let node = svg\n    .selectAll(\".node\")\n    .data(\n      params.drawPhantoms ? graph.nodes : graph.nodes.filter(n => !n.phantom)\n    )\n    .enter()\n    .append(\"circle\")\n    .attr(\"name\", nodeName)\n    .attr(\"id\", nodeId)\n    .attr(\"class\", nodeClass)\n    .attr(\"r\", nodeRadius)\n    .style(\"fill\", nodeColor)\n    .style(\"stroke\", nodeStroke)\n    .style(\"stroke-width\", 0.5)\n    .attr(\"cx\", d => d.x)\n    .attr(\"cy\", d => d.y);\n\n  node\n    .filter(\".cell\")\n    .on(\"mouseover\", handleMouseOver)\n    .on(\"mouseout\", handleMouseOut)\n    .on(\"click\", handleMouseClick);\n\n  node.append(\"title\").text(function(d) {\n    return `${\n      d.index\n    }:${d.name} ${strifyNodes(d.dalevel, \"index\")} tw:${d.twidth}`;\n  });\n}\n","import { Link, Graph, Vertex } from \"./graph.js\";\n\n/* just make the graph data structure given the input data */\n/**\n *\n * @param {Graph} data\n */\nexport function jsonToGraph(data) {\n  // we have a set of node names (in data) with their children\n  // make a list of node objects\n  // warning: arrow notation can't return an object directly\n  let nodes = Object.keys(data).map(name => new Vertex(name));\n\n  // make a dictionary so that we can find things by name\n  // it's called \"node\" since it lets us find a node\n  let node = {};\n  nodes.forEach(function(n) {\n    node[n.name] = n;\n  });\n\n  // assign reasonable indecies\n  nodes.forEach((node, idx) => (node.index = idx));\n\n  // make links in the correct format\n  // now process all of the links - create a list of links, as well\n  // as store the graph information in the nodes\n  let links = [];\n  for (const sourceName in data) {\n    data[sourceName].forEach(function(targetName) {\n      const source = node[sourceName];\n      const target = node[targetName];\n      if (!source) console.log(`Bad node ${sourceName} as source`);\n      if (!target) console.log(`Bad node ${targetName} as target`);\n      if (source && target) {\n        let link = new Link(source, target);\n        links.push(link);\n        source.children.push(target);\n        target.parents.push(source);\n      }\n    });\n  }\n\n  return new Graph(nodes, links);\n}\n","/*jshint esversion: 6 */\n// @ts-check\n/* eslint-disable */\nimport { Graph } from \"./graph.js\";\n\n/**\n * @param {Graph} graph\n */\nexport function primaryParent(graph) {\n  // for every node, choose it's primary parent\n  graph.nodes.forEach(function(node) {\n    node.primaryParent = undefined;\n    let maxChildren = 0;\n    node.parents.forEach(function(parent) {\n      const parentKids = parent.children.length;\n      if (parentKids > maxChildren) {\n        maxChildren = parentKids;\n        node.primaryParent = parent;\n      }\n    });\n  });\n  // for every node, get all of the children for which it is primary\n  graph.nodes.forEach(node => (node.primaryChildren = []));\n  graph.nodes.forEach(node => {\n    if (node.primaryParent) node.primaryParent.primaryChildren.push(node);\n  });\n}\n","/*jshint esversion: 6 */\n// @ts-check\n/* eslint-disable */\nimport { Graph } from \"./graph.js\";\nimport { average, sum } from \"./utils.js\";\n\nimport * as d3 from \"d3\";\n\nfunction xLength(graph) {\n  const diffs = graph.links.map(link =>\n    Math.abs(link.source.x - link.target.x)\n  );\n  return diffs.reduce((a, b) => (b += a));\n}\n\n/** use the d3 layout */\nexport function d3Layout(graph, levelSep = 100, leftMargin = 10) {\n  // @ts-ignore\n  let hier = d3.hierarchy(graph.hierarchy());\n  // @ts-ignore\n  let tree = d3.tree();\n  // @ts-ignore\n  tree.size([]); // do we have to give it a size?\n  // node size is fixed - so instead, use separation to control spacing\n  tree.separation(function(a, b) {\n    let na = a.data.node;\n    let nb = b.data.node;\n    if (na && nb) {\n      return 1 + (na.phantom ? 2 : 5) + (nb.phantom ? 2 : 5);\n    } else {\n      return 10;\n    }\n  });\n  tree.nodeSize([1, 1]);\n  tree(hier);\n  // things are centered at zero, so shift things\n  // @ts-ignore\n  let left = Math.min(...hier.descendants().map(n => n.x));\n  hier.descendants().forEach(n => {\n    // @ts-ignore\n    n.x -= left - leftMargin;\n  });\n  // copy the D3 positions into the node positions\n  hier.descendants().forEach(function(node) {\n    if ((node.data, node)) {\n      // @ts-ignore\n      node.data.node.x = node.x;\n      node.data.node.y = (node.data.node.longest + 1) * levelSep;\n    }\n  });\n}\n\n/**\n *\n * @param {Graph} graph\n */\nexport function layout(graph) {\n  // for debugging - keep a set of nodes (a dictionary) that we'll do print statements\n  const examine = {\n    129: true\n  };\n\n  const width = 1200;\n  const topmargin = 50;\n  const levelSep = 50;\n\n  const vertexRadius = 5;\n  const phantomRadius = 1;\n  const spacer = 2;\n\n  function space(node) {\n    return spacer + (node.phantom ? phantomRadius : vertexRadius);\n  }\n\n  const levels = graph.getLevels();\n  // @ts-ignore\n  // @ts-ignore\n  const links = graph.links;\n\n  // assign indecies based on levels\n  // this means creating a new node list\n  const orderedNodes = [];\n  levels.forEach(level => level.forEach(n => orderedNodes.push(n)));\n  orderedNodes.forEach((node, idx) => (node.index = idx));\n\n  // make initial positions\n  levels.forEach(function(level, li) {\n    let left = 0;\n    // @ts-ignore\n    // @ts-ignore\n    level.forEach(function(n, ni) {\n      // @ts-ignore\n      // @ts-ignore\n      let px = n.parents.length ? Math.min(...n.parents.map(m => m.x)) : 0;\n      n.x = left + space(n); // Math.max(px, left+space(n));\n      n.y = topmargin + li * levelSep;\n      left = n.x + space(n);\n    });\n  });\n  console.log(`Initial Lengths = ${xLength(graph)}`);\n\n  // adjust initial positions to the right\n  if (1) {\n    // need to go bottom to top\n    // levels.forEach( function(level,li)\n    for (let li = levels.length - 1; li >= 0; li--) {\n      const level = levels[li];\n      let right = width;\n      // go from right to left shifting things right if they can\n      for (let ni = level.length - 1; ni >= 0; ni--) {\n        let n = level[ni];\n\n        // if the rightmost thing is a leaf, we might want to move it to\n        // make space for other things\n        let rightLeaf = width;\n\n        // 4 different heuristics as to where to move to - purely aesthetics\n        let nx1 = n.children.length\n          ? Math.min(...n.children.map(m => m.x))\n          : rightLeaf;\n        let nx3 = n.children.length\n          ? Math.max(...n.children.map(m => m.x))\n          : rightLeaf;\n        // @ts-ignore\n        // @ts-ignore\n        let nx2 = (nx1 + nx3) / 2;\n        let na = n.children.length\n          ? average(n.children.map(m => m.x))\n          : rightLeaf;\n\n        if (n.index in examine) {\n          console.log(`right: n.x:${n.x} na:${na} right:${right}`);\n        }\n\n        let nx = Math.max(na, n.x);\n        n.x = Math.min(nx, right - space(n));\n        right = n.x - space(n);\n      }\n    } // );\n  }\n\n  function argmax(lst) {\n    let val = lst[0];\n    let mi = 0;\n    for (let i = 1; i < lst.length; i++) {\n      if (lst[i] > val) {\n        mi = i;\n        val = lst[i];\n      }\n    }\n    return mi;\n  }\n\n  function argmin(lst) {\n    let val = lst[0];\n    let mi = 0;\n    for (let i = 1; i < lst.length; i++) {\n      if (lst[i] < val) {\n        mi = i;\n        val = lst[i];\n      }\n    }\n    return mi;\n  }\n\n  // greedy pull left\n  // if the average of the children of a parent is to the right of the parent\n  // then this is a candidate to move to the left\n  // a parent should shift its children to the left if they aren't centered\n  levels.forEach(function(level) {\n    let left = 0;\n    level.forEach(function(node) {\n      if (node.primaryChildren.length) {\n        // we can't count on the ordering of the primary children\n        let leftChild =\n          node.primaryChildren[argmin(node.primaryChildren.map(n => n.x))];\n        let rightChild =\n          node.primaryChildren[argmax(node.primaryChildren.map(n => n.x))];\n        // console.log(`$N:${node.name} LC:${leftChild.name} RC:${rightChild.name} Left:${left}`)\n        // figure out how much shift we want\n        let goalDelta = average(node.primaryChildren.map(n => n.x)) - node.x;\n        if (goalDelta > 0) {\n          // we want to shift left, but how much can we\n          let maxShift = leftChild.x - (left + space(leftChild));\n          let shift = Math.min(maxShift, goalDelta);\n          if (shift > 0) {\n            node.primaryChildren.forEach(n => (n.x -= shift));\n          }\n        }\n        // put the boundary to the right of the rightmost child\n        left = rightChild.x + space(rightChild);\n      }\n    });\n  });\n\n  console.log(`Final Lengths = ${xLength(graph)}`);\n\n  // Report Out\n  console.log(\n    `${graph.nodes.length} nodes (w/phantoms), ${graph.links.length} links (w/phantoms)`\n  );\n  console.log(`${graph.constraints.length} constraints`);\n}\n\n/**\n * New version - use tree layout first (which will be too wide) and then try to do some packing for conciseness\n * @param {Graph} graph\n */\nexport function treeLayout(graph) {\n  // parameters (should be passed)\n  const topmargin = 50;\n  const levelSep = 65;\n\n  const vertexRadius = 5;\n  const phantomRadius = 2;\n  const spacer = 2;\n\n  function space(node) {\n    return spacer + (node.phantom ? phantomRadius : vertexRadius);\n  }\n\n  function minwid(node) {\n    return spacer + 2 * (node.phantom ? phantomRadius : vertexRadius);\n  }\n\n  const levels = graph.getLevels();\n\n  // compute various vertex properties - needs to be done from bottom to top\n  for (let li = levels.length - 1; li >= 0; li--) {\n    const level = levels[li];\n    // figure out the twidth of each node - the twidth includes the \"left\" spacer\n    level.forEach(function(node) {\n      // jshint ignore:line\n      node.twidth = Math.max(\n        minwid(node),\n        sum(node.primaryChildren.map(n => n.twidth))\n      );\n    });\n  }\n\n  // in theory, if we use the twidths, we shoud get a left leaning tree layout\n  levels.forEach(function(level, li) {\n    let left = vertexRadius;\n    level.forEach(function(node) {\n      node.x = Math.max(\n        left + space(node),\n        node.primaryParent ? node.primaryParent.x : 0\n      );\n      node.y = topmargin + li * levelSep;\n      // left += node.twidth;\n      left = node.x - space(node) + node.twidth;\n    });\n  });\n\n  // we have a left leaning tree, center parents over their kids (if we can move them that far right)\n  for (let ni = graph.nodes.length - 1; ni >= 0; ni--) {\n    const node = graph.nodes[ni];\n    if (node.primaryChildren.length) {\n      const goalX = average(node.primaryChildren.map(n => n.x));\n      const neighbor = graph.nodes[ni + 1];\n      if (neighbor.longest == node.longest) {\n        const maxX = neighbor.x - space(node) - space(neighbor) + spacer;\n        node.x = Math.min(maxX, goalX);\n      } else {\n        node.x = goalX;\n      }\n    }\n  }\n}\n","<template>\n  <v-layout row wrap>\n    <v-flex md12>\n      <v-card :max-height=\"maxCardHeight\" :color=\"$vuetify.theme.themes[this.$store.getters.getCurrentThemeMode].background\">\n        <v-card-title class=\"justify-center\">\n          <h4 class=\"view-title\">Graph View</h4>\n          <v-spacer />\n          <v-chip v-if=\"cellType1\" class=\"ma-2\">{{ cellType1 }}</v-chip>\n          <v-chip v-if=\"cellType2\" class=\"ma-2\">{{ cellType2 }}</v-chip>\n        </v-card-title>\n        <v-card-text>\n          <div ref=\"graph\" id=\"graph\"></div>\n        </v-card-text>\n      </v-card>\n    </v-flex>\n  </v-layout>\n</template>\n\n<script>\n/* eslint-disable */\nimport * as d3 from \"d3\";\nimport _ from \"lodash\";\n\nimport * as config from \"@/config\";\nimport * as util from \"@/util\";\n\nimport { analyzeGraph } from \"@/apis/graph.js\";\nimport { average, countCrossingsGraph, simpleSorter } from \"@/apis/utils.js\";\nimport { drawGraph } from \"@/apis/draw.js\";\nimport { jsonToGraph } from \"@/apis/structure.js\";\nimport { primaryParent } from \"@/apis/tangler.js\";\nimport { treeLayout } from \"@/apis/layout.js\";\n\nexport default {\n  name: \"cell-graph\",\n  props: {\n    cellData: Object\n  },\n  mounted() {\n    this.fetchData();\n  },\n  data() {\n    return {\n      cellType1: \"\",\n      cellType2: \"\",\n      keyValueDict: {},\n      listLocalCopy: [],\n      listSize: config.MAX_SELECTED_CELL_TYPE_NUMBER,\n      loaded: false,\n      loadedDictData: {},\n      maxCardHeight: config.FIRST_ROW_CARD_MAX_HEIGHT,\n      selectedCellName: \"\",\n      pathsDict: {}\n    };\n  },\n  methods: {\n    async fetchData() {\n      let data = await d3.json(\"./top_abs_10_dict.json\");\n      this.loadedDictData = data;\n    },\n\n    /**\n     * If any of these edge cases nodes are contained,\n     * return true (need to fade the edge in current case)\n     */\n    linkArrayEdgeCases(edgeCaseCheck) {\n      return (\n        edgeCaseCheck === \"cell\" ||\n        edgeCaseCheck === \"native cell\" ||\n        edgeCaseCheck === \"eukaryotic cell\"\n      );\n    },\n\n    /**\n     * Draw, layout and show graph on view\n     */\n    showGraph() {\n      let graph = jsonToGraph(this.cellData);\n      analyzeGraph(graph);\n      primaryParent(graph);\n      for (let i = 0; i < 20; i++) {\n        simpleSorter(graph, 3, i);\n      }\n      graph.links.forEach(\n        link =>\n          (link.color =\n            link.target.primaryParent == link.source ? \"#42b983\" : \"#42b983\")\n      );\n      treeLayout(graph);\n      drawGraph(graph, this.$refs.graph, this);\n    }\n  },\n  computed: {\n    geneSelected: {\n      get() {\n        return this.$store.getters.getGeneSelected;\n      }\n    },\n    cellSelected: {\n      get() {\n        return this.$store.getters.getCellSelected;\n      }\n    },\n    topGeneCellList: {\n      get() {\n        return this.$store.getters.getTopGeneCellList;\n      }\n    },\n    search: {\n      get() {\n        return this.$store.getters.getSearch;\n      },\n      set(value) {\n        return this.$store.dispatch(\"changeSearch\", value);\n      }\n    }\n  },\n  watch: {\n    // This is entry point of where the graph starts rendering\n    cellData() {\n      this.loaded = true;\n      this.listLocalCopy = util.GENERATE_LIST_COPY(this.cellData);\n      // Create a key(cell name) value(cell neighbors) list dict\n      const keys = Object.entries(this.listLocalCopy);\n      keys.forEach(item => {\n        this.keyValueDict[item[1][0]] = item[1][1];\n      });\n\n      for (let i = 0; i < this.listLocalCopy.length; i++) {\n        this.listLocalCopy[i].push(i.toString());\n      }\n      this.showGraph();\n    },\n    cellSelected() {\n      let curList = this.cellSelected;\n      this.cellType1 = \"\";\n      this.cellType2 = \"\";\n\n      if (curList.length == 1) {\n        this.cellType1 = curList[0];\n      } else if (curList.length == 2) {\n        this.cellType1 = curList[0];\n        this.cellType2 = curList[1];\n      }\n      // Set all cell nodes back to default\n      let svgClear = d3.select(this.$refs.graph).select(\"svg\");\n      svgClear\n        .selectAll(\".cell\")\n        .style(\"r\", config.NODE_RADIUS_DEFAULT)\n        .transition()\n        .style(\"fill\", config.CELL_TYPE_DEFAULT_COLOR);\n      // Highlight the node being selected\n      for (let i = 0; i < curList.length; i++) {\n        let svgHighlight = d3.select(this.$refs.graph).select(\"svg\");\n        svgHighlight\n          .select(\"#circle-\" + util.FORMAT_TO_ID(curList[i]))\n          .style(\"r\", config.NODE_RADIUS_POPPED)\n          .transition()\n          .style(\"fill\", config.CELL_TYPE_CHANGED_COLOR);\n      }\n    },\n    // Maintain selected cell type in display list\n    selectedCellName() {\n      let curList = this.cellSelected;\n      while (curList.length >= this.listSize) {\n        curList.pop();\n      }\n      curList.push(this.selectedCellName);\n      this.$store.dispatch(\"changeCellSelected\", curList);\n    },\n    /**\n     * Fade cell types that does not contain selected gene as top 10\n     */\n    geneSelected() {\n      let globalThis = this;\n      let dict = this.loadedDictData;\n      /* Reset default cell opacity(1) */\n      let cellReset = d3.select(this.$refs.graph).select(\"svg\");\n      cellReset = d3.selectAll(\".cell\").style(\"opacity\", 1);\n      /* Reset link opacity(1) and width(0.5) */\n      let linkReset = d3.select(this.$refs.graph).select(\"svg\");\n      linkReset = d3\n        .selectAll(\".link\")\n        .style(\"opacity\", 1.0)\n        .attr(\"stroke-width\", 0.5);\n\n      if (this.geneSelected === \"\") {\n        return;\n      }\n\n      let cellTypesThatFitCriteria = new Set();\n\n      /* Determine if each cell type contain selected gene as its top 10 */\n      for (const cellType of Object.entries(dict)) {\n        let cellName = cellType[0];\n        let cellValues = cellType[1];\n        let geneExist = false;\n        for (const gene of cellValues) {\n          let geneName = gene[2];\n          if (this.geneSelected === geneName) {\n            geneExist = true;\n            break;\n          }\n        }\n        /* If a gene is not among a cell type's top 10 */\n        if (!geneExist) {\n          /* Fade the cell type on graph */\n          let svgFade = d3.select(this.$refs.graph).select(\"svg\");\n          svgFade\n            .select(\"#circle-\" + util.FORMAT_TO_ID(cellName))\n            .style(\"opacity\", 0.2);\n        } else {\n          /* Add it to the cell type set */\n          cellTypesThatFitCriteria.add(\n            cellName\n              .replace(/-/g, \" \")\n              .replace(/\\(/g, \"\")\n              .replace(/\\)/g, \"\")\n              .replace(/,/, \"\")\n              .replace(/\\//g, \"-\")\n          );\n        }\n      }\n\n      /**\n       * Current edge cases of nodes that needs to be manually faded,\n       * need to figure out what happened here.\n       */\n      let svgEdgeCase1 = d3.select(this.$refs.graph).select(\"svg\");\n      svgEdgeCase1\n        .select(\"#circle-\" + util.FORMAT_TO_ID(\"cell\"))\n        .style(\"opacity\", 0.2);\n      let svgEdgeCase2 = d3.select(this.$refs.graph).select(\"svg\");\n      svgEdgeCase2\n        .select(\"#circle-\" + util.FORMAT_TO_ID(\"native cell\"))\n        .style(\"opacity\", 0.2);\n      let svgEdgeCase3 = d3.select(this.$refs.graph).select(\"svg\");\n      svgEdgeCase3\n        .select(\"#circle-\" + util.FORMAT_TO_ID(\"eukaryotic cell\"))\n        .style(\"opacity\", 0.2);\n\n      /**\n       * Fade links does not have both nodes contained in our node set\n       */\n      d3.select(this.$refs.graph)\n        .select(\"svg\")\n        .selectAll(\".link\")\n        .each(function(d) {\n          let linkArray = d3\n            .select(this)\n            .attr(\"id\")\n            .split(\"---\");\n          for (let i = 0; i < linkArray.length; i++) {\n            linkArray[i] = linkArray[i]\n              .replace(/-/g, \" \")\n              .replace(/\\(/g, \"\")\n              .replace(/\\)/g, \"\")\n              .replace(/,/, \"\")\n              .replace(/\\//g, \"-\");\n          }\n          if (\n            !cellTypesThatFitCriteria.has(linkArray[0]) ||\n            !cellTypesThatFitCriteria.has(linkArray[1]) ||\n            globalThis.linkArrayEdgeCases(linkArray[0]) ||\n            globalThis.linkArrayEdgeCases(linkArray[1])\n          ) {\n            d3.select(this).style(\"opacity\", 0.2);\n          } else {\n            // Increase the stroke width if fit all the criteria\n            d3.select(this).attr(\"stroke-width\", 3);\n          }\n        });\n    }\n  }\n};\n</script>\n\n<style scoped>\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CellGraph.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CellGraph.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CellGraph.vue?vue&type=template&id=3d896656&scoped=true&\"\nimport script from \"./CellGraph.vue?vue&type=script&lang=js&\"\nexport * from \"./CellGraph.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3d896656\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\",\"align-center\":\"\"}},[_c('v-flex',{attrs:{\"md12\":\"\"}},[_c('v-card',{style:({\n        background:\n          _vm.$vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n            .background\n      }),attrs:{\"max-height\":\"595\"}},[_c('v-card-title',{staticClass:\"justify-center\"},[_c('h4',{staticClass:\"view-title\"},[_vm._v(\"Gene Details View\")]),_c('v-spacer'),_c('v-btn',{attrs:{\"medium\":\"\",\"color\":\"red\",\"justify-right\":\"\",\"dark\":\"\"},on:{\"click\":_vm.removeGeneDetails}},[_c('v-icon',{attrs:{\"dark\":\"\"}},[_vm._v(\"remove_circle\")])],1)],1),_c('v-card-text',[_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[(_vm.geneNotEmpty())?_c('v-flex',{attrs:{\"md9\":\"\",\"sm12\":\"\"}},[_c('v-text-field',{attrs:{\"append-icon\":\"search\",\"label\":\"search\",\"single-line\":\"\",\"hide-details\":\"\",\"hide-no-data\":\"\"},model:{value:(_vm.search),callback:function ($$v) {_vm.search=$$v},expression:\"search\"}})],1):_vm._e(),_c('v-spacer'),(_vm.geneNotEmpty())?_c('v-flex',{attrs:{\"md3\":\"\",\"sm12\":\"\"}},[_c('v-select',{attrs:{\"items\":_vm.sortOptions,\"label\":\"sort\"},on:{\"input\":_vm.sortBasedOnOption},model:{value:(_vm.option),callback:function ($$v) {_vm.option=$$v},expression:\"option\"}})],1):_vm._e()],1),_c('v-layout',[(_vm.geneNotEmpty())?_c('v-flex',[_c('h3',{staticClass:\"sub-title\"},[_vm._v(\"Gene: \"+_vm._s(_vm.geneSelectedPresentedName))]),_c('div',{staticClass:\"gene-description\"},[_vm._v(_vm._s(_vm.geneSelectedDescription))]),_c('v-list',{staticClass:\"list\",class:{ 'max-height': _vm.listHeight },style:({\n                background:\n                  _vm.$vuetify.theme.themes[\n                    this.$store.getters.getCurrentThemeMode\n                  ].background\n              })},_vm._l((_vm.filteredGeneCellList),function(value,index){return _c('v-list-item',{key:index,on:{\"click\":function($event){return _vm.setCellSelected(value[0])}}},[_c('v-layout',[_c('v-flex',{staticClass:\"index\",attrs:{\"md3\":\"\",\"offset-md1\":\"\"}},[_vm._v(_vm._s(value[0])+\": \")]),_c('v-flex',{attrs:{\"md6\":\"\",\"offset-md1\":\"\"}},[_c('span',[_c('v-tooltip',{attrs:{\"top\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\n              var on = ref.on;\nreturn [_c('v-progress-linear',_vm._g({attrs:{\"value\":_vm.setGeneIndexBarChartRatio(value, 0),\"color\":_vm.setGeneIndexBarChartColor(value, 1),\"height\":\"15\",\"rounded\":\"\",\"striped\":\"\",\"reactive\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\n              var value = ref.value;\nreturn [_vm._v(\" \"+_vm._s(((value / 100) * _vm.maxGeneMagnitude).toFixed( _vm.fixedGeneDigits ))+\" \")]}}],null,true)},on))]}}],null,true)},[_c('span',[_vm._v(_vm._s(value[1]))])])],1)])],1)],1)}),1)],1):_vm._e()],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-layout row wrap align-center>\n    <v-flex md12>\n      <v-card\n        max-height=\"595\"\n        :style=\"{\n          background:\n            $vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n              .background\n        }\"\n      >\n        <v-card-title class=\"justify-center\">\n          <h4 class=\"view-title\">Gene Details View</h4>\n          <v-spacer></v-spacer>\n          <v-btn\n            medium\n            color=\"red\"\n            justify-right\n            dark\n            @click=\"removeGeneDetails\"\n          >\n            <v-icon dark>remove_circle</v-icon>\n          </v-btn>\n        </v-card-title>\n        <v-card-text>\n          <v-layout row wrap>\n            <v-flex md9 sm12 v-if=\"geneNotEmpty()\">\n              <v-text-field\n                v-model=\"search\"\n                append-icon=\"search\"\n                label=\"search\"\n                single-line\n                hide-details\n                hide-no-data\n              ></v-text-field>\n            </v-flex>\n            <v-spacer />\n            <v-flex md3 sm12 v-if=\"geneNotEmpty()\">\n              <v-select\n                v-model=\"option\"\n                :items=\"sortOptions\"\n                @input=\"sortBasedOnOption\"\n                label=\"sort\"\n              ></v-select>\n            </v-flex>\n          </v-layout>\n          <v-layout>\n            <v-flex v-if=\"geneNotEmpty()\">\n              <h3 class=\"sub-title\">Gene: {{ geneSelectedPresentedName }}</h3>\n              <div class=\"gene-description\">{{ geneSelectedDescription }}</div>\n              <v-list\n                :class=\"{ 'max-height': listHeight }\"\n                class=\"list\"\n                :style=\"{\n                  background:\n                    $vuetify.theme.themes[\n                      this.$store.getters.getCurrentThemeMode\n                    ].background\n                }\"\n              >\n                <v-list-item\n                  v-for=\"(value, index) in filteredGeneCellList\"\n                  :key=\"index\"\n                  @click=\"setCellSelected(value[0])\"\n                >\n                  <v-layout>\n                    <v-flex md3 offset-md1 class=\"index\"\n                      >{{ value[0] }}:&nbsp;</v-flex\n                    >\n                    <v-flex md6 offset-md1>\n                      <span>\n                        <v-tooltip top>\n                          <template v-slot:activator=\"{ on }\">\n                            <v-progress-linear\n                              :value=\"setGeneIndexBarChartRatio(value, 0)\"\n                              :color=\"setGeneIndexBarChartColor(value, 1)\"\n                              height=\"15\"\n                              v-on=\"on\"\n                              rounded\n                              striped\n                              reactive\n                            >\n                              <template v-slot=\"{ value }\">\n                                {{\n                                  ((value / 100) * maxGeneMagnitude).toFixed(\n                                    fixedGeneDigits\n                                  )\n                                }}\n                              </template>\n                            </v-progress-linear>\n                          </template>\n                          <span>{{ value[1] }}</span>\n                        </v-tooltip>\n                      </span>\n                    </v-flex>\n                  </v-layout>\n                </v-list-item>\n              </v-list>\n            </v-flex>\n          </v-layout>\n        </v-card-text>\n      </v-card>\n    </v-flex>\n  </v-layout>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\n\nexport default {\n  name: \"gene-details\",\n  props: [],\n  mounted() {\n    // Fetch gene data once mounted\n    this.fetchData();\n  },\n  data() {\n    return {\n      cellTypeNames: [],\n      filteredList: [],\n      fixedGeneDigits: 5,\n      geneSelectedPresentedName: \"\",\n      geneSelectedDescription: \"\",\n      listHeight: \"400px\",\n      loadedDictData: {},\n      loadedGeneIdToNameDict: {},\n      loadedGeneIdToDescriptionDict: {},\n      maxGeneMagnitude: 0.14907,\n      sortOptions: [\"default\", \"strength\", \"magnitude\", \"cell type name\"]\n    };\n  },\n  methods: {\n    async fetchData() {\n      this.loadedDictData = await d3.json(\"./top_abs_10_dict.json\");\n      this.loadedGeneIdToNameDict = await d3.json(\"./gene_id_to_name.json\");\n      this.loadedGeneIdToDescriptionDict = await d3.json(\n        \"gene_id_to_description.json\"\n      );\n    },\n    filterBySearchList(list) {\n      let globalThis = this;\n      let filterBySearchList = [];\n      list.forEach(element => {\n        let lowerCaseElement = element[0].toLowerCase();\n        if (lowerCaseElement.includes(globalThis.search.toLowerCase())) {\n          filterBySearchList.push(element);\n        }\n      });\n      return filterBySearchList;\n    },\n    geneNotEmpty() {\n      return this.geneSelected !== \"\";\n    },\n    navigateToGenePage() {\n      window.open(\n        \"http://useast.ensembl.org/Homo_sapiens/Gene/Summary?g=\" +\n          this.geneSelected\n      );\n    },\n    removeGeneDetails() {\n      this.$store.dispatch(\"changeGeneSelected\", \"\");\n    },\n    returnToDefaultList() {\n      let list = [];\n      let globalThis = this;\n      for (const [key, value] of Object.entries(this.loadedDictData)) {\n        let geneArr = value;\n        for (let i = 0; i < geneArr.length; i++) {\n          if (geneArr[i][2] === globalThis.geneSelected) {\n            let cellName = key;\n            let geneValue = value[i][1].toFixed(this.fixedGeneDigits);\n            list.push([cellName, geneValue]);\n          }\n        }\n      }\n\n      return this.filterBySearchList(list);\n    },\n    setCellSelected(cellName) {\n      let curList = this.$store.getters.getCellSelected;\n      if (curList.length > 1) {\n        curList.pop();\n      }\n      curList.push(cellName);\n      this.$store.dispatch(\"changeCellSelected\", curList);\n    },\n    sortBasedOnOption(option) {\n      switch (option) {\n        case \"default\":\n          return this.filterBySearchList(this.filteredList);\n        case \"strength\":\n          return this.filterBySearchList(\n            this.filteredList.sort((a, b) =>\n              Math.abs(a[1]) > Math.abs(b[1]) ? -1 : 1\n            )\n          );\n        case \"magnitude\":\n          return this.filterBySearchList(\n            this.filteredList.sort((a, b) => (a[1] > b[1] ? -1 : 1))\n          );\n        case \"cell type name\":\n          return this.filterBySearchList(\n            this.filteredList.sort((a,b) => (a[0].toLowerCase() < b[0].toLowerCase() ? -1 : 1))\n          )\n      }\n    },\n    topGeneDataExist(topGenes) {\n      return typeof topGenes[this.geneSelected] !== \"undefined\";\n    },\n\n    setGeneIndexBarChartRatio(geneValues, columnIndex) {\n      let globalThis = this;\n      let value = geneValues[1];\n      if (columnIndex == 0) {\n        return Math.abs(\n          ((value / globalThis.maxGeneMagnitude) * 100).toFixed(\n            globalThis.fixedGeneDigits\n          )\n        );\n      }\n    },\n\n    setGeneIndexBarChartColor(geneValues) {\n      let value = geneValues[1];\n      if (value >= 0) {\n        return \"primary\";\n      } else {\n        return \"pink\";\n      }\n    }\n  },\n  computed: {\n    filteredGeneCellList() {\n      return this.$store.getters.getGeneSearchOption === \"default\"\n        ? this.returnToDefaultList()\n        : this.sortBasedOnOption(this.$store.getters.getGeneSearchOption);\n    },\n    geneSelected: {\n      get() {\n        return this.$store.getters.getGeneSelected;\n      },\n      set(option) {\n        this.$store.dispatch(\"changeGeneSelected\", option);\n      }\n    },\n    option: {\n      get() {\n        return this.$store.getters.getGeneSearchOption;\n      },\n      set(option) {\n        this.$store.dispatch(\"changeGeneSearchOption\", option);\n      }\n    },\n    search: {\n      get() {\n        return this.$store.getters.getCellInGeneSearch;\n      },\n      set(input) {\n        this.$store.dispatch(\"changeCellInGeneSearch\", input);\n      }\n    }\n  },\n  watch: {\n    geneSelected() {\n      // Change sorting back to default\n      this.$store.dispatch(\"changeGeneSearchOption\", \"default\");\n      let globalThis = this;\n      // Clear both local list and store to receive updated values\n      globalThis.filteredList = [];\n      this.$store.dispatch(\"changeTopGeneCellList\", []);\n      this.geneSelectedPresentedName = this.loadedGeneIdToNameDict[\n        this.geneSelected\n      ];\n      this.geneSelectedDescription = this.loadedGeneIdToDescriptionDict[\n        this.geneSelected\n      ];\n\n      for (const [key, value] of Object.entries(this.loadedDictData)) {\n        let geneArr = value;\n        for (let i = 0; i < geneArr.length; i++) {\n          if (geneArr[i][2] === globalThis.geneSelected) {\n            let cellName = key;\n            let geneValue = value[i][1];\n            globalThis.filteredList.push([cellName, geneValue]);\n            globalThis.$store.dispatch(\"addToTopGeneCellList\", [\n              cellName,\n              geneValue\n            ]);\n          }\n        }\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\nv-card-title {\n  margin: 100px;\n}\n.list {\n  max-height: 355px;\n  overflow-y: auto;\n}\n.gene-web-link {\n  text-align: left;\n  margin-top: 10px;\n  text-decoration: underline;\n}\n.gene-description {\n  text-align: left;\n  font-weight: normal;\n  font-size: medium;\n  margin-top: 10px;\n  color: \"#fff\";\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GeneDetails.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GeneDetails.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GeneDetails.vue?vue&type=template&id=4b3d4f00&scoped=true&\"\nimport script from \"./GeneDetails.vue?vue&type=script&lang=js&\"\nexport * from \"./GeneDetails.vue?vue&type=script&lang=js&\"\nimport style0 from \"./GeneDetails.vue?vue&type=style&index=0&id=4b3d4f00&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4b3d4f00\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\",\"align-center\":\"\"}},[_c('v-flex',{attrs:{\"md12\":\"\"}},[_c('v-card',{style:({\n        background:\n          _vm.$vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n            .background\n      }),attrs:{\"max-height\":\"1300\"}},[_c('v-card-title',[_c('h4',{staticClass:\"view-title\"},[_vm._v(\"Cell Details View\")]),_c('v-spacer'),_c('v-btn',{attrs:{\"medium\":\"\",\"color\":\"red\",\"justify-right\":\"\",\"dark\":\"\"},on:{\"click\":_vm.removeCellSelected}},[_c('v-icon',{attrs:{\"dark\":\"\"}},[_vm._v(\"remove_circle\")])],1)],1),_c('v-card-text',[_c('v-layout',{attrs:{\"row\":\"\"}},[_c('v-flex',{attrs:{\"md12\":\"\",\"sm12\":\"\"}},[_c('v-layout',[_c('v-flex',{attrs:{\"md9\":\"\",\"sm12\":\"\"}},[_c('v-text-field',{attrs:{\"append-icon\":\"search\",\"label\":\"search\",\"single-line\":\"\",\"hide-details\":\"\",\"hide-no-data\":\"\"},model:{value:(_vm.search),callback:function ($$v) {_vm.search=$$v},expression:\"search\"}})],1),_c('v-flex',{attrs:{\"md3\":\"\",\"sm12\":\"\"}},[_c('v-select',{attrs:{\"items\":_vm.sortOptions,\"label\":\"sort\"},on:{\"input\":_vm.sortBasedOnOption},model:{value:(_vm.option),callback:function ($$v) {_vm.option=$$v},expression:\"option\"}})],1)],1),_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[(_vm.cellSelectedExist && _vm.geneDataExist(_vm.cellSelected[0]))?_c('v-flex',{attrs:{\"md6\":\"\",\"sm6\":\"\"}},[_c('h3',{staticClass:\"sub-title\"},[_vm._v(_vm._s(_vm.cellSelected[0]))]),_c('v-list',{staticClass:\"list\",style:({\n                    background:\n                      _vm.$vuetify.theme.themes[\n                        this.$store.getters.getCurrentThemeMode\n                      ].background\n                  })},_vm._l((_vm.filteredData[0]),function(value,index){return _c('v-list-item',{key:index,class:[\n                      value[2] === _vm.geneNameOnHover ? 'highlight-theme' : ''\n                    ],attrs:{\"color\":_vm.setOverlapGeneBackgroundColor(index, value, 0),\"input-value\":\"true\",\"dense\":\"\"},on:{\"click\":function($event){return _vm.setGeneItem(value)},\"mouseover\":function($event){return _vm.setGeneNameOnHover(index, value)},\"mouseleave\":function($event){return _vm.clearGeneNameOnHover()}}},[_c('v-layout',[_c('v-flex',{attrs:{\"md5\":\"\",\"sm5\":\"\"}},[_c('span',{staticClass:\"index\"},[_vm._v(_vm._s(_vm.loadedGeneIdToNameDict[value[2]])+\":\")])]),_c('v-flex',{attrs:{\"md7\":\"\",\"sm7\":\"\"}},[_c('span',[_c('v-tooltip',{attrs:{\"top\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\n                    var on = ref.on;\nreturn [_c('v-progress-linear',_vm._g({attrs:{\"value\":_vm.setGeneIndexBarChartRatio(\n                                    (\"\" + index),\n                                    (\"\" + value)\n                                  ),\"color\":_vm.setGeneIndexBarChartColor(\n                                    (\"\" + index),\n                                    (\"\" + value)\n                                  ),\"height\":\"15\",\"rounded\":\"\",\"striped\":\"\",\"reactive\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\n                                  var value = ref.value;\nreturn [_vm._v(\" \"+_vm._s(( (value / 100) * _vm.maxGeneMagnitude ).toFixed(_vm.fixedGeneDigits))+\" \")]}}],null,true)},on))]}}],null,true)},[_c('span',[_vm._v(_vm._s(value[1]))])])],1)])],1)],1)}),1)],1):_vm._e(),(\n                  _vm.cellSelected.length == 2 && _vm.geneDataExist(_vm.cellSelected[1])\n                )?_c('v-flex',{attrs:{\"md6\":\"\",\"sm6\":\"\"}},[_c('h3',{staticClass:\"sub-title\"},[_vm._v(_vm._s(_vm.cellSelected[1]))]),_c('v-list',{staticClass:\"list\",style:({\n                    background:\n                      _vm.$vuetify.theme.themes[\n                        this.$store.getters.getCurrentThemeMode\n                      ].background\n                  })},_vm._l((_vm.filteredData[1]),function(value,index){return _c('v-list-item',{key:index,class:[\n                      value[2] === _vm.geneNameOnHover ? 'highlight-theme' : ''\n                    ],attrs:{\"color\":_vm.setOverlapGeneBackgroundColor(index, value, 1),\"input-value\":\"true\",\"dense\":\"\"},on:{\"click\":function($event){return _vm.setGeneItem(value)},\"mouseover\":function($event){return _vm.setGeneNameOnHover(index, value)},\"mouseleave\":function($event){return _vm.clearGeneNameOnHover()}}},[_c('v-layout',[_c('v-flex',{attrs:{\"md5\":\"\",\"sm12\":\"\"}},[_c('span',{staticClass:\"index\"},[_vm._v(_vm._s(_vm.loadedGeneIdToNameDict[value[2]])+\":\")])]),_c('v-flex',{attrs:{\"md7\":\"\",\"sm12\":\"\"}},[_c('span',[_c('v-tooltip',{attrs:{\"top\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\n                    var on = ref.on;\nreturn [_c('v-progress-linear',_vm._g({attrs:{\"value\":_vm.setGeneIndexBarChartRatio(\n                                    (\"\" + index),\n                                    (\"\" + value)\n                                  ),\"color\":_vm.setGeneIndexBarChartColor(\n                                    (\"\" + index),\n                                    (\"\" + value)\n                                  ),\"height\":\"15\",\"rounded\":\"\",\"striped\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\n                                  var value = ref.value;\nreturn [_vm._v(\" \"+_vm._s(( (value / 100) * _vm.maxGeneMagnitude ).toFixed(_vm.fixedGeneDigits))+\" \")]}}],null,true)},on))]}}],null,true)},[_c('span',[_vm._v(_vm._s(value[1]))])])],1)])],1)],1)}),1)],1):_vm._e()],1)],1)],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-layout row wrap align-center>\n    <v-flex md12>\n      <v-card\n        max-height=\"1300\"\n        :style=\"{\n          background:\n            $vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n              .background\n        }\"\n      >\n        <v-card-title>\n          <h4 class=\"view-title\">Cell Details View</h4>\n          <v-spacer></v-spacer>\n          <v-btn\n            medium\n            color=\"red\"\n            justify-right\n            dark\n            @click=\"removeCellSelected\"\n          >\n            <v-icon dark>remove_circle</v-icon>\n          </v-btn>\n        </v-card-title>\n\n        <v-card-text>\n          <v-layout row>\n            <v-flex md12 sm12>\n              <v-layout>\n                <!-- Search Box -->\n                <v-flex md9 sm12>\n                  <v-text-field\n                    v-model=\"search\"\n                    append-icon=\"search\"\n                    label=\"search\"\n                    single-line\n                    hide-details\n                    hide-no-data\n                  ></v-text-field>\n                </v-flex>\n\n                <!-- Sort Box -->\n                <v-flex md3 sm12>\n                  <v-select\n                    v-model=\"option\"\n                    :items=\"sortOptions\"\n                    @input=\"sortBasedOnOption\"\n                    label=\"sort\"\n                  ></v-select>\n                </v-flex>\n              </v-layout>\n\n              <!-- Cell Type Top Gene list -->\n              <v-layout row wrap>\n                <v-flex\n                  md6\n                  sm6\n                  v-if=\"cellSelectedExist && geneDataExist(cellSelected[0])\"\n                >\n                  <h3 class=\"sub-title\">{{ cellSelected[0] }}</h3>\n                  <v-list\n                    class=\"list\"\n                    :style=\"{\n                      background:\n                        $vuetify.theme.themes[\n                          this.$store.getters.getCurrentThemeMode\n                        ].background\n                    }\"\n                  >\n                    <v-list-item\n                      :color=\"setOverlapGeneBackgroundColor(index, value, 0)\"\n                      input-value=\"true\"\n                      v-for=\"(value, index) in filteredData[0]\"\n                      :key=\"index\"\n                      dense\n                      @click=\"setGeneItem(value)\"\n                      @mouseover=\"setGeneNameOnHover(index, value)\"\n                      @mouseleave=\"clearGeneNameOnHover()\"\n                      :class=\"[\n                        value[2] === geneNameOnHover ? 'highlight-theme' : ''\n                      ]\"\n                    >\n                      <v-layout>\n                        <v-flex md5 sm5>\n                          <span class=\"index\"\n                            >{{ loadedGeneIdToNameDict[value[2]] }}:</span\n                          >\n                        </v-flex>\n                        <v-flex md7 sm7>\n                          <span>\n                            <v-tooltip top>\n                              <template v-slot:activator=\"{ on }\">\n                                <v-progress-linear\n                                  :value=\"\n                                    setGeneIndexBarChartRatio(\n                                      `${index}`,\n                                      `${value}`\n                                    )\n                                  \"\n                                  :color=\"\n                                    setGeneIndexBarChartColor(\n                                      `${index}`,\n                                      `${value}`\n                                    )\n                                  \"\n                                  height=\"15\"\n                                  v-on=\"on\"\n                                  rounded\n                                  striped\n                                  reactive\n                                >\n                                  <template v-slot=\"{ value }\">\n                                    {{\n                                      (\n                                        (value / 100) *\n                                        maxGeneMagnitude\n                                      ).toFixed(fixedGeneDigits)\n                                    }}\n                                  </template></v-progress-linear\n                                >\n                              </template>\n                              <span>{{ value[1] }}</span>\n                            </v-tooltip>\n                          </span>\n                        </v-flex>\n                      </v-layout>\n                    </v-list-item>\n                  </v-list>\n                </v-flex>\n                <v-flex\n                  md6\n                  sm6\n                  v-if=\"\n                    cellSelected.length == 2 && geneDataExist(cellSelected[1])\n                  \"\n                >\n                  <h3 class=\"sub-title\">{{ cellSelected[1] }}</h3>\n                  <v-list\n                    class=\"list\"\n                    :style=\"{\n                      background:\n                        $vuetify.theme.themes[\n                          this.$store.getters.getCurrentThemeMode\n                        ].background\n                    }\"\n                  >\n                    <v-list-item\n                      :color=\"setOverlapGeneBackgroundColor(index, value, 1)\"\n                      input-value=\"true\"\n                      v-for=\"(value, index) in filteredData[1]\"\n                      :key=\"index\"\n                      dense\n                      @click=\"setGeneItem(value)\"\n                      @mouseover=\"setGeneNameOnHover(index, value)\"\n                      @mouseleave=\"clearGeneNameOnHover()\"\n                      :class=\"[\n                        value[2] === geneNameOnHover ? 'highlight-theme' : ''\n                      ]\"\n                    >\n                      <v-layout>\n                        <v-flex md5 sm12>\n                          <span class=\"index\"\n                            >{{ loadedGeneIdToNameDict[value[2]] }}:</span\n                          >\n                        </v-flex>\n                        <v-flex md7 sm12>\n                          <span>\n                            <v-tooltip top>\n                              <template v-slot:activator=\"{ on }\">\n                                <v-progress-linear\n                                  :value=\"\n                                    setGeneIndexBarChartRatio(\n                                      `${index}`,\n                                      `${value}`\n                                    )\n                                  \"\n                                  :color=\"\n                                    setGeneIndexBarChartColor(\n                                      `${index}`,\n                                      `${value}`\n                                    )\n                                  \"\n                                  height=\"15\"\n                                  v-on=\"on\"\n                                  rounded\n                                  striped\n                                >\n                                  <template v-slot=\"{ value }\">\n                                    {{\n                                      (\n                                        (value / 100) *\n                                        maxGeneMagnitude\n                                      ).toFixed(fixedGeneDigits)\n                                    }}\n                                  </template>\n                                </v-progress-linear>\n                              </template>\n                              <span>{{ value[1] }}</span>\n                            </v-tooltip>\n                          </span>\n                        </v-flex>\n                      </v-layout>\n                    </v-list-item>\n                  </v-list>\n                </v-flex>\n              </v-layout>\n            </v-flex>\n          </v-layout>\n        </v-card-text>\n      </v-card>\n    </v-flex>\n  </v-layout>\n</template>\n\n<script>\n/* eslint-disable */\nimport * as d3 from \"d3\";\nimport _ from \"lodash\";\nimport { COLOR_RAMP } from \"../config\";\n\nexport default {\n  name: \"cell-details\",\n  props: [],\n  mounted() {\n    this.fetchData();\n  },\n  data() {\n    return {\n      cardHighlight: false,\n      fixedGeneDigits: 5,\n      maxGeneMagnitude: 0.14907,\n      loadedGeneData: {},\n      loadedGeneIdToNameDict: {},\n      sortOptions: [\"default\", \"magnitude\", \"coordinated\"],\n      geneNameOnHover: \"\"\n    };\n  },\n  methods: {\n    sortBasedOnOption(option) {\n      let globalThis = this;\n      console.log(this.filteredData[0]);\n      switch (option) {\n        case \"default\":\n          this.filteredData[0] = this.loadedGeneData[cellArr[0]];\n          if (this.filteredData.length > 1) {\n            this.filteredData[1] = this.loadedGeneData[cellArr[0]];\n          }\n          return;\n        case \"magnitude\":\n          _.sortBy(globalThis.filteredData[0], (o) => o[1], ['desc'])\n          _.sortBy(globalThis.filteredData[1], (o) => o[1], ['desc'])\n          return;\n        case \"coordinated\":\n          if (globalThis.filteredData.length <= 1) {\n            return;\n          }\n          let itr = 0;\n          // Dict saves cell type name - index pair\n          let cellTypeNameIndexDict = [];\n          for (let i = 0; i < globalThis.filteredData[0].length; i++) {\n            let cellTypeName = globalThis.filteredData[0][i][2];\n            cellTypeNameIndexDict[cellTypeName] = i;\n          }\n          for (let j = 0; j < globalThis.filteredData[1].length; j++) {\n            let cellTypeNameInColumnTwo = globalThis.filteredData[1][j][2];\n\n            if (cellTypeNameInColumnTwo in cellTypeNameIndexDict) {\n              let overlapCellTypeIndex =\n                cellTypeNameIndexDict[cellTypeNameInColumnTwo];\n              this.swapEntryPositions(\n                globalThis.filteredData[0],\n                overlapCellTypeIndex,\n                itr\n              );\n              this.swapEntryPositions(globalThis.filteredData[1], j, itr);\n              itr++;\n            }\n          }\n\n          return;\n      }\n    },\n    swapEntryPositions(list, indexA, indexB) {\n      let temp = list[indexA];\n      list[indexA] = list[indexB];\n      list[indexB] = temp;\n    },\n    async fetchData() {\n      this.loadedGeneData = await d3.json(\"./top_abs_10_dict.json\");\n      this.loadedGeneIdToNameDict = await d3.json(\"./gene_id_to_name.json\");\n    },\n    getDefaultCellTypes() {\n      let cellArr = this.$store.getters.getCellSelected;\n      let geneCellCopy = [];\n      console.log(this.loadedGeneData[cellArr[0]]);\n      geneCellCopy.push(this.loadedGeneData[cellArr[0]]);\n      if (cellArr.length > 1) {\n        geneCellCopy.push(this.loadedGeneData[cellArr[1]]);\n      }\n      return geneCellCopy;\n    },\n    /**\n     * Get gene color by column and gene index, if negative display pink\n     */\n    setGeneIndexBarChartColor(index, value) {\n      let indexGeneValue = parseFloat(value.split(\",\")[1]);\n\n      if (indexGeneValue >= 0) {\n        return \"primary\";\n      } else {\n        return \"pink\";\n      }\n    },\n    setGeneIndexBarChartRatio(index, value) {\n      let globalThis = this;\n      let numberValue = parseFloat(value.split(\",\")[1]);\n      return Math.abs(\n        ((numberValue / globalThis.maxGeneMagnitude) * 100).toFixed(\n          globalThis.fixedGeneDigits\n        )\n      );\n    },\n    setOverlapGeneBackgroundColor(index, value, columnIndex) {\n      let globalThis = this;\n      let cellName = value[2];\n      if (columnIndex == 0) {\n        let filteredDataSecondRow = globalThis.filteredData[1];\n        if (globalThis.filteredData.length > 1) {\n          for (const entry of Object.entries(filteredDataSecondRow)) {\n            let geneValueObject = entry[1];\n            if (geneValueObject[2] === cellName) {\n              return COLOR_RAMP[index];\n            }\n          }\n        }\n      } else if (columnIndex == 1) {\n        let filteredDataFirstRow = globalThis.filteredData[0];\n        for (const entry of Object.entries(filteredDataFirstRow)) {\n          let geneValueObject = entry[1];\n          if (geneValueObject[2] === cellName) {\n            let geneIndexInFirstRow = entry[0];\n            return COLOR_RAMP[geneIndexInFirstRow];\n          }\n        }\n      }\n      return \"#303030\";\n    },\n    sortCells() {\n      let cellArr = this.$store.getters.getCellSelected;\n      let geneCellCopy = [];\n      geneCellCopy.push(\n        this.loadedGeneData[cellArr[0]]\n          .concat()\n          .sort((a, b) => (a[1] < b[1] ? 1 : -1))\n      );\n      if (cellArr.length > 1) {\n        geneCellCopy.push(\n          this.loadedGeneData[cellArr[1]]\n            .concat()\n            .sort((a, b) => (a[1] < b[1] ? 1 : -1))\n        );\n      }\n      return geneCellCopy;\n    },\n    removeCellSelected() {\n      this.$store.dispatch(\"popFromCellSelected\");\n    },\n    setGeneItem(value) {\n      this.$store.dispatch(\"changeGeneSelected\", value[2]);\n    },\n    setGeneNameOnHover(index, value) {\n      this.geneNameOnHover = value[2];\n    },\n    cellSelectedExist() {\n      return this.$store.getters.getCellSelected.length !== 0;\n    },\n    clearGeneNameOnHover() {\n      this.geneNameOnHover = \"\";\n    },\n    geneDataExist(cellTypeName) {\n      if (this.loadedGeneData[cellTypeName] === undefined) {\n        return false;\n      }\n      return true;\n    }\n  },\n  computed: {\n    cellSelected: {\n      get() {\n        return this.$store.getters.getCellSelected;\n      }\n    },\n    currentCellTypes() {\n      return this.$store.getters.getOption === \"default\"\n        ? this.getDefaultCellTypes()\n        : this.sortCells();\n    },\n    dynamicData() {\n      if (this.geneCellCopy1.length == 0) {\n        return;\n      } else {\n        return this.$store.getters.getCellDetails;\n      }\n    },\n    filteredData() {\n      let globalThis = this;\n      if (this.$store.getters.getGeneSearch === \"\") {\n        return this.currentCellTypes;\n      } else {\n        let resultArr = [];\n        let cellTypes = this.currentCellTypes;\n        let cell1FilteredArray = [];\n        let cell2FilteredArray = [];\n        if (cellTypes.length > 1) {\n          cellTypes[1].forEach(element => {\n            // Map the gene id to name before converting to lower case for search matching\n            let lowerCaseElement = globalThis.loadedGeneIdToNameDict[\n              element[2]\n            ].toLowerCase();\n            if (lowerCaseElement.includes(globalThis.search.toLowerCase())) {\n              cell2FilteredArray.push(element);\n            }\n          });\n        }\n        if (cellTypes.length > 0) {\n          cellTypes[0].forEach(element => {\n            // Map the gene id to name before converting to lower case for search matching\n            let lowerCaseElement = globalThis.loadedGeneIdToNameDict[\n              element[2]\n            ].toLowerCase();\n            if (lowerCaseElement.includes(globalThis.search.toLowerCase())) {\n              cell1FilteredArray.push(element);\n            }\n          });\n        }\n        resultArr.push(cell1FilteredArray);\n        resultArr.push(cell2FilteredArray);\n        return resultArr;\n      }\n    },\n    option: {\n      get() {\n        return this.$store.getters.getOption;\n      },\n      set(option) {\n        this.$store.dispatch(\"changeOption\", option);\n      }\n    },\n    search: {\n      get() {\n        return this.$store.getters.getGeneSearch;\n      },\n      set(input) {\n        this.$store.dispatch(\"changeGeneSearch\", input);\n      }\n    },\n    selectedTheme() {\n      return this.onHover === true ? \"highlight-theme\" : \"\";\n    }\n  },\n  watch: {\n    cellSelected() {\n      let cellArr = this.$store.getters.getCellSelected;\n      this.$store.dispatch(\"changeCellDetails\", []);\n      if (cellArr.length === 0) {\n        return;\n      }\n      this.geneCellCopy1 = this.loadedGeneData[cellArr[0]];\n      this.$store.dispatch(\"addToCellDetails\", this.geneCellCopy1);\n\n      let geneDataColumnOne = [];\n      for (const geneData of this.geneCellCopy1) {\n        geneDataColumnOne.push(Number(geneData[1]));\n      }\n\n      if (cellArr.length > 1) {\n        this.geneCellCopy2 = this.loadedGeneData[cellArr[1]];\n        this.$store.dispatch(\"addToCellDetails\", this.geneCellCopy2);\n        let geneDataColumnTwo = [];\n        for (const geneData of this.geneCellCopy2) {\n          geneDataColumnTwo.push(Number(geneData[1]));\n        }\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.message {\n  color: red;\n  text-align: left;\n}\n.geneName {\n  color: #c5050c;\n}\n.highlight-theme {\n  background: #34495e;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CellDetails.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CellDetails.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CellDetails.vue?vue&type=template&id=e4f8390c&scoped=true&\"\nimport script from \"./CellDetails.vue?vue&type=script&lang=js&\"\nexport * from \"./CellDetails.vue?vue&type=script&lang=js&\"\nimport style0 from \"./CellDetails.vue?vue&type=style&index=0&id=e4f8390c&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"e4f8390c\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"app\">\n    <v-app>\n      <!--Header Section-->\n      <v-container fluid>\n        <v-switch\n          color=\"primary\"\n          :label=\"selectedTheme\"\n          v-model=\"goDark\"\n          class=\"switch\"\n        ></v-switch>\n        <Header msg=\"CellO Viewer\" />\n      </v-container>\n\n      <!--Body Section-->\n      <v-container bg grid-list-md fluid>\n        <v-layout row wrap>\n          <!-- \n          Search View \n          -->\n          <v-flex md5>\n            <SearchView :cellData=\"this.$store.getters.getCellTypeGraphData\" />\n          </v-flex>\n          <!-- \n          Graph View \n          -->\n          <v-flex md7>\n            <Graph :cellData=\"this.$store.getters.getCellTypeGraphData\" />\n          </v-flex>\n        </v-layout>\n        <v-layout row wrap>\n          <!-- \n          Gene Details View \n          -->\n          <v-flex md5>\n            <GeneDetails />\n          </v-flex>\n          <!-- \n          Cell Details View \n          -->\n          <v-flex md7>\n            <CellDetails />\n          </v-flex>\n        </v-layout>\n      </v-container>\n    </v-app>\n  </div>\n</template>\n\n<script>\n/**\n * Views\n */\nimport Header from \"@/components/TheHeader.vue\";\nimport SearchView from \"@/components/SearchView.vue\";\nimport Graph from \"@/components/CellGraph.vue\";\nimport GeneDetails from \"@/components/GeneDetails.vue\";\nimport CellDetails from \"@/components/CellDetails.vue\";\n\n/**\n * Packages\n */\nimport * as d3 from \"d3\";\n\nexport default {\n  name: \"app\",\n  components: {\n    Header,\n    SearchView,\n    Graph,\n    GeneDetails,\n    CellDetails\n  },\n  mounted() {\n    this.fetchData();\n  },\n  data: function() {\n    return {\n      goDark: true\n    };\n  },\n  methods: {\n    // Fetch all json data and store it in vuex for children components to use\n    async fetchData() {\n      let cellTypeGraphData = await d3.json(\"./cell_type_graph.json\");\n      this.$store.dispatch(\"changeCellTypeGraphData\", cellTypeGraphData);\n    }\n  },\n  computed: {\n    // Display which theme is currently on\n    selectedTheme() {\n      return this.goDark ? \"Dark Theme\" : \"Light Theme\";\n    },\n    // Toggle between light and dark theme\n    // setTheme() {\n    //   if (this.goDark == true) {\n    //     this.$store.dispatch(\"changeCurrentThemeMode\", \"dark\");\n    //     return (this.$vuetify.theme.dark = true);\n    //   } else {\n    //     this.$store.dispatch(\"changeCurrentThemeMode\", \"light\");\n    //     return (this.$vuetify.theme.dark = false);\n    //   }\n    // }\n  }\n};\n</script>\n\n<style>\n#app {\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n}\n.switch {\n  margin: 20px;\n}\na,\nh3 {\n  color: #42b983;\n}\n.index {\n  color: #42b983;\n  font-weight: bold;\n}\n@import url(\"https://fonts.googleapis.com/css?family=BioRhyme&display=swap\");\n.view-title {\n  font-family: \"BioRhyme\", serif;\n}\n.sub-title {\n  font-weight: bold;\n  text-align: left;\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=1a6c682e&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from \"vue\";\nimport Vuex from \"vuex\";\n\nVue.use(Vuex);\n\nconst state = {\n  cellDetails: [],\n  cellSelected: [],\n  cellSelectedPrevious: \"\",\n  cellTypeGraphData: {},\n  currentThemeMode: \"dark\",\n  topGeneCellList: [],\n  topGeneCellListPrevious: [],\n  topGeneDictData: {},\n  geneSearchOption: \"default\",\n  geneSelected: \"\",\n  optionSelected: \"default\",\n  cellInGeneSearch: \"\",\n  geneSearchFromSearchView: \"\",\n  geneSearch: \"\",\n  search: \"\"\n};\n\nconst mutations = {\n  ADD_TO_CELL_DETAILS(state, payload) {\n    state.cellDetails.push(payload);\n  },\n  CHANGE_CELL_DETAILS(state, payload) {\n    state.cellDetails = payload;\n  },\n  ADD_TO_CELL_SELECTED(state, payload) {\n    state.cellSelected.push(payload);\n  },\n  CHANGE_CELL_SELECTED(state, payload) {\n    state.cellSelected = payload;\n  },\n  POP_FROM_CELL_SELECTED(state) {\n    state.cellSelected.pop();\n  },\n  CHANGE_CELL_TYPE_GRAPH_DATA(state, payload) {\n    state.cellTypeGraphData = payload;\n  },\n  CHANGE_CURRENT_THEME_MODE(state, payload) {\n    state.currentThemeMode = payload;\n  },\n  ADD_TO_TOP_GENE_CELL_LIST(state, payload) {\n    state.topGeneCellList.push(payload);\n  },\n  CHANGE_TOP_GENE_CELL_LIST(state, payload) {\n    state.topGeneCellList = payload;\n  },\n  CHANGE_TOP_GENE_CELL_LIST_PREVIOUS(state, payload) {\n    state.topGeneCellListPrevious = payload;\n  },\n  CHANGE_CELL_SELECTED_PREVIOUS(state, payload) {\n    state.cellSelectedPrevious = payload;\n  },\n  CHANGE_TOP_GENE_DICT_DATA(state, payload) {\n    state.topGeneDictData = payload;\n  },\n  CHANGE_GENE_SEARCH_OPTION(state, payload) {\n    state.geneSearchOption = payload;\n  },\n  CHANGE_GENE_SELECTED(state, payload) {\n    state.geneSelected = payload;\n  },\n  CHANGE_CELL_IN_GENE_SEARCH(state, payload) {\n    state.cellInGeneSearch = payload;\n  },\n  CHANGE_GENE_SEARCH(state, payload) {\n    state.geneSearch = payload;\n  },\n  CHANGE_GENE_SEARCH_FROM_SEARCH_VIEW(state, payload) {\n    state.geneSearchFromSearchView = payload;\n  },\n  CHANGE_SEARCH(state, payload) {\n    state.search = payload;\n  },\n  CHANGE_OPTION(state, payload) {\n    state.optionSelected = payload;\n  }\n};\n\nconst actions = {\n  addToCellDetails(context, cellDetails) {\n    context.commit(\"ADD_TO_CELL_DETAILS\", cellDetails);\n  },\n  changeCellDetails(context, cellDetails) {\n    context.commit(\"CHANGE_CELL_DETAILS\", cellDetails);\n  },\n  addToCellSelected(context, cellSelected) {\n    context.commit(\"ADD_TO_CELL_SELECTED\", cellSelected);\n  },\n  changeCellSelected(context, cellSelected) {\n    context.commit(\"CHANGE_CELL_SELECTED\", cellSelected);\n  },\n  popFromCellSelected(context) {\n    context.commit(\"POP_FROM_CELL_SELECTED\");\n  },\n  changeCellTypeGraphData(context, data) {\n    context.commit(\"CHANGE_CELL_TYPE_GRAPH_DATA\", data);\n  },\n  changeCurrentThemeMode(context, mode) {\n    context.commit(\"CHANGE_CURRENT_THEME_MODE\", mode)\n  },\n  addToTopGeneCellList(context, topGeneCellList) {\n    context.commit(\"ADD_TO_TOP_GENE_CELL_LIST\", topGeneCellList);\n  },\n  changeTopGeneCellList(context, topGeneCellList) {\n    context.commit(\"CHANGE_TOP_GENE_CELL_LIST\", topGeneCellList);\n  },\n  changeTopGeneCellListPrevious(context, topGeneCellListPrevious) {\n    context.commit(\"CHANGE_TOP_GENE_CELL_LIST_PREVIOUS\", topGeneCellListPrevious);\n  },\n  changeCellSelectedPrevious(context, cellSelectedPrevious) {\n    context.commit(\"CHANGE_CELL_SELECTED_PREVIOUS\", cellSelectedPrevious);\n  },\n  changeTopGeneDictData(context, data) {\n    context.commit(\"CHANGE_TOP_GENE_DICT_DATA\", data);\n  },\n  changeGeneSearchOption(context, geneSearchOption) {\n    context.commit(\"CHANGE_GENE_SEARCH_OPTION\", geneSearchOption);\n  },\n  changeGeneSelected(context, geneSelected) {\n    context.commit(\"CHANGE_GENE_SELECTED\", geneSelected);\n  },\n  changeCellInGeneSearch(context, searchContent) {\n    context.commit(\"CHANGE_CELL_IN_GENE_SEARCH\", searchContent);\n  },\n  changeGeneSearch(context, searchContent) {\n    context.commit(\"CHANGE_GENE_SEARCH\", searchContent);\n  },\n  changeGeneSearchFromSearchView(context, searchContent) {\n    context.commit(\"CHANGE_GENE_SEARCH_FROM_SEARCH_VIEW\", searchContent);\n  },\n  changeSearch(context, searchContent) {\n    context.commit(\"CHANGE_SEARCH\", searchContent);\n  },\n  changeOption(context, optionSelected) {\n    context.commit(\"CHANGE_OPTION\", optionSelected);\n  }\n};\n\nconst getters = {\n  getCellDetails(state) {\n    return state.cellDetails;\n  },\n  getCellSelected(state) {\n    return state.cellSelected;\n  },\n  getTopGeneCellList(state) {\n    return state.topGeneCellList;\n  },\n  getTopGeneCellListPrevious(state) {\n    return state.topGeneCellListPrevious;\n  },\n  getCellSelectedPrevious(state) {\n    return state.cellSelectedPrevious;\n  },\n  getCellTypeGraphData(state) {\n    return state.cellTypeGraphData;\n  },\n  getCurrentThemeMode(state) {\n    return state.currentThemeMode;\n  },\n  getTopGeneDictData(state) {\n    return state.topGeneDictData;\n  },\n  getGeneSearchOption(state) {\n    return state.geneSearchOption;\n  },\n  getGeneSelected(state) {\n    return state.geneSelected;\n  },\n  getCellInGeneSearch(state) {\n    return state.cellInGeneSearch;\n  },\n  getGeneSearch(state) {\n    return state.geneSearch;\n  },\n  getGeneSearchFromSearchView(state) {\n    return state.geneSearchFromSearchView;\n  },\n  getSearch(state) {\n    return state.search;\n  },\n  getOption(state) {\n    return state.optionSelected;\n  }\n};\n\nexport default new Vuex.Store({\n  state,\n  mutations,\n  actions,\n  getters\n});\n","import \"material-design-icons-iconfont/dist/material-design-icons.css\";\nimport 'vuetify/dist/vuetify.min.css';\n\nimport Vue from 'vue';\nimport App from './App.vue';\nimport VueLodash from 'vue-lodash';\nimport Vuetify from 'vuetify';\nimport store from './store.js';\n\nVue.config.productionTip = false;\n\nconst options = { name: 'lodash' }; // customize the way you want to call it\nVue.use(VueLodash, options);\n\nconst vuetifyOptions = {\n  iconfont: 'md',\n  theme: {\n    dark: true,\n    themes: {\n      dark: {\n        primary: '#42b983',\n        secondary: '#424242',\n        accent: '#8c9eff',\n        error: '#b71c1c'\n      },\n      light: {\n        primary: '#42b983',\n        secondary: '#DCF8C6',\n        accent: '#8c9eff',\n        error: '#b71c1c',\n        background: '#fbf9f0',\n      }\n    }\n  }\n};\n\nVue.use(Vuetify);\n\nnew Vue({\n  render: h => h(App),\n  store,\n  vuetify: new Vuetify(vuetifyOptions)\n}).$mount('#app');\n"],"sourceRoot":""}