{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?4241","webpack:///./src/App.vue?5a50","webpack:///./src/components/CellDetails.vue?86dc","webpack:///./src/config.js","webpack:///src/components/CellDetails.vue","webpack:///./src/components/CellDetails.vue?29d7","webpack:///./src/components/CellDetails.vue?a457","webpack:///./src/components/TheHeader.vue?3263","webpack:///src/components/TheHeader.vue","webpack:///./src/components/TheHeader.vue?0263","webpack:///./src/components/TheHeader.vue","webpack:///./src/components/GeneDetails.vue?0f27","webpack:///src/components/GeneDetails.vue","webpack:///./src/components/GeneDetails.vue?3747","webpack:///./src/components/GeneDetails.vue?334f","webpack:///./src/components/CellGraph.vue?b1ce","webpack:///./src/util.js","webpack:///./src/apis/utils.js","webpack:///./src/apis/graph.js","webpack:///./src/apis/draw.js","webpack:///./src/apis/structure.js","webpack:///./src/apis/tangler.js","webpack:///./src/apis/layout.js","webpack:///src/components/CellGraph.vue","webpack:///./src/components/CellGraph.vue?92f0","webpack:///./src/components/CellGraph.vue","webpack:///./src/components/SearchView.vue?7641","webpack:///src/components/SearchView.vue","webpack:///./src/components/SearchView.vue?50ea","webpack:///./src/components/SearchView.vue?0461","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue?bff9","webpack:///./src/store.js","webpack:///./src/main.js","webpack:///./src/components/GeneDetails.vue?c4af","webpack:///./src/components/CellDetails.vue?dd38","webpack:///./src/components/SearchView.vue?fcb3"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","Appvue_type_template_id_66530f12_render","_vm","this","_h","$createElement","_c","_self","attrs","id","dark","setTheme","fluid","staticClass","color","label","selectedTheme","model","callback","$$v","goDark","expression","msg","bg","grid-list-md","row","wrap","md5","cellData","loadedData","md7","staticRenderFns","CellDetailsvue_type_template_id_31132917_scoped_true_render","align-center","md12","max-height","_v","medium","justify-right","on","click","removeCellSelected","sm12","md9","append-icon","single-line","hide-details","hide-no-data","search","md3","items","sortOptions","input","sortBasedOnOption","option","cellSelectedExist","geneDataExist","cellSelected","md6","sm6","_s","_l","filteredData","index","class","geneNameOnHover","setOverlapGeneBackgroundColor","input-value","dense","$event","setGeneItem","mouseover","setGeneNameOnHover","mouseleave","clearGeneNameOnHover","sm5","sm7","top","scopedSlots","_u","fn","ref","_g","setGeneIndexBarChartRatio","setGeneIndexBarChartColor","height","rounded","striped","reactive","maxGeneMagnitude","toFixed","fixedGeneDigits","_e","CellDetailsvue_type_template_id_31132917_scoped_true_staticRenderFns","FIRST_ROW_CARD_MAX_HEIGHT","MAX_SELECTED_CELL_TYPE_NUMBER","CELL_TYPE_DEFAULT_COLOR","CELL_TYPE_CHANGED_COLOR","NODE_RADIUS_DEFAULT","NODE_RADIUS_POPPED","COLOR_RAMP","CellDetailsvue_type_script_lang_js_","props","mounted","fetchData","cardHighlight","loadedGeneData","topGenesInColumnOne","topGenesInColumnTwo","methods","$store","getters","getCellDetails","geneCellCopy1","sort","a","b","Math","abs","_fetchData","asyncToGenerator","regeneratorRuntime","mark","_callee","_context","prev","next","d3","sent","stop","arguments","getDefaultCells","cellArr","getCellSelected","geneCellCopy","columnIndex","globalThis","indexGeneValue","cellName","filteredDataSecondRow","_i","_Object$entries","entries","entry","geneValueObject","filteredDataFirstRow","_i2","_Object$entries2","_entry","_geneValueObject","geneIndexInFirstRow","sortCells","concat","dispatch","cellTypeName","undefined","computed","currentCells","getOption","dynamicData","getGeneSearch","resultArr","cellTypes","cell1FilteredArray","cell2FilteredArray","forEach","element","includes","set","onHover","watch","geneDataColumnOne","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","done","_geneData","Number","err","return","geneCellCopy2","geneDataColumnTwo","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","geneData","components_CellDetailsvue_type_script_lang_js_","component","componentNormalizer","CellDetails","TheHeadervue_type_template_id_6c560743_scoped_true_render","center","TheHeadervue_type_template_id_6c560743_scoped_true_staticRenderFns","TheHeadervue_type_script_lang_js_","String","components_TheHeadervue_type_script_lang_js_","TheHeader_component","TheHeader","GeneDetailsvue_type_template_id_107889c9_scoped_true_render","removeGeneDetails","geneNotEmpty","geneSelectedPresentedName","geneSelectedDescription","target","navigateToGenePage","listHeight","setCellSelected","offset-md1","GeneDetailsvue_type_template_id_107889c9_scoped_true_staticRenderFns","GeneDetailsvue_type_script_lang_js_","cellTypeNames","filteredList","loadedDictData","loadedGeneIdToNameDict","loadedGeneIdToDescriptionDict","filterBySearchList","list","geneSelected","open","returnToDefaultList","_Object$entries$_i","slicedToArray","geneArr","geneValue","curList","pop","topGeneDataExist","topGenes","geneValues","filteredGeneCellList","getGeneSearchOption","getGeneSelected","getCellInGeneSearch","_Object$entries2$_i","components_GeneDetailsvue_type_script_lang_js_","GeneDetails_component","GeneDetails","CellGraphvue_type_template_id_ca97de06_scoped_true_render","maxCardHeight","cellType1","cellType2","CellGraphvue_type_template_id_ca97de06_scoped_true_staticRenderFns","FORMAT_TO_ID","split","join","replace","GENERATE_LIST_COPY","originalList","_","cloneDeep","average","lst","sum","reduce","cur","avg","listOfLists","len","array","Array","simpleSorter","graph","hlevel","pass","levels","getLevels","cmp","primaryParent","console","log","ai","levelIdx","bi","parents","ap","map","bp","children","ac","bc","dalevel","idx","level","li","nodes","primaryChildren","Vertex","params","classCallCheck","width","istree","phantom","depth","longest","ancestors","Set","descendentAncestors","levelrank","x","y","grandkidIndex","twidth","Link","source","Graph","links","constraints","groups","analysis","createClass","filter","nodefunc","nodupes","results","queue","roots","maxLongest","max","toConsumableArray","node","orderedNodes","child","pCount","npars","root","expand","tree","nchildren","nnode","strifyNodes","field","v","phantomGraph","longLinks","link","oldLinks","indexOf","analyzeGraph","_loop","_loop2","newLong","isTree","breadthFirst","ancestor","add","drawGraph","paths","selector","vueThis","nodeRadius","bvert","bezierVert","svg","append","attr","transform","cseg","x1","y1","x2","y2","bv","pathId","util","nodeId","handleMouseOver","d3plus","require","Tooltip","thead","position","render","handleMouseOut","remove","handleMouseClick","selectedCellName","nodeClass","nodeColor","nodeName","nodeStroke","selectAll","enter","pstr","style","drawPhantoms","text","jsonToGraph","keys","sourceName","targetName","maxChildren","parent","parentKids","treeLayout","topmargin","levelSep","vertexRadius","phantomRadius","spacer","space","minwid","left","ni","goalX","neighbor","maxX","min","CellGraphvue_type_script_lang_js_","keyValueDict","listLocalCopy","listSize","loaded","pathsDict","linkArrayEdgeCases","edgeCaseCheck","showGraph","$refs","topGeneCellList","getTopGeneCellList","getSearch","_this","util_GENERATE_LIST_COPY","item","toString","svgClear","select","transition","svgHighlight","dict","cellTypesThatFitCriteria","cellType","cellValues","geneExist","gene","geneName","svgFade","svgEdgeCase1","svgEdgeCase2","svgEdgeCase3","each","linkArray","has","components_CellGraphvue_type_script_lang_js_","CellGraph_component","CellGraph","SearchViewvue_type_template_id_766aa67e_scoped_true_render","fixed-tabs","keyValuePair","geneSearch","size","remain","SearchViewvue_type_template_id_766aa67e_scoped_true_staticRenderFns","SearchViewvue_type_script_lang_js_","cardHeight","getCardHeight","detailItem","top10Data","generateListCopy","lodash_default","cell","searchResult","toLowerCase","caseInsesitiveCell0","caseInsesitiveCell1","filteredGeneData","_this2","getGeneSearchFromSearchView","components","virtual-list","dist_default","components_SearchViewvue_type_script_lang_js_","SearchView_component","SearchView","Appvue_type_script_lang_js_","Header","$vuetify","theme","src_Appvue_type_script_lang_js_","App_component","App","Vue","use","Vuex","state","cellDetails","cellSelectedPrevious","topGeneCellListPrevious","geneSearchOption","optionSelected","cellInGeneSearch","geneSearchFromSearchView","mutations","ADD_TO_CELL_DETAILS","payload","CHANGE_CELL_DETAILS","ADD_TO_CELL_SELECTED","CHANGE_CELL_SELECTED","POP_FROM_CELL_SELECTED","ADD_TO_TOP_GENE_CELL_LIST","CHANGE_TOP_GENE_CELL_LIST","CHANGE_TOP_GENE_CELL_LIST_PREVIOUS","CHANGE_CELL_SELECTED_PREVIOUS","CHANGE_GENE_SEARCH_OPTION","CHANGE_GENE_SELECTED","CHANGE_CELL_IN_GENE_SEARCH","CHANGE_GENE_SEARCH","CHANGE_GENE_SEARCH_FROM_SEARCH_VIEW","CHANGE_SEARCH","CHANGE_OPTION","actions","addToCellDetails","context","commit","changeCellDetails","addToCellSelected","changeCellSelected","popFromCellSelected","addToTopGeneCellList","changeTopGeneCellList","changeTopGeneCellListPrevious","changeCellSelectedPrevious","changeGeneSearchOption","changeGeneSelected","changeCellInGeneSearch","searchContent","changeGeneSearch","changeGeneSearchFromSearchView","changeSearch","changeOption","getTopGeneCellListPrevious","getCellSelectedPrevious","store","Store","config","productionTip","options","VueLodash","vuetifyOptions","iconfont","themes","primary","secondary","accent","error","light","Vuetify","h","vuetify","$mount","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_GeneDetails_vue_vue_type_style_index_0_id_107889c9_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_GeneDetails_vue_vue_type_style_index_0_id_107889c9_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_CellDetails_vue_vue_type_style_index_0_id_31132917_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_CellDetails_vue_vue_type_style_index_0_id_31132917_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SearchView_vue_vue_type_style_index_0_id_766aa67e_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SearchView_vue_vue_type_style_index_0_id_766aa67e_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/app.14b1310c.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('v-app',{attrs:{\"dark\":_vm.setTheme}},[_c('v-container',{attrs:{\"fluid\":\"\"}},[_c('v-switch',{staticClass:\"switch\",attrs:{\"color\":\"primary\",\"label\":_vm.selectedTheme},model:{value:(_vm.goDark),callback:function ($$v) {_vm.goDark=$$v},expression:\"goDark\"}}),_c('Header',{attrs:{\"msg\":\"Cell Network Viewer\"}})],1),_c('v-container',{attrs:{\"bg\":\"\",\"grid-list-md\":\"\",\"fluid\":\"\"}},[_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"md5\":\"\"}},[_c('SearchView',{attrs:{\"cellData\":this.loadedData}})],1),_c('v-flex',{attrs:{\"md7\":\"\"}},[_c('Graph',{attrs:{\"cellData\":this.loadedData}})],1)],1),_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"md5\":\"\"}},[_c('GeneDetails')],1),_c('v-flex',{attrs:{\"md7\":\"\"}},[_c('CellDetails')],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\",\"align-center\":\"\"}},[_c('v-flex',{attrs:{\"md12\":\"\"}},[_c('v-card',{attrs:{\"max-height\":\"1300\"}},[_c('v-card-title',{staticClass:\"justify-center\"},[_c('h4',{staticClass:\"view-title\"},[_vm._v(\"Cell Details View\")]),_c('v-spacer'),_c('v-btn',{attrs:{\"medium\":\"\",\"color\":\"red\",\"justify-right\":\"\",\"dark\":\"\"},on:{\"click\":_vm.removeCellSelected}},[_c('v-icon',{attrs:{\"dark\":\"\"}},[_vm._v(\"remove_circle\")])],1)],1),_c('v-card-text',[_c('v-layout',{attrs:{\"row\":\"\"}},[_c('v-flex',{attrs:{\"md12\":\"\",\"sm12\":\"\"}},[_c('v-layout',[_c('v-flex',{attrs:{\"md9\":\"\",\"sm12\":\"\"}},[_c('v-text-field',{attrs:{\"append-icon\":\"search\",\"label\":\"search\",\"single-line\":\"\",\"hide-details\":\"\",\"hide-no-data\":\"\"},model:{value:(_vm.search),callback:function ($$v) {_vm.search=$$v},expression:\"search\"}})],1),_c('v-spacer'),_c('v-flex',{attrs:{\"md3\":\"\",\"sm12\":\"\"}},[_c('v-select',{attrs:{\"items\":_vm.sortOptions,\"label\":\"sort\"},on:{\"input\":_vm.sortBasedOnOption},model:{value:(_vm.option),callback:function ($$v) {_vm.option=$$v},expression:\"option\"}})],1)],1),_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[(_vm.cellSelectedExist && _vm.geneDataExist(_vm.cellSelected[0]))?_c('v-flex',{attrs:{\"md6\":\"\",\"sm6\":\"\"}},[_c('h3',{staticClass:\"sub-title\"},[_vm._v(_vm._s(_vm.cellSelected[0]))]),_c('v-list',{staticClass:\"list\"},_vm._l((_vm.filteredData[0]),function(value,index){return _c('v-list-item',{key:index,class:[\n                      value[2] === _vm.geneNameOnHover ? 'highlight-theme' : ''\n                    ],attrs:{\"color\":_vm.setOverlapGeneBackgroundColor(index, value, 0),\"input-value\":\"true\",\"dense\":\"\"},on:{\"click\":function($event){return _vm.setGeneItem(value)},\"mouseover\":function($event){return _vm.setGeneNameOnHover(index, value)},\"mouseleave\":function($event){return _vm.clearGeneNameOnHover()}}},[_c('v-layout',[_c('v-flex',{attrs:{\"md5\":\"\",\"sm5\":\"\"}},[_c('span',{staticClass:\"index\"},[_vm._v(_vm._s(value[2])+\":\")])]),_c('v-flex',{attrs:{\"md7\":\"\",\"sm7\":\"\"}},[_c('span',[_c('v-tooltip',{attrs:{\"top\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\n                    var on = ref.on;\nreturn [_c('v-progress-linear',_vm._g({attrs:{\"value\":_vm.setGeneIndexBarChartRatio((\"\" + index), 0),\"color\":_vm.setGeneIndexBarChartColor((\"\" + index), 0),\"height\":\"15\",\"rounded\":\"\",\"striped\":\"\",\"reactive\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\n                    var value = ref.value;\nreturn [_vm._v(\"\\n                                  \"+_vm._s((\n                                      (value / 100) *\n                                      _vm.maxGeneMagnitude\n                                    ).toFixed(_vm.fixedGeneDigits))+\"\\n                                \")]}}],null,true)},on))]}}],null,true)},[_c('span',[_vm._v(_vm._s(value[1]))])])],1)])],1)],1)}),1)],1):_vm._e(),(\n                  _vm.cellSelected.length == 2 && _vm.geneDataExist(_vm.cellSelected[1])\n                )?_c('v-flex',{attrs:{\"md6\":\"\",\"sm6\":\"\"}},[_c('h3',{staticClass:\"sub-title\"},[_vm._v(_vm._s(_vm.cellSelected[1]))]),_c('v-list',{staticClass:\"list\"},_vm._l((_vm.filteredData[1]),function(value,index){return _c('v-list-item',{key:index,class:[\n                      value[2] === _vm.geneNameOnHover ? 'highlight-theme' : ''\n                    ],attrs:{\"color\":_vm.setOverlapGeneBackgroundColor(index, value, 1),\"input-value\":\"true\",\"dense\":\"\"},on:{\"click\":function($event){return _vm.setGeneItem(value)},\"mouseover\":function($event){return _vm.setGeneNameOnHover(index, value)},\"mouseleave\":function($event){return _vm.clearGeneNameOnHover()}}},[_c('v-layout',[_c('v-flex',{attrs:{\"md5\":\"\",\"sm12\":\"\"}},[_c('span',{staticClass:\"index\"},[_vm._v(_vm._s(value[2])+\":\")])]),_c('v-flex',{attrs:{\"md7\":\"\",\"sm12\":\"\"}},[_c('span',[_c('v-tooltip',{attrs:{\"top\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\n                    var on = ref.on;\nreturn [_c('v-progress-linear',_vm._g({attrs:{\"value\":_vm.setGeneIndexBarChartRatio((\"\" + index), 1),\"color\":_vm.setGeneIndexBarChartColor((\"\" + index), 1),\"height\":\"15\",\"rounded\":\"\",\"striped\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\n                    var value = ref.value;\nreturn [_vm._v(\"\\n                                  \"+_vm._s((\n                                      (value / 100) *\n                                      _vm.maxGeneMagnitude\n                                    ).toFixed(_vm.fixedGeneDigits))+\"\\n                                \")]}}],null,true)},on))]}}],null,true)},[_c('span',[_vm._v(_vm._s(value[1]))])])],1)])],1)],1)}),1)],1):_vm._e()],1)],1)],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export const FIRST_ROW_CARD_MAX_HEIGHT = 600;\nexport const MAX_SELECTED_CELL_TYPE_NUMBER = 2;\nexport const CELL_TYPE_DEFAULT_COLOR = \"#faed27\";\nexport const CELL_TYPE_CHANGED_COLOR = \"#f33\";\nexport const NODE_RADIUS_DEFAULT = 5;\nexport const NODE_RADIUS_POPPED = 8;\nexport const COLOR_RAMP = [\n    \"#40004b\",\n    \"#762a83\",\n    \"#9970ab\",\n    \"#c2a5cf\",\n    \"#e7d4e8\",\n    \"#d9f0d3\",\n    \"#a6dba0\",\n    \"#5aae61\",\n    \"#1b7837\",\n    \"#00441b\",\n]","<template>\n  <v-layout row wrap align-center>\n    <v-flex md12>\n      <v-card max-height=\"1300\">\n        <v-card-title class=\"justify-center\">\n          <h4 class=\"view-title\">Cell Details View</h4>\n          <v-spacer></v-spacer>\n          <v-btn\n            medium\n            color=\"red\"\n            justify-right\n            dark\n            @click=\"removeCellSelected\"\n          >\n            <v-icon dark>remove_circle</v-icon>\n          </v-btn>\n        </v-card-title>\n\n        <v-card-text>\n          <v-layout row>\n            <v-flex md12 sm12>\n              <v-layout>\n                <!-- Search Box -->\n                <v-flex md9 sm12>\n                  <v-text-field\n                    v-model=\"search\"\n                    append-icon=\"search\"\n                    label=\"search\"\n                    single-line\n                    hide-details\n                    hide-no-data\n                  ></v-text-field>\n                </v-flex>\n\n                <v-spacer />\n\n                <!-- Sort Box -->\n                <v-flex md3 sm12>\n                  <v-select\n                    v-model=\"option\"\n                    :items=\"sortOptions\"\n                    @input=\"sortBasedOnOption\"\n                    label=\"sort\"\n                  ></v-select>\n                </v-flex>\n              </v-layout>\n\n              <v-layout row wrap>\n                <v-flex\n                  md6\n                  sm6\n                  v-if=\"cellSelectedExist && geneDataExist(cellSelected[0])\"\n                >\n                  <h3 class=\"sub-title\">{{ cellSelected[0] }}</h3>\n                  <v-list class=\"list\">\n                    <v-list-item\n                      :color=\"setOverlapGeneBackgroundColor(index, value, 0)\"\n                      input-value=\"true\"\n                      v-for=\"(value, index) in filteredData[0]\"\n                      :key=\"index\"\n                      dense\n                      @click=\"setGeneItem(value)\"\n                      @mouseover=\"setGeneNameOnHover(index, value)\"\n                      @mouseleave=\"clearGeneNameOnHover()\"\n                      :class=\"[\n                        value[2] === geneNameOnHover ? 'highlight-theme' : ''\n                      ]\"\n                    >\n                      <v-layout>\n                        <v-flex md5 sm5>\n                          <span class=\"index\">{{ value[2] }}:</span>\n                        </v-flex>\n                        <v-flex md7 sm7>\n                          <span>\n                            <v-tooltip top>\n                              <template v-slot:activator=\"{ on }\">\n                                <v-progress-linear\n                                  :value=\"\n                                    setGeneIndexBarChartRatio(`${index}`, 0)\n                                  \"\n                                  :color=\"\n                                    setGeneIndexBarChartColor(`${index}`, 0)\n                                  \"\n                                  height=\"15\"\n                                  v-on=\"on\"\n                                  rounded\n                                  striped\n                                  reactive\n                                >\n                                  <template v-slot=\"{ value }\">\n                                    {{\n                                      (\n                                        (value / 100) *\n                                        maxGeneMagnitude\n                                      ).toFixed(fixedGeneDigits)\n                                    }}\n                                  </template></v-progress-linear\n                                >\n                              </template>\n                              <span>{{ value[1] }}</span>\n                            </v-tooltip>\n                          </span>\n                        </v-flex>\n                      </v-layout>\n                    </v-list-item>\n                  </v-list>\n                </v-flex>\n                <v-flex\n                  md6\n                  sm6\n                  v-if=\"\n                    cellSelected.length == 2 && geneDataExist(cellSelected[1])\n                  \"\n                >\n                  <h3 class=\"sub-title\">{{ cellSelected[1] }}</h3>\n                  <v-list class=\"list\">\n                    <v-list-item\n                      :color=\"setOverlapGeneBackgroundColor(index, value, 1)\"\n                      input-value=\"true\"\n                      v-for=\"(value, index) in filteredData[1]\"\n                      :key=\"index\"\n                      dense\n                      @click=\"setGeneItem(value)\"\n                      @mouseover=\"setGeneNameOnHover(index, value)\"\n                      @mouseleave=\"clearGeneNameOnHover()\"\n                      :class=\"[\n                        value[2] === geneNameOnHover ? 'highlight-theme' : ''\n                      ]\"\n                    >\n                      <v-layout>\n                        <v-flex md5 sm12>\n                          <span class=\"index\">{{ value[2] }}:</span>\n                        </v-flex>\n                        <v-flex md7 sm12>\n                          <span>\n                            <v-tooltip top>\n                              <template v-slot:activator=\"{ on }\">\n                                <v-progress-linear\n                                  :value=\"\n                                    setGeneIndexBarChartRatio(`${index}`, 1)\n                                  \"\n                                  :color=\"\n                                    setGeneIndexBarChartColor(`${index}`, 1)\n                                  \"\n                                  height=\"15\"\n                                  v-on=\"on\"\n                                  rounded\n                                  striped\n                                >\n                                  <template v-slot=\"{ value }\">\n                                    {{\n                                      (\n                                        (value / 100) *\n                                        maxGeneMagnitude\n                                      ).toFixed(fixedGeneDigits)\n                                    }}\n                                  </template>\n                                </v-progress-linear>\n                              </template>\n                              <span>{{ value[1] }}</span>\n                            </v-tooltip>\n                          </span>\n                        </v-flex>\n                      </v-layout>\n                    </v-list-item>\n                  </v-list>\n                </v-flex>\n              </v-layout>\n            </v-flex>\n          </v-layout>\n        </v-card-text>\n      </v-card>\n    </v-flex>\n  </v-layout>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\nimport { COLOR_RAMP } from \"../config\";\n\nexport default {\n  name: \"cell-details\",\n  props: [],\n  mounted() {\n    this.fetchData();\n  },\n  data() {\n    return {\n      cardHighlight: false,\n      fixedGeneDigits: 5,\n      maxGeneMagnitude: 0.14907,\n      loadedGeneData: {},\n      sortOptions: [\"default\", \"magnitude\"],\n      geneNameOnHover: \"\",\n      topGenesInColumnOne: [],\n      topGenesInColumnTwo: []\n    };\n  },\n  methods: {\n    sortBasedOnOption(option) {\n      if (this.$store.getters.getCellDetails.length == 0) {\n        return;\n      }\n\n      switch (option) {\n        case \"magnitude\":\n          this.geneCellCopy1 = this.geneCellCopy1.sort((a, b) => {\n            Math.abs(a[1]) < Math.abs(b[1]) ? 1 : -1;\n          });\n      }\n    },\n\n    async fetchData() {\n      this.loadedGeneData = await d3.json(\"./top_abs_10_dict.json\");\n    },\n\n    getDefaultCells() {\n      let cellArr = this.$store.getters.getCellSelected;\n      let geneCellCopy = [];\n      geneCellCopy.push(this.loadedGeneData[cellArr[0]]);\n      if (cellArr.length > 1) {\n        geneCellCopy.push(this.loadedGeneData[cellArr[1]]);\n      }\n\n      return geneCellCopy;\n    },\n\n    /**\n     * Get gene color by column and gene index, if negative display pink\n     */\n    setGeneIndexBarChartColor(index, columnIndex) {\n      let globalThis = this;\n      let indexGeneValue = 0;\n      if (columnIndex == 0) {\n        indexGeneValue = globalThis.topGenesInColumnOne[index];\n      } else if (columnIndex == 1) {\n        indexGeneValue = globalThis.topGenesInColumnTwo[index];\n      }\n\n      if (indexGeneValue >= 0) {\n        return \"primary\";\n      } else {\n        return \"pink\";\n      }\n    },\n\n    setGeneIndexBarChartRatio(index, columnIndex) {\n      let globalThis = this;\n      if (columnIndex == 0) {\n        return Math.abs(\n          (\n            (globalThis.topGenesInColumnOne[index] /\n              globalThis.maxGeneMagnitude) *\n            100\n          ).toFixed(globalThis.fixedGeneDigits)\n        );\n      } else {\n        return Math.abs(\n          (\n            (globalThis.topGenesInColumnTwo[index] /\n              globalThis.maxGeneMagnitude) *\n            100\n          ).toFixed(globalThis.fixedGeneDigits)\n        );\n      }\n    },\n\n    setOverlapGeneBackgroundColor(index, value, columnIndex) {\n      let globalThis = this;\n      let cellName = value[2];\n\n      if (columnIndex == 0) {\n        let filteredDataSecondRow = globalThis.filteredData[1];\n        if (globalThis.filteredData.length > 1) {\n          for (const entry of Object.entries(filteredDataSecondRow)) {\n            let geneValueObject = entry[1];\n            if (geneValueObject[2] === cellName) {\n              return COLOR_RAMP[index];\n            }\n          }\n        }\n      } else if (columnIndex == 1) {\n        let filteredDataFirstRow = globalThis.filteredData[0];\n        for (const entry of Object.entries(filteredDataFirstRow)) {\n          let geneValueObject = entry[1];\n          if (geneValueObject[2] === cellName) {\n            let geneIndexInFirstRow = entry[0];\n            return COLOR_RAMP[geneIndexInFirstRow];\n          }\n        }\n      }\n\n      return \"#303030\";\n    },\n\n    sortCells() {\n      let cellArr = this.$store.getters.getCellSelected;\n      let geneCellCopy = [];\n      geneCellCopy.push(\n        this.loadedGeneData[cellArr[0]]\n          .concat()\n          .sort((a, b) => (a[1] < b[1] ? 1 : -1))\n      );\n      if (cellArr.length > 1) {\n        geneCellCopy.push(\n          this.loadedGeneData[cellArr[1]]\n            .concat()\n            .sort((a, b) => (a[1] < b[1] ? 1 : -1))\n        );\n      }\n      return geneCellCopy;\n    },\n\n    removeCellSelected() {\n      this.$store.dispatch(\"popFromCellSelected\");\n    },\n\n    setGeneItem(value) {\n      this.$store.dispatch(\"changeGeneSelected\", value[2]);\n    },\n\n    setGeneNameOnHover(index, value) {\n      this.geneNameOnHover = value[2];\n    },\n\n    cellSelectedExist() {\n      return this.$store.getters.getCellSelected.length !== 0;\n    },\n\n    clearGeneNameOnHover() {\n      this.geneNameOnHover = \"\";\n    },\n\n    geneDataExist(cellTypeName) {\n      if (this.loadedGeneData[cellTypeName] === undefined) {\n        return false;\n      }\n      return true;\n    }\n  },\n  computed: {\n    cellSelected: {\n      get() {\n        return this.$store.getters.getCellSelected;\n      }\n    },\n\n    currentCells() {\n      return this.$store.getters.getOption === \"default\"\n        ? this.getDefaultCells()\n        : this.sortCells();\n    },\n\n    dynamicData() {\n      if (this.geneCellCopy1.length == 0) {\n        return;\n      } else {\n        return this.$store.getters.getCellDetails;\n      }\n    },\n\n    filteredData() {\n      let globalThis = this;\n      if (this.$store.getters.getGeneSearch === \"\") {\n        return this.currentCells;\n      } else {\n        let resultArr = [];\n        let cellTypes = this.currentCells;\n        let cell1FilteredArray = [];\n        let cell2FilteredArray = [];\n        if (cellTypes.length > 1) {\n          cellTypes[1].forEach(element => {\n            if (element[2].includes(globalThis.search)) {\n              cell2FilteredArray.push(element);\n            }\n          });\n        }\n        if (cellTypes.length > 0) {\n          cellTypes[0].forEach(element => {\n            if (element[2].includes(globalThis.search)) {\n              cell1FilteredArray.push(element);\n            }\n          });\n        }\n        resultArr.push(cell1FilteredArray);\n        resultArr.push(cell2FilteredArray);\n\n        return resultArr;\n      }\n    },\n\n    option: {\n      get() {\n        return this.$store.getters.getOption;\n      },\n      set(option) {\n        this.$store.dispatch(\"changeOption\", option);\n      }\n    },\n\n    search: {\n      get() {\n        return this.$store.getters.getGeneSearch;\n      },\n      set(input) {\n        this.$store.dispatch(\"changeGeneSearch\", input);\n      }\n    },\n\n    selectedTheme() {\n      return this.onHover === true ? \"highlight-theme\" : \"\";\n    }\n  },\n  watch: {\n    cellSelected() {\n      let cellArr = this.$store.getters.getCellSelected;\n      this.$store.dispatch(\"changeCellDetails\", []);\n      this.topGenesInColumnOne = [];\n      this.topGenesInColumnTwo = [];\n\n      if (cellArr.length === 0) {\n        return;\n      }\n      this.geneCellCopy1 = this.loadedGeneData[cellArr[0]];\n      this.$store.dispatch(\"addToCellDetails\", this.geneCellCopy1);\n      let geneDataColumnOne = [];\n      for (const geneData of this.geneCellCopy1) {\n        geneDataColumnOne.push(Number(geneData[1]));\n      }\n\n      this.topGenesInColumnOne = geneDataColumnOne;\n\n      if (cellArr.length > 1) {\n        this.geneCellCopy2 = this.loadedGeneData[cellArr[1]];\n        this.$store.dispatch(\"addToCellDetails\", this.geneCellCopy2);\n        let geneDataColumnTwo = [];\n        for (const geneData of this.geneCellCopy2) {\n          geneDataColumnTwo.push(Number(geneData[1]));\n        }\n        this.topGenesInColumnTwo = geneDataColumnTwo;\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.message {\n  color: red;\n  text-align: left;\n}\n.geneName {\n  color: #c5050c;\n}\n.highlight-theme {\n  background: #34495e;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CellDetails.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CellDetails.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CellDetails.vue?vue&type=template&id=31132917&scoped=true&\"\nimport script from \"./CellDetails.vue?vue&type=script&lang=js&\"\nexport * from \"./CellDetails.vue?vue&type=script&lang=js&\"\nimport style0 from \"./CellDetails.vue?vue&type=style&index=0&id=31132917&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"31132917\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\",\"align-center\":\"\"}},[_c('v-flex',{attrs:{\"md12\":\"\",\"center\":\"\"}},[_c('h1',{staticClass:\"view-title\"},[_vm._v(\"🦠\"+_vm._s(_vm.msg)+\"🧬\")])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-layout row wrap align-center>\n    <v-flex md12 center>\n      <h1 class=\"view-title\">&#x1F9A0;{{ msg }}&#x1F9EC;</h1>\n    </v-flex>\n  </v-layout>\n</template>\n\n<script>\nexport default {\n  name: \"app-header\",\n  props: {\n    msg: String\n  }\n};\n</script>\n\n<style scoped>\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TheHeader.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TheHeader.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TheHeader.vue?vue&type=template&id=6c560743&scoped=true&\"\nimport script from \"./TheHeader.vue?vue&type=script&lang=js&\"\nexport * from \"./TheHeader.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6c560743\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\",\"align-center\":\"\"}},[_c('v-flex',{attrs:{\"md12\":\"\"}},[_c('v-card',{attrs:{\"max-height\":\"595\"}},[_c('v-card-title',{staticClass:\"justify-center\"},[_c('h4',{staticClass:\"view-title\"},[_vm._v(\"Gene Details View\")]),_c('v-spacer'),_c('v-btn',{attrs:{\"medium\":\"\",\"color\":\"red\",\"justify-right\":\"\",\"dark\":\"\"},on:{\"click\":_vm.removeGeneDetails}},[_c('v-icon',{attrs:{\"dark\":\"\"}},[_vm._v(\"remove_circle\")])],1)],1),_c('v-card-text',[_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[(_vm.geneNotEmpty())?_c('v-flex',{attrs:{\"md9\":\"\",\"sm12\":\"\"}},[_c('v-text-field',{attrs:{\"append-icon\":\"search\",\"label\":\"search\",\"single-line\":\"\",\"hide-details\":\"\",\"hide-no-data\":\"\"},model:{value:(_vm.search),callback:function ($$v) {_vm.search=$$v},expression:\"search\"}})],1):_vm._e(),_c('v-spacer'),(_vm.geneNotEmpty())?_c('v-flex',{attrs:{\"md3\":\"\",\"sm12\":\"\"}},[_c('v-select',{attrs:{\"items\":_vm.sortOptions,\"label\":\"sort\"},on:{\"input\":_vm.sortBasedOnOption},model:{value:(_vm.option),callback:function ($$v) {_vm.option=$$v},expression:\"option\"}})],1):_vm._e()],1),_c('v-layout',[(_vm.geneNotEmpty())?_c('v-flex',[_c('h3',{staticClass:\"sub-title\"},[_vm._v(\"Gene: \"+_vm._s(_vm.geneSelectedPresentedName))]),_c('div',{staticClass:\"gene-description\"},[_vm._v(_vm._s(_vm.geneSelectedDescription))]),_c('div',{staticClass:\"gene-web-link\"},[_c('a',{attrs:{\"target\":\"_blank\"},on:{\"click\":function($event){return _vm.navigateToGenePage()}}},[_vm._v(\"Gene data web link\")])]),_c('v-list',{staticClass:\"list\",class:{ 'max-height': _vm.listHeight }},_vm._l((_vm.filteredGeneCellList),function(value,index){return _c('v-list-item',{key:index,on:{\"click\":function($event){return _vm.setCellSelected(value[0])}}},[_c('v-layout',[_c('v-flex',{staticClass:\"index\",attrs:{\"md3\":\"\",\"offset-md1\":\"\"}},[_vm._v(_vm._s(value[0])+\": \")]),_c('v-flex',{attrs:{\"md6\":\"\",\"offset-md1\":\"\"}},[_c('span',[_c('v-tooltip',{attrs:{\"top\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\nvar on = ref.on;\nreturn [_c('v-progress-linear',_vm._g({attrs:{\"value\":_vm.setGeneIndexBarChartRatio(value, 0),\"color\":_vm.setGeneIndexBarChartColor(value, 1),\"height\":\"15\",\"rounded\":\"\",\"striped\":\"\",\"reactive\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar value = ref.value;\nreturn [_vm._v(\"\\n                              \"+_vm._s(((value / 100) * _vm.maxGeneMagnitude).toFixed(\n                                  _vm.fixedGeneDigits\n                                ))+\"\\n                            \")]}}],null,true)},on))]}}],null,true)},[_c('span',[_vm._v(_vm._s(value[1]))])])],1)])],1)],1)}),1)],1):_vm._e()],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-layout row wrap align-center>\n    <v-flex md12>\n      <v-card max-height=\"595\">\n        <v-card-title class=\"justify-center\">\n          <h4 class=\"view-title\">Gene Details View</h4>\n          <v-spacer></v-spacer>\n          <v-btn\n            medium\n            color=\"red\"\n            justify-right\n            dark\n            @click=\"removeGeneDetails\"\n          >\n            <v-icon dark>remove_circle</v-icon>\n          </v-btn>\n        </v-card-title>\n        <v-card-text>\n          <v-layout row wrap>\n            <v-flex md9 sm12 v-if=\"geneNotEmpty()\">\n              <v-text-field\n                v-model=\"search\"\n                append-icon=\"search\"\n                label=\"search\"\n                single-line\n                hide-details\n                hide-no-data\n              ></v-text-field>\n            </v-flex>\n            <v-spacer />\n            <v-flex md3 sm12 v-if=\"geneNotEmpty()\">\n              <v-select\n                v-model=\"option\"\n                :items=\"sortOptions\"\n                @input=\"sortBasedOnOption\"\n                label=\"sort\"\n              ></v-select>\n            </v-flex>\n          </v-layout>\n          <v-layout>\n            <v-flex v-if=\"geneNotEmpty()\">\n              <h3 class=\"sub-title\">Gene: {{ geneSelectedPresentedName }}</h3>\n              <div class=\"gene-description\">{{ geneSelectedDescription }}</div>\n              <div class=\"gene-web-link\">\n                <a target=\"_blank\" @click=\"navigateToGenePage()\"\n                  >Gene data web link</a\n                >\n              </div>\n              <v-list :class=\"{ 'max-height': listHeight }\" class=\"list\">\n                <v-list-item\n                  v-for=\"(value, index) in filteredGeneCellList\"\n                  :key=\"index\"\n                  @click=\"setCellSelected(value[0])\"\n                >\n                  <v-layout>\n                    <v-flex md3 offset-md1 class=\"index\"\n                      >{{ value[0] }}:&nbsp;</v-flex\n                    >\n                    <v-flex md6 offset-md1>\n                      <span>\n                        <v-tooltip top>\n                          <template v-slot:activator=\"{ on }\">\n                            <v-progress-linear\n                              :value=\"setGeneIndexBarChartRatio(value, 0)\"\n                              :color=\"setGeneIndexBarChartColor(value, 1)\"\n                              height=\"15\"\n                              v-on=\"on\"\n                              rounded\n                              striped\n                              reactive\n                            >\n                              <template v-slot=\"{ value }\">\n                                {{\n                                  ((value / 100) * maxGeneMagnitude).toFixed(\n                                    fixedGeneDigits\n                                  )\n                                }}\n                              </template>\n                            </v-progress-linear>\n                          </template>\n                          <span>{{ value[1] }}</span>\n                        </v-tooltip>\n                      </span>\n                    </v-flex>\n                  </v-layout>\n                </v-list-item>\n              </v-list>\n            </v-flex>\n          </v-layout>\n        </v-card-text>\n      </v-card>\n    </v-flex>\n  </v-layout>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\n\nexport default {\n  name: \"gene-details\",\n  props: [],\n  mounted() {\n    // Fetch gene data once mounted\n    this.fetchData();\n  },\n  data() {\n    return {\n      cellTypeNames: [],\n      filteredList: [],\n      fixedGeneDigits: 5,\n      geneSelectedPresentedName: \"\",\n      geneSelectedDescription: \"\",\n      listHeight: \"400px\",\n      loadedDictData: {},\n      loadedGeneIdToNameDict: {},\n      loadedGeneIdToDescriptionDict: {},\n      maxGeneMagnitude: 0.14907,\n      sortOptions: [\"default\", \"strength\", \"magnitude\"]\n    };\n  },\n  methods: {\n    async fetchData() {\n      this.loadedDictData = await d3.json(\"./top_abs_10_dict.json\");\n      this.loadedGeneIdToNameDict = await d3.json(\"./gene_id_to_name.json\");\n      this.loadedGeneIdToDescriptionDict = await d3.json(\n        \"gene_id_to_description.json\"\n      );\n    },\n    filterBySearchList(list) {\n      let globalThis = this;\n      let filterBySearchList = [];\n      list.forEach(element => {\n        if (element[0].includes(globalThis.search)) {\n          filterBySearchList.push(element);\n        }\n      });\n      return filterBySearchList;\n    },\n    geneNotEmpty() {\n      return this.geneSelected !== \"\";\n    },\n    navigateToGenePage() {\n      window.open(\n        \"http://useast.ensembl.org/Homo_sapiens/Gene/Summary?g=\" +\n          this.geneSelected\n      );\n    },\n    removeGeneDetails() {\n      this.$store.dispatch(\"changeGeneSelected\", \"\");\n    },\n    returnToDefaultList() {\n      let list = [];\n      let globalThis = this;\n      for (const [key, value] of Object.entries(this.loadedDictData)) {\n        let geneArr = value;\n        for (let i = 0; i < geneArr.length; i++) {\n          if (geneArr[i][2] === globalThis.geneSelected) {\n            let cellName = key;\n            let geneValue = value[i][1].toFixed(this.fixedGeneDigits);\n            list.push([cellName, geneValue]);\n          }\n        }\n      }\n\n      return this.filterBySearchList(list);\n    },\n    setCellSelected(cellName) {\n      let curList = this.$store.getters.getCellSelected;\n      if (curList.length > 1) {\n        curList.pop();\n      }\n      curList.push(cellName);\n      this.$store.dispatch(\"changeCellSelected\", curList);\n    },\n    sortBasedOnOption(option) {\n      let globalThis = this;\n      switch (option) {\n        case \"default\":\n          return this.filterBySearchList(this.filteredList);\n        case \"strength\":\n          return this.filterBySearchList(\n            this.filteredList.sort((a, b) =>\n              Math.abs(a[1]) > Math.abs(b[1]) ? -1 : 1\n            )\n          );\n        case \"magnitude\":\n          return this.filterBySearchList(\n            this.filteredList.sort((a, b) => (a[1] > b[1] ? -1 : 1))\n          );\n      }\n    },\n    topGeneDataExist(topGenes, cellTypeName) {\n      return typeof topGenes[this.geneSelected] !== \"undefined\";\n    },\n\n    setGeneIndexBarChartRatio(geneValues, columnIndex) {\n      let globalThis = this;\n      let value = geneValues[1];\n      if (columnIndex == 0) {\n        return Math.abs(\n          ((value / globalThis.maxGeneMagnitude) * 100).toFixed(\n            globalThis.fixedGeneDigits\n          )\n        );\n      }\n    },\n\n    setGeneIndexBarChartColor(geneValues, columnIndex) {\n      let value = geneValues[1];\n      if (value >= 0) {\n        return \"primary\";\n      } else {\n        return \"pink\";\n      }\n    }\n  },\n  computed: {\n    filteredGeneCellList() {\n      return this.$store.getters.getGeneSearchOption === \"default\"\n        ? this.returnToDefaultList()\n        : this.sortBasedOnOption(this.$store.getters.getGeneSearchOption);\n    },\n    geneSelected: {\n      get() {\n        return this.$store.getters.getGeneSelected;\n      },\n      set(option) {\n        this.$store.dispatch(\"changeGeneSelected\", option);\n      }\n    },\n    option: {\n      get() {\n        return this.$store.getters.getGeneSearchOption;\n      },\n      set(option) {\n        this.$store.dispatch(\"changeGeneSearchOption\", option);\n      }\n    },\n    search: {\n      get() {\n        return this.$store.getters.getCellInGeneSearch;\n      },\n      set(input) {\n        this.$store.dispatch(\"changeCellInGeneSearch\", input);\n      }\n    }\n  },\n  watch: {\n    geneSelected() {\n      // Change sorting back to default\n      this.$store.dispatch(\"changeGeneSearchOption\", \"default\");\n      let globalThis = this;\n      // Clear both local list and store to receive updated values\n      globalThis.filteredList = [];\n      this.$store.dispatch(\"changeTopGeneCellList\", []);\n      this.geneSelectedPresentedName = this.loadedGeneIdToNameDict[\n        this.geneSelected\n      ];\n      this.geneSelectedDescription = this.loadedGeneIdToDescriptionDict[\n        this.geneSelected\n      ];\n\n      for (const [key, value] of Object.entries(this.loadedDictData)) {\n        let geneArr = value;\n        for (let i = 0; i < geneArr.length; i++) {\n          if (geneArr[i][2] === globalThis.geneSelected) {\n            let cellName = key;\n            let geneValue = value[i][1];\n            globalThis.filteredList.push([cellName, geneValue]);\n            globalThis.$store.dispatch(\"addToTopGeneCellList\", [\n              cellName,\n              geneValue\n            ]);\n          }\n        }\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\nv-card-title {\n  margin: 100px;\n}\n.list {\n  max-height: 355px;\n  overflow-y: auto;\n}\n.gene-web-link {\n  text-align: left;\n  margin-top: 10px;\n  text-decoration: underline;\n}\n.gene-description {\n  text-align: left;\n  font-weight: normal;\n  font-size: medium;\n  margin-top: 10px;\n  color: \"#fff\";\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GeneDetails.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GeneDetails.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GeneDetails.vue?vue&type=template&id=107889c9&scoped=true&\"\nimport script from \"./GeneDetails.vue?vue&type=script&lang=js&\"\nexport * from \"./GeneDetails.vue?vue&type=script&lang=js&\"\nimport style0 from \"./GeneDetails.vue?vue&type=style&index=0&id=107889c9&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"107889c9\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"md12\":\"\"}},[_c('v-card',{attrs:{\"max-height\":_vm.maxCardHeight}},[_c('v-card-title',{staticClass:\"justify-center\"},[_c('h4',{staticClass:\"view-title\"},[_vm._v(\"Graph View\")]),_c('v-spacer'),(_vm.cellType1)?_c('v-chip',{staticClass:\"ma-2\"},[_vm._v(_vm._s(_vm.cellType1))]):_vm._e(),(_vm.cellType2)?_c('v-chip',{staticClass:\"ma-2\"},[_vm._v(_vm._s(_vm.cellType2))]):_vm._e()],1),_c('v-card-text',[_c('div',{ref:\"graph\",attrs:{\"id\":\"graph\"}})])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import _ from \"lodash\";\nimport * as d3 from \"d3\";\n\nexport const FORMAT_TO_ID = cellName => {\n  return cellName\n    .split(\" \")\n    .join(\"-\")\n    .split(\"(\")\n    .join(\"\")\n    .split(\")\")\n    .join(\"\")\n    .split(\",\")\n    .join(\"\")\n    .replace(/\\//g, \"-\");\n};\n\nexport const GENERATE_LIST_COPY = originalList => {\n  return Object.entries(_.cloneDeep(originalList));\n};","/*jshint esversion: 6 */\n// @ts-check\n// eslint-disable-next-line no-unused-vars\n// @ts-ignore\nimport { Vertex } from \"./graph.js\";\n/**\n *\n * @param {number[]} lst\n */\nexport function average(lst) {\n  if (!lst.length) return 0;\n  let sum = lst.reduce((prev, cur) => (cur += prev));\n  let avg = sum / lst.length;\n  return avg;\n}\n\nexport function sum(lst) {\n  if (!lst.length) return 0;\n  return lst.reduce((prev, cur) => (cur += prev));\n}\n\n/**\n *\n * @param {number} len\n */\nexport function listOfLists(len) {\n  const array = Array(len);\n  for (let i = 0; i < array.length; i++) {\n    array[i] = [];\n  }\n  return array;\n}\n\n/* given 2 edges (x coordinates) do the edges cross? */\nexport function isCross(p1, c1, p2, c2) {\n  return (p1 > p2 && c1 < c2) || (p1 < p2 && c1 > c2) ? 1 : 0;\n}\n\n/**\n * Count the number of crossings between two (adjacent) levels\n * @param {Vertex[]} parents\n */\nexport function countCrossingsLevel(parents) {\n  let count = 0;\n  // no easy way to iterate over the links of a level...\n  if (parents.length > 1) {\n    for (let i = 0; i < parents.length - 1; i++) {\n      let p1 = parents[i];\n      p1.children.forEach(function(c1) {\n        // jshint ignore:line\n        for (let j = i + 1; j < parents.length; j++) {\n          let p2 = parents[j];\n          p2.children.forEach(function(c2) {\n            // jshint ignore:line\n            count += isCross(\n              p1.levelIdx,\n              c1.levelIdx,\n              p2.levelIdx,\n              c2.levelIdx\n            );\n          });\n        }\n      });\n    }\n  }\n  return count;\n}\n\nexport function countCrossingsGraph(graph) {\n  const levels = graph.getLevels();\n  let crossings = 0;\n  for (let i = 0; i < levels.length - 1; i++) {\n    let lc = countCrossingsLevel(levels[i]);\n    crossings += lc;\n  }\n  return crossings;\n}\n\nexport function simpleSorter(graph, hlevel = 3, pass = 0) {\n  const levels = graph.getLevels();\n\n  // compare two nodes\n  function cmp(a, b) {\n    // heuristic one - stick to your primary parent\n    if (!a.primaryParent) {\n      console.log(`node ${a.index} ${a.name} no primary parent`);\n    }\n    let ai = a.primaryParent.levelIdx;\n    let bi = b.primaryParent.levelIdx;\n    if (ai != bi) return ai - bi;\n    if (hlevel > 1) {\n      // hueristic two - consider all your parents\n      // only make sense if at least one has multiple parents\n      if (a.parents.length > 1 || b.parents.length > 1) {\n        let ap = average(a.parents.map(p => p.levelIdx));\n        let bp = average(b.parents.map(p => p.levelIdx));\n        if (ap != bp) return ap - bp;\n      } else {\n        // generally, looking at your children is a really bad\n        // idea - wait until it becomes useful (when things are stable)\n        // and only if you have only 1 child\n        if (pass > 5 && a.children.length == 1 && b.children.length == 1) {\n          // keep diving until someone doesn't have 1 child\n          let ac = a.children[0];\n          let bc = b.children[0];\n          while (ac.children.length == 1 && bc.children.length == 1) {\n            ac = ac.children[0];\n            bc = bc.children[0];\n          }\n          let ap = ac.levelIdx;\n          let bp = bc.levelIdx;\n          return ap - bp;\n        }\n      }\n    }\n    if (hlevel > 2) {\n      // heuristic three - transitive closure of your descendents ancestors\n      if (a.dalevel.length && b.dalevel.length) {\n        let ap = average(a.dalevel.map(p => p.levelIdx));\n        let bp = average(b.dalevel.map(p => p.levelIdx));\n        if (ap != bp) return ap - bp;\n      }\n    }\n    return 0;\n  }\n\n  // sort each level\n  let idx = 0;\n  levels.forEach(function(level, li) {\n    if (li > 0) {\n      level.sort(cmp);\n    }\n    level.forEach((n, i) => {\n      n.levelIdx = i;\n      n.index = idx++;\n    });\n  });\n\n  // reorder the nodes\n  graph.nodes.sort((a, b) => a.index - b.index);\n  // make sure the children are sorted correctly\n  graph.nodes.forEach(n => n.primaryChildren.sort((a, b) => a.index - b.index));\n  graph.nodes.forEach(n => n.children.sort((a, b) => a.index - b.index));\n}\n","/*jshint esversion: 6 */\n// @ts-check\n\n// @ts-ignore\nimport { listOfLists } from \"./utils.js\";\n\n/**\n * Can't be a Node since that's a reserved term by the DOM\n */\nexport class Vertex {\n  /**\n   * make a node\n   * @param {string} name\n   * @param {object} params\n   * @param {number} [params.width=10]\n   * @param {number} [params.height=10]\n   */\n  constructor(name, params = {}) {\n    this.name = name;\n    this.height = \"height\" in params ? params.height : 10;\n    this.width = \"width\" in params ? params.width : 10;\n    // these are usually added later by the reader\n    this.parents = [];\n    this.children = [];\n    this.istree = undefined;\n    this.index = undefined; // overl rank (index into nodes list)\n    this.phantom = false;\n    // these are added later by the analyzer, but we declare them to have no warnings\n    this.depth = -1;\n    this.longest = -1;\n    this.levelIdx = undefined; // index in the level (where in levels list)\n    this.ancestors = new Set();\n    this.descendentAncestors = new Set();\n    this.dalevel = [];\n\n    // these are used for sorting\n    this.levelrank = undefined;\n\n    // these are used for drawing\n    this.x = undefined;\n    this.y = undefined;\n\n    // for the new and improved sorter\n    this.primaryParent = undefined;\n    /** @type {Vertex[]} */\n    this.primaryChildren = [];\n    this.grandkidIndex = undefined;\n\n    // used for layout\n    this.twidth = undefined;\n  }\n}\n\nexport class Link {\n  /**\n   *\n   * @param {Vertex} source\n   * @param {Vertex} target\n   * @param {string} color\n   * @param {number} value\n   */\n  constructor(source, target, color = \"#000\", value = 1) {\n    this.source = source;\n    this.target = target;\n    this.color = color;\n    this.value = value;\n  }\n}\n\n/**\n * @callback NodeFunction\n * @param{Vertex} node\n */\n\n/**\n * @class\n */\nexport class Graph {\n  /**\n   *\n   * @param {Vertex[]} nodes\n   * @param {Link[]} links\n   * @param {Array} constraints\n   * @param {Array} groups\n   */\n  constructor(nodes, links, constraints = [], groups = []) {\n    /** @type {Vertex[]} */\n    this.nodes = nodes;\n    /** @type {Link[]} */\n    this.links = links;\n    this.constraints = constraints;\n    this.groups = groups;\n    this.analysis = undefined;\n  }\n  /**\n   * return a list of the roots\n   * @returns {Vertex[]}\n   */\n  roots() {\n    return this.nodes.filter(n => !n.parents.length);\n  }\n  /**\n   * return a list of the leaves\n   * @returns {Vertex[]}\n   */\n  leaves() {\n    return this.nodes.filter(n => !n.children.length);\n  }\n\n  /**\n   * apply a function to each node in breadth first order\n   * this only works on level graphs!\n   * @param {NodeFunction} nodefunc\n   */\n  breadthFirst(nodefunc, nodupes = true) {\n    let results = [];\n    // start with the roots\n    let queue = this.roots();\n    // now iterate until we're done\n    while (queue.length) {\n      const n = queue.shift();\n      results.push(nodefunc(n));\n      n.children.forEach(function(c) {\n        // jshint ignore:line\n        if (!nodupes || !queue.includes(c)) queue.push(c);\n      });\n    }\n    return results;\n  }\n\n  /**\n   * get the levels of the graph - it also resets the indecies in the levels\n   */\n  getLevels() {\n    const nodes = this.nodes;\n    const maxLongest = Math.max(...nodes.map(n => n.longest));\n\n    /** @type Vertex[][]] */\n    const levels = listOfLists(maxLongest);\n\n    nodes.forEach(n => levels[n.longest - 1].push(n));\n    levels.forEach(level => level.forEach((node, i) => (node.levelIdx = i)));\n\n    return levels;\n  }\n\n  /**\n   * Re-order the nodes based on a breadth first traversal\n   * it puts the nodes in order - which means it can mess stuff up\n   * It does re-assign indecies based on this new order.\n   * It does not re-assign level indecies.\n   */\n  orderNodes() {\n    // beginning with the roots, do a breadth first traversal of the tree to\n    // assign indecies\n    let idx = 0;\n    let orderedNodes = [];\n    let queue = this.nodes.filter(node => !node.primaryParent);\n    while (queue.length) {\n      const node = queue.shift();\n      node.index = idx++;\n      orderedNodes.push(node);\n      node.primaryChildren.forEach(child => queue.push(child)); // jshint ignore:line\n    }\n    this.nodes = orderedNodes;\n  }\n\n  /** describe the graph to the console */\n  describe() {\n    // count the number of nodes with each amount of parents\n    let pCount = {};\n    this.nodes.forEach(node => {\n      let npars = node.parents.length;\n      if (pCount[npars]) {\n        pCount[npars]++;\n      } else {\n        pCount[npars] = 1;\n      }\n    });\n  }\n\n  /** extract a D3 Hierarchy description  - this is the literal\n   *  (someone else has to call d3.hierarchy) */\n  hierarchy() {\n    /** get the root - if there are multiple roots, make a new root node */\n    let roots = this.roots();\n    let root;\n    if (roots.length == 1) {\n      root = {\n        name: roots[0].name,\n        node: roots[0],\n        nchildren: roots[0].primaryChildren\n      };\n    } else {\n      root = { name: \"Fake Root\", node: undefined, nchildren: roots };\n    }\n    /* proceed recursively */\n    function expand(tree) {\n      // converty nchildren (node list) to d3 form.\n      tree.children = [];\n      tree.nchildren.forEach(function(c) {\n        let nnode = { name: c.name, node: c, nchildren: c.primaryChildren };\n        tree.children.push(nnode);\n        expand(nnode);\n      });\n    }\n    expand(root);\n    return root;\n  }\n}\n\n/**\n * turn something with a forEach into a string (works for sets)\n * @param {*} lst\n */\nexport function strifyNodes(lst, field = \"name\") {\n  let s = \"[\";\n  lst.forEach(v => (s += v[field] + \" \"));\n  s += \"]\";\n  return s;\n}\n\n/**\n * Given a graph, change things such that all links are 1 level\n * this means that longer links get broken into a series of steps with phantom nodes inserted\n * @param {Graph} graph\n */\nfunction phantomGraph(graph) {\n  // a list of all of the long links\n  const longLinks = graph.links.filter(\n    link => link.target.longest - link.source.longest > 1\n  );\n  // links are only the links of the correct length\n  const links = graph.links.filter(\n    link => link.target.longest - link.source.longest == 1\n  );\n  // save the old links\n  // @ts-ignore\n  graph.oldLinks = graph.links;\n\n  // break up the long links\n  longLinks.forEach(function(link, li) {\n    // disconnect child and parent\n    link.target.parents.splice(link.target.parents.indexOf(link.source), 1);\n    link.source.children.splice(link.source.children.indexOf(link.target), 1);\n    let prev = link.source;\n    for (\n      let level = link.source.longest + 1;\n      level < link.target.longest;\n      level++\n    ) {\n      let nnode = new Vertex(`connector-${li}-${level}`);\n      nnode.phantom = true;\n      nnode.parents.push(prev);\n      nnode.longest = level;\n      nnode.depth = link.source.depth + 1;\n      nnode.istree = false;\n      prev.children.push(nnode);\n      graph.nodes.push(nnode);\n      links.push(new Link(prev, nnode));\n      prev = nnode;\n    }\n    link.target.parents.push(prev);\n    prev.children.push(link.target);\n    links.push(new Link(prev, link.target));\n  });\n\n  graph.links = links;\n}\n\n/**\n * analyze a graph in place\n * this just adds information to the nodes (in place)\n * depth, longest, istree, index\n * if we level the graph, we add phantom nodes BEFORE doing ancestry\n * @param {Graph} graph\n * @param {boolean} [level=true]\n */\nexport function analyzeGraph(graph, level = true) {\n  // some analysis\n  let roots = graph.roots();\n\n  // Depths\n  // do a simple breadth-first search to get depth - where depth is shortest path to a root\n  // start with the roots\n  let queue = [];\n  roots.forEach(x => {\n    x.depth = 1;\n    queue.push(x);\n  });\n  // now iterate until we're done\n  while (queue.length) {\n    const n = queue.shift();\n    n.children.forEach(child => {\n      // jshint ignore:line\n      if (child.depth < 1) {\n        child.depth = n.depth + 1;\n        queue.push(child);\n      }\n    });\n  }\n\n  // a tricker thing is to find the LONGEST path to a node\n  // I am doing this inefficiently - each node may be visited multiple times\n  // each time it is updated\n  queue = [];\n  roots.forEach(x => {\n    x.longest = 1;\n    queue.push(x);\n  });\n  // now iterate until we're done\n  while (queue.length) {\n    const n = queue.shift();\n    const newLong = n.longest + 1;\n    n.children.forEach(child => {\n      // jshint ignore:line\n      if (child.longest < newLong) {\n        child.longest = newLong;\n        queue.push(child);\n      }\n    });\n  }\n\n  // Is the subtree below a node a tree?\n  // this requires that: each child is a tree, and each child has 1 parent\n  // we cache this within the node\n  function isTree(n) {\n    // jshint ignore:line\n    if (n.istree != undefined) return n.istree;\n    // look for a child that makes us not a tree\n    let istree = true;\n    n.children.forEach(function(child) {\n      if (!isTree(child) || child.parents.length > 1) {\n        istree = false;\n      }\n    });\n    n.istree = istree;\n    return istree;\n  }\n  graph.nodes.forEach(n => isTree(n));\n\n  // add the phantom nodes if need be\n  if (level) phantomGraph(graph);\n\n  // assign indecies based on order - AFTER phantom nodes added\n  graph.nodes.forEach((n, i) => (n.index = i));\n\n  // analyses after adding the phantoms\n  let levels = graph.getLevels();\n\n  // ancestor sets - a place where naive breadth first actually makes sense\n  graph.breadthFirst(function(node) {\n    node.children.forEach(function(child) {\n      node.ancestors.forEach(ancestor => child.ancestors.add(ancestor));\n      child.ancestors.add(node);\n    });\n  });\n\n  // work bottom up, rather than using breadth first\n  for (let li = levels.length - 1; li >= 0; li--) {\n    const level = levels[li];\n    level.forEach(function(node) {\n      node.children.forEach(function(child) {\n        child.ancestors.forEach(a => node.descendentAncestors.add(a));\n        child.descendentAncestors.forEach(a => node.descendentAncestors.add(a));\n      });\n    });\n  }\n  // find the das at the level above the node\n  graph.nodes.forEach(function(node) {\n    node.dalevel = [...node.descendentAncestors].filter(\n      n => n.longest == node.longest\n    );\n  });\n}\n","/* eslint-disable no-console */\n/*jshint esversion: 6 */\n// @ts-check\n\n// eslint-disable-next-line no-unused-vars\nimport { Graph, strifyNodes } from \"./graph.js\";\n// @ts-ignore\n// @ts-ignore\nimport * as d3 from \"d3\";\nimport * as util from \"../util\";\n\n// /**\n//  *\n//  * @param {Graph} graph\n//  * @param {string} selector=\"body\"\n//  * @param {Object} params={}\n//  * @param {number} [params.height = 800]\n//  * @param {number} [params.nodeRadius = 4]\n//  * @param {?Boolean} [params.drawPhantoms]\n//  * @param {number} [params.bezierVert = 25]\n//  */\n// export function drawGraphLab(graph, selector = \"body\", vueThis, params = {}) {\n\n//   let linkType = \"paths\";\n//   let paths;\n\n//   /**\n//    * Where the vanilla JavaScript pass the click event to Vue\n//    */\n//   function update() {\n//     switch (linkType) {\n//       case \"arrows\":\n//         // draw directed edges with proper padding from node centers\n//         paths.attr(\"d\", function(d) {\n//           let deltaX = d.target.x - d.source.x,\n//             deltaY = d.target.y - d.source.y,\n//             dist = Math.sqrt(deltaX * deltaX + deltaY * deltaY),\n//             normX = deltaX / dist,\n//             normY = deltaY / dist,\n//             sourcePadding = d.source.phantom ? 1 : nodeRadius,\n//             targetPadding = d.target.phantom ? 1 : nodeRadius + 2,\n//             sourceX = d.source.x + sourcePadding * normX,\n//             sourceY = d.source.y + sourcePadding * normY,\n//             targetX = d.target.x - targetPadding * normX,\n//             targetY = d.target.y - targetPadding * normY;\n//           return \"M\" + sourceX + \",\" + sourceY + \"L\" + targetX + \",\" + targetY;\n//         });\n//         break; // end arrow update\n//       case \"lines\":\n//         paths.attr(\"x1\", d => d.source.x);\n//         paths.attr(\"y1\", d => d.source.y);\n//         paths.attr(\"x2\", d => d.target.x);\n//         paths.attr(\"y2\", d => d.target.y);\n//         break;\n//       case \"paths\":\n//         paths.attr(\"d\", function(d) {\n//           let x1 = d.source.x;\n//           let y1 = d.source.y + radius(d.source);\n//           let x2 = d.target.x;\n//           let y2 = d.target.y - radius(d.target);\n//           //return `M${x1},${y1}L${x2},${y2}`;\n//           return `M${x1},${y1}C${x1},${y1 + 15},${x2},${y2 - 15},${x2},${y2}`;\n//         });\n//         break;\n//     }\n\n//     // update node positions\n//     node\n//       .attr(\"cx\", function(d) {\n//         return d.x;\n//       })\n//       .attr(\"cy\", function(d) {\n//         return d.y;\n//       });\n//   }\n//   update();\n// }\n\n/**\n * New drawwing code - only does Beziers\n * has a few parameters\n * and cannot update node positions\n *\n * @param {Graph} graph\n * @param {string} selector=\"body\"\n * @param {Object} params={}\n * @param {number} [params.height = 800]\n * @param {number} [params.nodeRadius = 4.5]\n * @param {?Boolean} [params.drawPhantoms]\n * @param {number} [params.bezierVert = 25]\n */\n// @ts-ignore\n// @ts-ignore\nexport function drawGraph(graph, selector = \"body\", vueThis, params = {}) {\n  let nodeRadius = params.nodeRadius || 4.5;\n  let bvert = params.bezierVert || 15;\n  let height = params.height || 985;\n  const width = Math.max(...graph.nodes.map(n => n.x)) + nodeRadius;\n\n  let svg = d3\n    // @ts-ignore\n    .select(selector)\n    .append(\"svg\")\n    .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n    .attr(\"viewBox\", `0 0 ${width} ${height}`)\n    .call(\n      // @ts-ignore\n      d3.zoom().on(\"zoom\", function() {\n        // @ts-ignore\n        svg.attr(\"transform\", d3.event.transform);\n      })\n    )\n    .append(\"g\");\n\n  let paths;\n\n  // create the Bezier segment from x1,y1 to x2,y2 - assuming that x1,y1 was the last point\n  // note that the derivatives go vertically\n  function cseg(x1, y1, x2, y2) {\n    // I made this a variable to experiment with computing better values\n    // nothing works well\n    let bv = bvert;\n    return `C${x1},${y1 + nodeRadius + bv},${x2},${y2 -\n      nodeRadius -\n      bv},${x2},${y2 - nodeRadius}`;\n  }\n\n  // @ts-ignore\n  function pathId(links) {\n    return (\n      util.FORMAT_TO_ID(links[\"source\"][\"name\"]) +\n      \"---\" +\n      util.FORMAT_TO_ID(links[\"target\"][\"name\"])\n    );\n  }\n\n  // we only create links for the non-phantom source nodes\n  // we then trace through the phantom nodes\n  paths = svg\n    .selectAll(\".link\")\n    .data(graph.links.filter(link => !link.source.phantom))\n    .enter()\n    .append(\"svg:path\")\n    .attr(\"id\", pathId)\n    .attr(\"stroke-width\", 0.75)\n    .attr(\"fill\", \"none\")\n    .attr(\"d\", function(d) {\n      // start at the beginning of the first source\n      let x1 = d.source.x;\n      let y1 = d.source.y + nodeRadius;\n      let pstr = `M${x1},${y1}`;\n      let next = d.target;\n      // traverse phantom nodes\n      while (next.phantom) {\n        let x2 = next.x;\n        let y2 = next.y;\n        pstr += cseg(x1, y1, x2, y2);\n        // vertical line through the node's location\n        pstr += `L${x2},${y2 + nodeRadius}`;\n        next = next.children[0];\n        x1 = x2;\n        y1 = y2;\n      }\n      // now we go to the final place\n      let x2 = next.x;\n      let y2 = next.y;\n      pstr += cseg(x1, y1, x2, y2);\n      return pstr;\n    });\n\n  paths.style(\"stroke\", link => link.color).attr(\"class\", \"link\");\n  paths.on(\"mouseover\", function handle(d) {\n    // @ts-ignore\n    let link = d3.select(this);\n    link.style(\"stroke\", \"#FF6F61\");\n   \n    /**\n     * \n     * \n     * Need to add the hover over edge show tooltips\n     * on both nodes functionality here\n     * \n     * \n     */\n  });\n  paths.on(\"mouseout\", function handle(d) {\n    // @ts-ignore\n    d3.select(this).style(\"stroke\", d.color);\n  });\n\n  /**\n   * Assign an id to each circle based on node type\n   * @param {Object} node\n   */\n  // Assign an id to each circle based on node type\n  // @ts-ignore\n  function nodeId(node) {\n    if (node.phantom) {\n      return \"phantom-\" + util.FORMAT_TO_ID(node.name);\n    } else {\n      return \"circle-\" + util.FORMAT_TO_ID(node.name);\n    }\n  }\n\n  // @ts-ignore\n  function handleMouseOver() {\n    // Use D3 to select element, change color and size\n    // @ts-ignore\n    let node = d3.select(this);\n    node.attr(\"r\", nodeRadius * 2);\n\n    // @ts-ignore\n    let d3plus = require(\"d3plus-tooltip\");\n    // @ts-ignore: This is a notation that d3plus-tooltip uses\n    new d3plus.Tooltip()\n      .data([{ name: node.attr(\"name\") }])\n      .thead([\n        function(node) {\n          return node.name;\n        }\n      ])\n      .position(\"#\" + node.attr(\"id\"))\n      .render();\n  }\n\n  // @ts-ignore\n  function handleMouseOut() {\n    // @ts-ignore\n    d3.select(this).attr(\"r\", nodeRadius);\n    // @ts-ignore\n    d3.select(\".d3plus-tooltip\").remove();\n  }\n\n  function handleMouseClick() {\n    // @ts-ignore\n    vueThis.selectedCellName = d3.select(this).attr(\"name\");\n  }\n\n  function nodeClass(node) {\n    if (node.phantom) {\n      return \"phantom\";\n    } else {\n      return \"cell\";\n    }\n  }\n\n  function nodeColor(node) {\n    if (node.phantom) return \"#42b98300\";\n    if (node.istree) return \"#faed27\";\n    return \"#faed27\";\n  }\n\n  function nodeName(node) {\n    return node.name;\n  }\n\n  function nodeStroke(node) {\n    if (node.phantom) return \"none\";\n    return \"#000\";\n  }\n\n  let node = svg\n    .selectAll(\".node\")\n    .data(\n      params.drawPhantoms ? graph.nodes : graph.nodes.filter(n => !n.phantom)\n    )\n    .enter()\n    .append(\"circle\")\n    .attr(\"name\", nodeName)\n    .attr(\"id\", nodeId)\n    .attr(\"class\", nodeClass)\n    .attr(\"r\", nodeRadius)\n    .style(\"fill\", nodeColor)\n    .style(\"stroke\", nodeStroke)\n    .style(\"stroke-width\", 0.5)\n    .attr(\"cx\", d => d.x)\n    .attr(\"cy\", d => d.y);\n\n  node\n    .filter(\".cell\")\n    .on(\"mouseover\", handleMouseOver)\n    .on(\"mouseout\", handleMouseOut)\n    .on(\"click\", handleMouseClick);\n\n  node.append(\"title\").text(function(d) {\n    return `${\n      d.index\n    }:${d.name} ${strifyNodes(d.dalevel, \"index\")} tw:${d.twidth}`;\n  });\n}\n","import { Link, Graph, Vertex } from \"./graph.js\";\n\n/* just make the graph data structure given the input data */\n/**\n *\n * @param {Graph} data\n */\nexport function jsonToGraph(data) {\n  // we have a set of node names (in data) with their children\n  // make a list of node objects\n  // warning: arrow notation can't return an object directly\n  let nodes = Object.keys(data).map(name => new Vertex(name));\n\n  // make a dictionary so that we can find things by name\n  // it's called \"node\" since it lets us find a node\n  let node = {};\n  nodes.forEach(function(n) {\n    node[n.name] = n;\n  });\n\n  // assign reasonable indecies\n  nodes.forEach((node, idx) => (node.index = idx));\n\n  // make links in the correct format\n  // now process all of the links - create a list of links, as well\n  // as store the graph information in the nodes\n  let links = [];\n  for (const sourceName in data) {\n    data[sourceName].forEach(function(targetName) {\n      const source = node[sourceName];\n      const target = node[targetName];\n      if (!source) console.log(`Bad node ${sourceName} as source`);\n      if (!target) console.log(`Bad node ${targetName} as target`);\n      if (source && target) {\n        let link = new Link(source, target);\n        links.push(link);\n        source.children.push(target);\n        target.parents.push(source);\n      }\n    });\n  }\n\n  return new Graph(nodes, links);\n}\n","/*jshint esversion: 6 */\n// @ts-check\nimport { Graph } from \"./graph.js\";\n\n/**\n * @param {Graph} graph\n */\nexport function primaryParent(graph) {\n  // for every node, choose it's primary parent\n  graph.nodes.forEach(function(node) {\n    node.primaryParent = undefined;\n    let maxChildren = 0;\n    node.parents.forEach(function(parent) {\n      const parentKids = parent.children.length;\n      if (parentKids > maxChildren) {\n        maxChildren = parentKids;\n        node.primaryParent = parent;\n      }\n    });\n  });\n  // for every node, get all of the children for which it is primary\n  graph.nodes.forEach(node => (node.primaryChildren = []));\n  graph.nodes.forEach(node => {\n    if (node.primaryParent) node.primaryParent.primaryChildren.push(node);\n  });\n}\n","/*jshint esversion: 6 */\n// @ts-check\nimport { Graph } from \"./graph.js\";\nimport { average, sum } from \"./utils.js\";\n\nimport * as d3 from \"d3\";\n\nfunction xLength(graph) {\n  const diffs = graph.links.map(link =>\n    Math.abs(link.source.x - link.target.x)\n  );\n  return diffs.reduce((a, b) => (b += a));\n}\n\n/** use the d3 layout */\nexport function d3Layout(graph, levelSep = 100, leftMargin = 10) {\n  // @ts-ignore\n  let hier = d3.hierarchy(graph.hierarchy());\n  // @ts-ignore\n  let tree = d3.tree();\n  // @ts-ignore\n  tree.size([]); // do we have to give it a size?\n  // node size is fixed - so instead, use separation to control spacing\n  tree.separation(function(a, b) {\n    let na = a.data.node;\n    let nb = b.data.node;\n    if (na && nb) {\n      return 1 + (na.phantom ? 2 : 5) + (nb.phantom ? 2 : 5);\n    } else {\n      return 10;\n    }\n  });\n  tree.nodeSize([1, 1]);\n  tree(hier);\n  // things are centered at zero, so shift things\n  // @ts-ignore\n  let left = Math.min(...hier.descendants().map(n => n.x));\n  hier.descendants().forEach(n => {\n    // @ts-ignore\n    n.x -= left - leftMargin;\n  });\n  // copy the D3 positions into the node positions\n  hier.descendants().forEach(function(node) {\n    if ((node.data, node)) {\n      // @ts-ignore\n      node.data.node.x = node.x;\n      node.data.node.y = (node.data.node.longest + 1) * levelSep;\n    }\n  });\n}\n\n/**\n *\n * @param {Graph} graph\n */\nexport function layout(graph) {\n  // for debugging - keep a set of nodes (a dictionary) that we'll do print statements\n  const examine = {\n    129: true\n  };\n\n  const width = 1200;\n  const topmargin = 50;\n  const levelSep = 50;\n\n  const vertexRadius = 5;\n  const phantomRadius = 1;\n  const spacer = 2;\n\n  function space(node) {\n    return spacer + (node.phantom ? phantomRadius : vertexRadius);\n  }\n\n  const levels = graph.getLevels();\n  // @ts-ignore\n  // @ts-ignore\n  const links = graph.links;\n\n  // assign indecies based on levels\n  // this means creating a new node list\n  const orderedNodes = [];\n  levels.forEach(level => level.forEach(n => orderedNodes.push(n)));\n  orderedNodes.forEach((node, idx) => (node.index = idx));\n\n  // make initial positions\n  levels.forEach(function(level, li) {\n    let left = 0;\n    // @ts-ignore\n    // @ts-ignore\n    level.forEach(function(n, ni) {\n      // @ts-ignore\n      // @ts-ignore\n      let px = n.parents.length ? Math.min(...n.parents.map(m => m.x)) : 0;\n      n.x = left + space(n); // Math.max(px, left+space(n));\n      n.y = topmargin + li * levelSep;\n      left = n.x + space(n);\n    });\n  });\n  console.log(`Initial Lengths = ${xLength(graph)}`);\n\n  // adjust initial positions to the right\n  if (1) {\n    // need to go bottom to top\n    // levels.forEach( function(level,li)\n    for (let li = levels.length - 1; li >= 0; li--) {\n      const level = levels[li];\n      let right = width;\n      // go from right to left shifting things right if they can\n      for (let ni = level.length - 1; ni >= 0; ni--) {\n        let n = level[ni];\n\n        // if the rightmost thing is a leaf, we might want to move it to\n        // make space for other things\n        let rightLeaf = width;\n\n        // 4 different heuristics as to where to move to - purely aesthetics\n        let nx1 = n.children.length\n          ? Math.min(...n.children.map(m => m.x))\n          : rightLeaf;\n        let nx3 = n.children.length\n          ? Math.max(...n.children.map(m => m.x))\n          : rightLeaf;\n        // @ts-ignore\n        // @ts-ignore\n        let nx2 = (nx1 + nx3) / 2;\n        let na = n.children.length\n          ? average(n.children.map(m => m.x))\n          : rightLeaf;\n\n        if (n.index in examine) {\n          console.log(`right: n.x:${n.x} na:${na} right:${right}`);\n        }\n\n        let nx = Math.max(na, n.x);\n        n.x = Math.min(nx, right - space(n));\n        right = n.x - space(n);\n      }\n    } // );\n  }\n\n  function argmax(lst) {\n    let val = lst[0];\n    let mi = 0;\n    for (let i = 1; i < lst.length; i++) {\n      if (lst[i] > val) {\n        mi = i;\n        val = lst[i];\n      }\n    }\n    return mi;\n  }\n\n  function argmin(lst) {\n    let val = lst[0];\n    let mi = 0;\n    for (let i = 1; i < lst.length; i++) {\n      if (lst[i] < val) {\n        mi = i;\n        val = lst[i];\n      }\n    }\n    return mi;\n  }\n\n  // greedy pull left\n  // if the average of the children of a parent is to the right of the parent\n  // then this is a candidate to move to the left\n  // a parent should shift its children to the left if they aren't centered\n  levels.forEach(function(level) {\n    let left = 0;\n    level.forEach(function(node) {\n      if (node.primaryChildren.length) {\n        // we can't count on the ordering of the primary children\n        let leftChild =\n          node.primaryChildren[argmin(node.primaryChildren.map(n => n.x))];\n        let rightChild =\n          node.primaryChildren[argmax(node.primaryChildren.map(n => n.x))];\n        // console.log(`$N:${node.name} LC:${leftChild.name} RC:${rightChild.name} Left:${left}`)\n        // figure out how much shift we want\n        let goalDelta = average(node.primaryChildren.map(n => n.x)) - node.x;\n        if (goalDelta > 0) {\n          // we want to shift left, but how much can we\n          let maxShift = leftChild.x - (left + space(leftChild));\n          let shift = Math.min(maxShift, goalDelta);\n          if (shift > 0) {\n            node.primaryChildren.forEach(n => (n.x -= shift));\n          }\n        }\n        // put the boundary to the right of the rightmost child\n        left = rightChild.x + space(rightChild);\n      }\n    });\n  });\n\n  console.log(`Final Lengths = ${xLength(graph)}`);\n\n  // Report Out\n  console.log(\n    `${graph.nodes.length} nodes (w/phantoms), ${graph.links.length} links (w/phantoms)`\n  );\n  console.log(`${graph.constraints.length} constraints`);\n}\n\n/**\n * New version - use tree layout first (which will be too wide) and then try to do some packing for conciseness\n * @param {Graph} graph\n */\nexport function treeLayout(graph) {\n  // parameters (should be passed)\n  const topmargin = 50;\n  const levelSep = 65;\n\n  const vertexRadius = 5;\n  const phantomRadius = 2;\n  const spacer = 2;\n\n  function space(node) {\n    return spacer + (node.phantom ? phantomRadius : vertexRadius);\n  }\n\n  function minwid(node) {\n    return spacer + 2 * (node.phantom ? phantomRadius : vertexRadius);\n  }\n\n  const levels = graph.getLevels();\n\n  // compute various vertex properties - needs to be done from bottom to top\n  for (let li = levels.length - 1; li >= 0; li--) {\n    const level = levels[li];\n    // figure out the twidth of each node - the twidth includes the \"left\" spacer\n    level.forEach(function(node) {\n      // jshint ignore:line\n      node.twidth = Math.max(\n        minwid(node),\n        sum(node.primaryChildren.map(n => n.twidth))\n      );\n    });\n  }\n\n  // in theory, if we use the twidths, we shoud get a left leaning tree layout\n  levels.forEach(function(level, li) {\n    let left = vertexRadius;\n    level.forEach(function(node) {\n      node.x = Math.max(\n        left + space(node),\n        node.primaryParent ? node.primaryParent.x : 0\n      );\n      node.y = topmargin + li * levelSep;\n      // left += node.twidth;\n      left = node.x - space(node) + node.twidth;\n    });\n  });\n\n  // we have a left leaning tree, center parents over their kids (if we can move them that far right)\n  for (let ni = graph.nodes.length - 1; ni >= 0; ni--) {\n    const node = graph.nodes[ni];\n    if (node.primaryChildren.length) {\n      const goalX = average(node.primaryChildren.map(n => n.x));\n      const neighbor = graph.nodes[ni + 1];\n      if (neighbor.longest == node.longest) {\n        const maxX = neighbor.x - space(node) - space(neighbor) + spacer;\n        node.x = Math.min(maxX, goalX);\n      } else {\n        node.x = goalX;\n      }\n    }\n  }\n}\n","<template>\n  <v-layout row wrap>\n    <v-flex md12>\n      <v-card :max-height=\"maxCardHeight\">\n        <v-card-title class=\"justify-center\">\n          <h4 class=\"view-title\">Graph View</h4>\n          <v-spacer />\n          <v-chip v-if=\"cellType1\" class=\"ma-2\">{{ cellType1 }}</v-chip>\n          <v-chip v-if=\"cellType2\" class=\"ma-2\">{{ cellType2 }}</v-chip>\n        </v-card-title>\n        <v-card-text>\n          <div ref=\"graph\" id=\"graph\"></div>\n        </v-card-text>\n      </v-card>\n    </v-flex>\n  </v-layout>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\nimport _ from \"lodash\";\n\nimport * as config from \"@/config\";\nimport * as util from \"@/util\";\n\nimport { analyzeGraph } from \"@/apis/graph.js\";\nimport { average, countCrossingsGraph, simpleSorter } from \"@/apis/utils.js\";\nimport { drawGraph } from \"@/apis/draw.js\";\nimport { jsonToGraph } from \"@/apis/structure.js\";\nimport { primaryParent } from \"@/apis/tangler.js\";\nimport { treeLayout } from \"@/apis/layout.js\";\n\nexport default {\n  name: \"cell-graph\",\n  props: {\n    cellData: Object\n  },\n  mounted() {\n    this.fetchData();\n  },\n  data() {\n    return {\n      cellType1: \"\",\n      cellType2: \"\",\n      keyValueDict: {},\n      listLocalCopy: [],\n      listSize: config.MAX_SELECTED_CELL_TYPE_NUMBER,\n      loaded: false,\n      loadedDictData: {},\n      maxCardHeight: config.FIRST_ROW_CARD_MAX_HEIGHT,\n      selectedCellName: \"\",\n      pathsDict: {}\n    };\n  },\n  methods: {\n    async fetchData() {\n      let data = await d3.json(\"./top_abs_10_dict.json\");\n      this.loadedDictData = data;\n    },\n\n    /**\n     * If any of these edge cases nodes are contained,\n     * return true (need to fade the edge in current case)\n     */\n    linkArrayEdgeCases(edgeCaseCheck) {\n      return (\n        edgeCaseCheck === \"cell\" ||\n        edgeCaseCheck === \"native cell\" ||\n        edgeCaseCheck === \"eukaryotic cell\"\n      );\n    },\n\n    /**\n     * Draw, layout and show graph on view\n     */\n    showGraph() {\n      let graph = jsonToGraph(this.cellData);\n      analyzeGraph(graph);\n      primaryParent(graph);\n      for (let i = 0; i < 20; i++) {\n        simpleSorter(graph, 3, i);\n      }\n      graph.links.forEach(\n        link =>\n          (link.color =\n            link.target.primaryParent == link.source ? \"#42b983\" : \"#42b983\")\n      );\n      treeLayout(graph);\n      drawGraph(graph, this.$refs.graph, this);\n    }\n  },\n  computed: {\n    geneSelected: {\n      get() {\n        return this.$store.getters.getGeneSelected;\n      }\n    },\n    cellSelected: {\n      get() {\n        return this.$store.getters.getCellSelected;\n      }\n    },\n    topGeneCellList: {\n      get() {\n        return this.$store.getters.getTopGeneCellList;\n      }\n    },\n    search: {\n      get() {\n        return this.$store.getters.getSearch;\n      },\n      set(value) {\n        return this.$store.dispatch(\"changeSearch\", value);\n      }\n    }\n  },\n  watch: {\n    // This is entry point of where the graph starts rendering\n    cellData() {\n      this.loaded = true;\n      this.listLocalCopy = util.GENERATE_LIST_COPY(this.cellData);\n      // Create a key(cell name) value(cell neighbors) list dict\n      const keys = Object.entries(this.listLocalCopy);\n      keys.forEach(item => {\n        this.keyValueDict[item[1][0]] = item[1][1];\n      });\n\n      for (let i = 0; i < this.listLocalCopy.length; i++) {\n        this.listLocalCopy[i].push(i.toString());\n      }\n      this.showGraph();\n    },\n    cellSelected() {\n      let curList = this.cellSelected;\n      this.cellType1 = \"\";\n      this.cellType2 = \"\";\n\n      if (curList.length == 1) {\n        this.cellType1 = curList[0];\n      } else if (curList.length == 2) {\n        this.cellType1 = curList[0];\n        this.cellType2 = curList[1];\n      }\n      // Set all cell nodes back to default\n      let svgClear = d3.select(this.$refs.graph).select(\"svg\");\n      svgClear\n        .selectAll(\".cell\")\n        .style(\"r\", config.NODE_RADIUS_DEFAULT)\n        .transition()\n        .style(\"fill\", config.CELL_TYPE_DEFAULT_COLOR);\n      // Highlight the node being selected\n      for (let i = 0; i < curList.length; i++) {\n        let svgHighlight = d3.select(this.$refs.graph).select(\"svg\");\n        svgHighlight\n          .select(\"#circle-\" + util.FORMAT_TO_ID(curList[i]))\n          .style(\"r\", config.NODE_RADIUS_POPPED)\n          .transition()\n          .style(\"fill\", config.CELL_TYPE_CHANGED_COLOR);\n      }\n    },\n    // Maintain selected cell type in display list\n    selectedCellName() {\n      let curList = this.cellSelected;\n      while (curList.length >= this.listSize) {\n        curList.pop();\n      }\n      curList.push(this.selectedCellName);\n      this.$store.dispatch(\"changeCellSelected\", curList);\n    },\n    /**\n     * Fade cell types that does not contain selected gene as top 10\n     */\n    geneSelected() {\n      let globalThis = this;\n      let dict = this.loadedDictData;\n      /* Reset default cell opacity(1) */\n      let cellReset = d3.select(this.$refs.graph).select(\"svg\");\n      cellReset = d3.selectAll(\".cell\").style(\"opacity\", 1);\n      /* Reset link opacity(1) and width(0.5) */\n      let linkReset = d3.select(this.$refs.graph).select(\"svg\");\n      linkReset = d3\n        .selectAll(\".link\")\n        .style(\"opacity\", 1.0)\n        .attr(\"stroke-width\", 0.5);\n\n      if (this.geneSelected === \"\") {\n        return;\n      }\n\n      let cellTypesThatFitCriteria = new Set();\n\n      /* Determine if each cell type contain selected gene as its top 10 */\n      for (const cellType of Object.entries(dict)) {\n        let cellName = cellType[0];\n        let cellValues = cellType[1];\n        let geneExist = false;\n        for (const gene of cellValues) {\n          let geneName = gene[2];\n          if (this.geneSelected === geneName) {\n            geneExist = true;\n            break;\n          }\n        }\n        /* If a gene is not among a cell type's top 10 */\n        if (!geneExist) {\n          /* Fade the cell type on graph */\n          let svgFade = d3.select(this.$refs.graph).select(\"svg\");\n          svgFade\n            .select(\"#circle-\" + util.FORMAT_TO_ID(cellName))\n            .style(\"opacity\", 0.2);\n        } else {\n          /* Add it to the cell type set */\n          cellTypesThatFitCriteria.add(\n            cellName\n              .replace(/-/g, \" \")\n              .replace(/\\(/g, \"\")\n              .replace(/\\)/g, \"\")\n              .replace(/,/, \"\")\n              .replace(/\\//g, \"-\")\n          );\n        }\n      }\n\n      /**\n       * Current edge cases of nodes that needs to be manually faded,\n       * need to figure out what happened here.\n       */\n      let svgEdgeCase1 = d3.select(this.$refs.graph).select(\"svg\");\n      svgEdgeCase1\n        .select(\"#circle-\" + util.FORMAT_TO_ID(\"cell\"))\n        .style(\"opacity\", 0.2);\n      let svgEdgeCase2 = d3.select(this.$refs.graph).select(\"svg\");\n      svgEdgeCase2\n        .select(\"#circle-\" + util.FORMAT_TO_ID(\"native cell\"))\n        .style(\"opacity\", 0.2);\n      let svgEdgeCase3 = d3.select(this.$refs.graph).select(\"svg\");\n      svgEdgeCase3\n        .select(\"#circle-\" + util.FORMAT_TO_ID(\"eukaryotic cell\"))\n        .style(\"opacity\", 0.2);\n\n      /**\n       * Fade links does not have both nodes contained in our node set\n       */\n      d3.select(this.$refs.graph)\n        .select(\"svg\")\n        .selectAll(\".link\")\n        .each(function(d) {\n          let linkArray = d3\n            .select(this)\n            .attr(\"id\")\n            .split(\"---\");\n          for (let i = 0; i < linkArray.length; i++) {\n            linkArray[i] = linkArray[i]\n              .replace(/-/g, \" \")\n              .replace(/\\(/g, \"\")\n              .replace(/\\)/g, \"\")\n              .replace(/,/, \"\")\n              .replace(/\\//g, \"-\");\n          }\n          if (\n            !cellTypesThatFitCriteria.has(linkArray[0]) ||\n            !cellTypesThatFitCriteria.has(linkArray[1]) ||\n            globalThis.linkArrayEdgeCases(linkArray[0]) ||\n            globalThis.linkArrayEdgeCases(linkArray[1])\n          ) {\n            d3.select(this).style(\"opacity\", 0.2);\n          } else {\n            // Increase the stroke width if fit all the criteria\n            d3.select(this).attr(\"stroke-width\", 3);\n          }\n        });\n    }\n  }\n};\n</script>\n\n<style scoped>\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CellGraph.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CellGraph.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CellGraph.vue?vue&type=template&id=ca97de06&scoped=true&\"\nimport script from \"./CellGraph.vue?vue&type=script&lang=js&\"\nexport * from \"./CellGraph.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ca97de06\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\",\"align-center\":\"\"}},[_c('v-flex',{attrs:{\"md12\":\"\"}},[_c('v-card',{attrs:{\"max-height\":\"600\"}},[_c('v-card-title',{staticClass:\"justify-left\"},[_c('h4',{staticClass:\"view-title\"},[_vm._v(\"Search View\")])]),_c('v-tabs',{attrs:{\"fixed-tabs\":\"\"}},[_c('v-tab',[_vm._v(\"Cell Centric\")]),_c('v-tab',[_vm._v(\"Gene Centric\")]),_c('v-tab-item',[_c('v-card-text',[_c('v-layout',[_c('v-flex',{attrs:{\"md9\":\"\",\"sm12\":\"\"}},[_c('v-text-field',{attrs:{\"append-icon\":\"search\",\"label\":\"search\",\"single-line\":\"\",\"hide-details\":\"\",\"hide-no-data\":\"\"},model:{value:(_vm.search),callback:function ($$v) {_vm.search=$$v},expression:\"search\"}})],1),_c('v-spacer'),_c('v-flex',{attrs:{\"md3\":\"\",\"sm12\":\"\"}},[_c('v-select',{attrs:{\"items\":_vm.sortOptions,\"label\":\"sort\"},on:{\"input\":_vm.sortBasedOnOption},model:{value:(_vm.option),callback:function ($$v) {_vm.option=$$v},expression:\"option\"}})],1)],1),_c('v-layout',{staticClass:\"list\",class:{ 'max-height': _vm.listHeight },attrs:{\"row\":\"\",\"wrap\":\"\"}},[(_vm.loaded && _vm.listLocalCopy)?_c('v-flex',{attrs:{\"md12\":\"\"}},[_c('v-list',_vm._l((_vm.filteredData),function(keyValuePair,index){return _c('v-list-item',{key:index,staticClass:\"list\",on:{\"click\":function($event){return _vm.setCellSelected(keyValuePair[0])}}},[_c('v-layout',[(keyValuePair[0] && keyValuePair[1])?_c('v-flex',{staticClass:\"index\",attrs:{\"md3\":\"\",\"offset-md1\":\"\"}},[_vm._v(_vm._s(keyValuePair[0])+\": \")]):_vm._e(),(keyValuePair[1])?_c('v-flex',{attrs:{\"md6\":\"\",\"offset-md1\":\"\"}},_vm._l((keyValuePair[1]),function(neighbor,index){return _c('v-list',{key:index,attrs:{\"dense\":\"\"}},[(index === keyValuePair[1].length - 1)?_c('span',[_vm._v(_vm._s(neighbor))]):_c('span',[_vm._v(_vm._s(neighbor)+\",\")])])}),1):_vm._e()],1)],1)}),1)],1):_vm._e()],1)],1)],1),_c('v-tab-item',[_c('v-card-text',[_c('v-layout',[_c('v-flex',{attrs:{\"md12\":\"\",\"sm12\":\"\"}},[_c('v-text-field',{attrs:{\"append-icon\":\"search\",\"label\":\"search\",\"single-line\":\"\",\"hide-details\":\"\",\"hide-no-data\":\"\"},model:{value:(_vm.geneSearch),callback:function ($$v) {_vm.geneSearch=$$v},expression:\"geneSearch\"}})],1)],1),_c('virtual-list',{staticClass:\"list\",attrs:{\"size\":40,\"remain\":10}},_vm._l((_vm.filteredGeneData),function(item){return _c('v-list-item',{key:item.id,on:{\"click\":function($event){return _vm.setGeneItem(item)}}},[_vm._v(\"\\n                \"+_vm._s(item)+\": \\n                \"),_c('a',{on:{\"click\":function($event){return _vm.navigateToGenePage(item)}}},[_vm._v(\"web link\")])])}),1)],1)],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-layout row wrap align-center>\n    <v-flex md12>\n      <v-card max-height=\"600\">\n        <v-card-title class=\"justify-left\">\n          <h4 class=\"view-title\">Search View</h4>\n        </v-card-title>\n\n        <v-tabs fixed-tabs>\n          <v-tab>Cell Centric</v-tab>\n          <v-tab>Gene Centric</v-tab>\n          <v-tab-item>\n            <v-card-text>\n              <v-layout>\n                <v-flex md9 sm12>\n                  <v-text-field\n                    v-model=\"search\"\n                    append-icon=\"search\"\n                    label=\"search\"\n                    single-line\n                    hide-details\n                    hide-no-data\n                  ></v-text-field>\n                </v-flex>\n                <v-spacer />\n                <v-flex md3 sm12>\n                  <v-select\n                    v-model=\"option\"\n                    :items=\"sortOptions\"\n                    @input=\"sortBasedOnOption\"\n                    label=\"sort\"\n                  ></v-select>\n                </v-flex>\n              </v-layout>\n              <v-layout\n                row\n                wrap\n                class=\"list\"\n                :class=\"{ 'max-height': listHeight }\"\n              >\n                <v-flex md12 v-if=\"loaded && listLocalCopy\">\n                  <v-list>\n                    <v-list-item\n                      v-for=\"(keyValuePair, index) in filteredData\"\n                      :key=\"index\"\n                      class=\"list\"\n                      @click=\"setCellSelected(keyValuePair[0])\"\n                    >\n                      <v-layout>\n                        <v-flex\n                          md3\n                          offset-md1\n                          v-if=\"keyValuePair[0] && keyValuePair[1]\"\n                          class=\"index\"\n                          >{{ keyValuePair[0] }}:&nbsp;</v-flex\n                        >\n                        <v-flex md6 offset-md1 v-if=\"keyValuePair[1]\">\n                          <v-list\n                            v-for=\"(neighbor, index) in keyValuePair[1]\"\n                            :key=\"index\"\n                            dense\n                          >\n                            <span v-if=\"index === keyValuePair[1].length - 1\">{{\n                              neighbor\n                            }}</span>\n                            <span v-else>{{ neighbor }},</span>\n                          </v-list>\n                        </v-flex>\n                      </v-layout>\n                    </v-list-item>\n                  </v-list>\n                </v-flex>\n              </v-layout>\n            </v-card-text>\n          </v-tab-item>\n          <!-- Gene Centric Search View -->\n          <v-tab-item>\n            <v-card-text>\n              <v-layout>\n                <v-flex md12 sm12>\n                  <v-text-field\n                    v-model=\"geneSearch\"\n                    append-icon=\"search\"\n                    label=\"search\"\n                    single-line\n                    hide-details\n                    hide-no-data\n                  ></v-text-field>\n                </v-flex>\n              </v-layout>\n              <virtual-list :size=\"40\" :remain=\"10\" class=\"list\">\n                <v-list-item\n                  v-for=\"item of filteredGeneData\"\n                  :key=\"item.id\"\n                  @click=\"setGeneItem(item)\"\n                >\n                  {{ item }}:&nbsp;\n                  <a @click=\"navigateToGenePage(item)\">web link</a>\n                </v-list-item>\n              </virtual-list>\n            </v-card-text>\n          </v-tab-item>\n        </v-tabs>\n      </v-card>\n    </v-flex>\n  </v-layout>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\nimport virtualList from \"vue-virtual-scroll-list\";\nimport _ from \"lodash\";\n\nexport default {\n  name: \"cell-list\",\n  props: {\n    cellData: Object\n  },\n  mounted() {\n    this.fetchData();\n  },\n  data() {\n    return {\n      cardHeight: this.$store.getters.getCardHeight,\n      detailItem: [],\n      listHeight: \"500px\",\n      listLocalCopy: [],\n      listSize: 2, // Put this in store at cleanup phase\n      loaded: false,\n      loadedDictData: {},\n      loadedGeneData: [],\n      sortOptions: [\"default\", \"neighbors\"]\n    };\n  },\n  methods: {\n    async fetchData() {\n      let data = await d3.json(\"./genes.json\");\n      this.loadedGeneData = data;\n      let top10Data = await d3.json(\"./top_abs_10_dict.json\");\n      this.loadedDictData = top10Data;\n    },\n    setCellSelected(cellName) {\n      let curList = this.$store.getters.getCellSelected;\n      while (curList.length >= this.listSize) {\n        curList.pop();\n      }\n      curList.push(cellName);\n      this.$store.dispatch(\"changeCellSelected\", curList);\n    },\n    generateListCopy(originalList) {\n      return Object.entries(_.cloneDeep(originalList));\n    },\n    navigateToGenePage(item) {\n      window.open(\n        \"http://useast.ensembl.org/Homo_sapiens/Gene/Summary?g=\" + item\n      );\n    },\n    setGeneItem(gene) {\n      this.$store.dispatch(\"changeGeneSelected\", gene);\n    },\n    sortBasedOnOption(option) {\n      this.$store.dispatch(\"changeOption\", String(option));\n      this.listLocalCopy = this.generateListCopy(this.cellData);\n      switch (option) {\n        case \"neighbors\":\n          return this.listLocalCopy.sort((a, b) =>\n            a[1].length < b[1].length ? 1 : -1\n          );\n      }\n    }\n  },\n  computed: {\n    filteredData() {\n      if (this.$store.getters.getSearch === \"\") {\n        return this.listLocalCopy;\n      } else {\n        return this.listLocalCopy.filter(cell => {\n          let searchResult = this.search.toLowerCase();\n          let caseInsesitiveCell0 = cell[0].toLowerCase();\n          let caseInsesitiveCell1 = cell[1].toLowerCase();\n          return (\n            caseInsesitiveCell0.includes(searchResult) ||\n            caseInsesitiveCell1.includes(searchResult)\n          );\n        });\n      }\n    },\n    filteredGeneData() {\n      if (this.$store.getters.getGeneSearchFromSearchView === \"\") {\n        return this.loadedGeneData;\n      } else {\n        return this.loadedGeneData.filter(gene => {\n          return gene.includes(this.geneSearch);\n        });\n      }\n    },\n    geneSelected: {\n      get() {\n        return this.$store.getters.getGeneSelected;\n      }\n    },\n    option: {\n      get() {\n        return this.$store.getters.getOption;\n      },\n      set(option) {\n        this.$store.dispatch(\"changeOption\", option);\n      }\n    },\n    search: {\n      get() {\n        return this.$store.getters.getSearch;\n      },\n      set(input) {\n        this.$store.dispatch(\"changeSearch\", input);\n      }\n    },\n    geneSearch: {\n      get() {\n        return this.$store.getters.getGeneSearchFromSearchView;\n      },\n      set(input) {\n        this.$store.dispatch(\"changeGeneSearchFromSearchView\", input);\n      }\n    }\n  },\n  watch: {\n    cellData() {\n      this.loaded = true;\n      this.listLocalCopy = this.generateListCopy(this.cellData);\n    },\n    geneSelected() {\n      let globalThis = this;\n      this.$store.dispatch(\"changeTopGeneCellList\", []);\n      for (const [key, value] of Object.entries(this.loadedDictData)) {\n        let geneArr = value;\n        for (let i = 0; i < geneArr.length; i++) {\n          if (geneArr[i][2] === globalThis.geneSelected) {\n            let cellName = key;\n            let geneValue = value[i][1];\n            globalThis.$store.dispatch(\"addToTopGeneCellList\", [\n              cellName,\n              geneValue\n            ]);\n          }\n        }\n      }\n    }\n  },\n  components: {\n    \"virtual-list\": virtualList\n  }\n};\n</script>\n\n<style scoped>\nv-card-title {\n  margin: 100px;\n}\n.list {\n  max-height: 350px;\n  overflow-y: auto;\n}\n.title {\n  margin-top: 10px;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SearchView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SearchView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SearchView.vue?vue&type=template&id=766aa67e&scoped=true&\"\nimport script from \"./SearchView.vue?vue&type=script&lang=js&\"\nexport * from \"./SearchView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SearchView.vue?vue&type=style&index=0&id=766aa67e&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"766aa67e\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"app\">\n    <v-app :dark=\"setTheme\">\n      <!--Header Section-->\n      <v-container fluid>\n        <v-switch\n          color=\"primary\"\n          :label=\"selectedTheme\"\n          v-model=\"goDark\"\n          class=\"switch\"\n        ></v-switch>\n        <Header msg=\"Cell Network Viewer\" />\n      </v-container>\n\n      <!--Body Section-->\n      <v-container bg grid-list-md fluid>\n        <v-layout row wrap>\n          <!-- \n          Search View \n          -->\n          <v-flex md5>\n            <SearchView :cellData=\"this.loadedData\" />\n          </v-flex>\n          <!-- \n          Graph View \n          -->\n          <v-flex md7>\n            <Graph :cellData=\"this.loadedData\" />\n          </v-flex>\n        </v-layout>\n        <v-layout row wrap>\n          <!-- \n          Gene Details View \n          -->\n          <v-flex md5>\n            <GeneDetails />\n          </v-flex>\n          <!-- \n          Cell Details View \n          -->\n          <v-flex md7>\n            <CellDetails />\n          </v-flex>\n        </v-layout>\n      </v-container>\n    </v-app>\n  </div>\n</template>\n\n<script>\nimport CellDetails from \"@/components/CellDetails.vue\";\nimport Header from \"@/components/TheHeader.vue\";\nimport GeneDetails from \"@/components/GeneDetails.vue\";\nimport Graph from \"@/components/CellGraph.vue\";\nimport SearchView from \"@/components/SearchView.vue\";\n\nimport * as d3 from \"d3\";\n\nexport default {\n  name: \"app\",\n  components: {\n    Header,\n    Graph,\n    SearchView,\n    CellDetails,\n    GeneDetails\n  },\n  mounted() {\n    this.fetchData();\n  },\n  data: function() {\n    return {\n      loadedData: {},\n      goDark: true\n    };\n  },\n  methods: {\n    // Fetch cell type graph data\n    async fetchData() {\n      this.loadedData = await d3.json(\"./cell_type_graph.json\");\n    }\n  },\n  computed: {\n    // Display which theme is currently on\n    selectedTheme() {\n      return this.goDark ? \"Dark Theme\" : \"Light Theme\";\n    },\n    // Toggle between light and dark theme\n    setTheme() {\n      if (this.goDark == true) {\n        return (this.$vuetify.theme.dark = true);\n      } else {\n        return (this.$vuetify.theme.dark = false);\n      }\n    }\n  }\n};\n</script>\n\n<style>\n#app {\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n}\n.switch {\n  margin: 20px;\n}\na,\nh3 {\n  color: #42b983;\n}\n.index {\n  color: #42b983;\n  font-weight: bold;\n}\n@import url(\"https://fonts.googleapis.com/css?family=BioRhyme&display=swap\");\n.view-title {\n  font-family: \"BioRhyme\", serif;\n}\n.sub-title {\n  font-weight: bold;\n  text-align: left;\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=66530f12&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from \"vue\";\nimport Vuex from \"vuex\";\n\nVue.use(Vuex);\n\nconst state = {\n  cellDetails: [],\n  cellSelected: [],\n  cellSelectedPrevious: \"\",\n  topGeneCellList: [],\n  topGeneCellListPrevious: [],\n  geneSearchOption: \"default\",\n  geneSelected: \"\",\n  optionSelected: \"default\",\n  cellInGeneSearch: \"\",\n  geneSearchFromSearchView: \"\",\n  geneSearch: \"\",\n  search: \"\"\n};\n\nconst mutations = {\n  ADD_TO_CELL_DETAILS(state, payload) {\n    state.cellDetails.push(payload);\n  },\n  CHANGE_CELL_DETAILS(state, payload) {\n    state.cellDetails = payload;\n  },\n  ADD_TO_CELL_SELECTED(state, payload) {\n    state.cellSelected.push(payload);\n  },\n  CHANGE_CELL_SELECTED(state, payload) {\n    state.cellSelected = payload;\n  },\n  POP_FROM_CELL_SELECTED(state) {\n    state.cellSelected.pop();\n  },\n  ADD_TO_TOP_GENE_CELL_LIST(state, payload) {\n    state.topGeneCellList.push(payload);\n  },\n  CHANGE_TOP_GENE_CELL_LIST(state, payload) {\n    state.topGeneCellList = payload;\n  },\n  CHANGE_TOP_GENE_CELL_LIST_PREVIOUS(state, payload) {\n    state.topGeneCellListPrevious = payload;\n  },\n  CHANGE_CELL_SELECTED_PREVIOUS(state, payload) {\n    state.cellSelectedPrevious = payload;\n  },\n  CHANGE_GENE_SEARCH_OPTION(state, payload) {\n    state.geneSearchOption = payload;\n  },\n  CHANGE_GENE_SELECTED(state, payload) {\n    state.geneSelected = payload;\n  },\n  CHANGE_CELL_IN_GENE_SEARCH(state, payload) {\n    state.cellInGeneSearch = payload;\n  },\n  CHANGE_GENE_SEARCH(state, payload) {\n    state.geneSearch = payload;\n  },\n  CHANGE_GENE_SEARCH_FROM_SEARCH_VIEW(state, payload) {\n    state.geneSearchFromSearchView = payload;\n  },\n  CHANGE_SEARCH(state, payload) {\n    state.search = payload;\n  },\n  CHANGE_OPTION(state, payload) {\n    state.optionSelected = payload;\n  }\n};\n\nconst actions = {\n  addToCellDetails(context, cellDetails) {\n    context.commit(\"ADD_TO_CELL_DETAILS\", cellDetails);\n  },\n  changeCellDetails(context, cellDetails) {\n    context.commit(\"CHANGE_CELL_DETAILS\", cellDetails);\n  },\n  addToCellSelected(context, cellSelected) {\n    context.commit(\"ADD_TO_CELL_SELECTED\", cellSelected);\n  },\n  changeCellSelected(context, cellSelected) {\n    context.commit(\"CHANGE_CELL_SELECTED\", cellSelected);\n  },\n  popFromCellSelected(context) {\n    context.commit(\"POP_FROM_CELL_SELECTED\");\n  },\n  addToTopGeneCellList(context, topGeneCellList) {\n    context.commit(\"ADD_TO_TOP_GENE_CELL_LIST\", topGeneCellList);\n  },\n  changeTopGeneCellList(context, topGeneCellList) {\n    context.commit(\"CHANGE_TOP_GENE_CELL_LIST\", topGeneCellList);\n  },\n  changeTopGeneCellListPrevious(context, topGeneCellListPrevious) {\n    context.commit(\"CHANGE_TOP_GENE_CELL_LIST_PREVIOUS\", topGeneCellListPrevious);\n  },\n  changeCellSelectedPrevious(context, cellSelectedPrevious) {\n    context.commit(\"CHANGE_CELL_SELECTED_PREVIOUS\", cellSelectedPrevious);\n  },\n  changeGeneSearchOption(context, geneSearchOption) {\n    context.commit(\"CHANGE_GENE_SEARCH_OPTION\", geneSearchOption);\n  },\n  changeGeneSelected(context, geneSelected) {\n    context.commit(\"CHANGE_GENE_SELECTED\", geneSelected);\n  },\n  changeCellInGeneSearch(context, searchContent) {\n    context.commit(\"CHANGE_CELL_IN_GENE_SEARCH\", searchContent);\n  },\n  changeGeneSearch(context, searchContent) {\n    context.commit(\"CHANGE_GENE_SEARCH\", searchContent);\n  },\n  changeGeneSearchFromSearchView(context, searchContent) {\n    context.commit(\"CHANGE_GENE_SEARCH_FROM_SEARCH_VIEW\", searchContent);\n  },\n  changeSearch(context, searchContent) {\n    context.commit(\"CHANGE_SEARCH\", searchContent);\n  },\n  changeOption(context, optionSelected) {\n    context.commit(\"CHANGE_OPTION\", optionSelected);\n  }\n};\n\nconst getters = {\n  getCellDetails(state) {\n    return state.cellDetails;\n  },\n  getCellSelected(state) {\n    return state.cellSelected;\n  },\n  getTopGeneCellList(state) {\n    return state.topGeneCellList;\n  },\n  getTopGeneCellListPrevious(state) {\n    return state.topGeneCellListPrevious;\n  },\n  getCellSelectedPrevious(state) {\n    return state.cellSelectedPrevious;\n  },\n  getGeneSearchOption(state) {\n    return state.geneSearchOption;\n  },\n  getGeneSelected(state) {\n    return state.geneSelected;\n  },\n  getCellInGeneSearch(state) {\n    return state.cellInGeneSearch;\n  },\n  getGeneSearch(state) {\n    return state.geneSearch;\n  },\n  getGeneSearchFromSearchView(state) {\n    return state.geneSearchFromSearchView;\n  },\n  getSearch(state) {\n    return state.search;\n  },\n  getOption(state) {\n    return state.optionSelected;\n  }\n};\n\nexport default new Vuex.Store({\n  state,\n  mutations,\n  actions,\n  getters\n});\n","import \"material-design-icons-iconfont/dist/material-design-icons.css\";\nimport 'vuetify/dist/vuetify.min.css';\n\nimport Vue from 'vue';\nimport App from './App.vue';\nimport VueLodash from 'vue-lodash';\nimport Vuetify from 'vuetify';\nimport store from './store.js';\n\nVue.config.productionTip = false;\n\nconst options = { name: 'lodash' }; // customize the way you want to call it\nVue.use(VueLodash, options);\n\nconst vuetifyOptions = {\n  iconfont: 'md',\n  theme: {\n    dark: true,\n    themes: {\n      dark: {\n        primary: '#42b983',\n        secondary: '#b0bec5',\n        accent: '#8c9eff',\n        error: '#b71c1c'\n      },\n      light: {\n        primary: '#42b983',\n        secondary: '#b0bec5',\n        accent: '#8c9eff',\n        error: '#b71c1c'\n      }\n    }\n  }\n};\n\nVue.use(Vuetify);\n\nnew Vue({\n  render: h => h(App),\n  store,\n  vuetify: new Vuetify(vuetifyOptions)\n}).$mount('#app');\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GeneDetails.vue?vue&type=style&index=0&id=107889c9&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GeneDetails.vue?vue&type=style&index=0&id=107889c9&scoped=true&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CellDetails.vue?vue&type=style&index=0&id=31132917&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CellDetails.vue?vue&type=style&index=0&id=31132917&scoped=true&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SearchView.vue?vue&type=style&index=0&id=766aa67e&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SearchView.vue?vue&type=style&index=0&id=766aa67e&scoped=true&lang=css&\""],"sourceRoot":""}