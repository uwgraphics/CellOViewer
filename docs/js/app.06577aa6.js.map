{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/SearchView.vue?afa2","webpack:///./src/App.vue?7e02","webpack:///./src/components/GeneDetails.vue?add6","webpack:///./src/App.vue?2bed","webpack:///./src/components/CellDetails.vue?d560","webpack:///./src/config.js","webpack:///src/components/CellDetails.vue","webpack:///./src/components/CellDetails.vue?29d7","webpack:///./src/components/CellDetails.vue?a457","webpack:///./src/components/TheHeader.vue?cc6f","webpack:///src/components/TheHeader.vue","webpack:///./src/components/TheHeader.vue?0263","webpack:///./src/components/TheHeader.vue","webpack:///./src/components/GeneDetails.vue?c333","webpack:///src/components/GeneDetails.vue","webpack:///./src/components/GeneDetails.vue?3747","webpack:///./src/components/GeneDetails.vue?334f","webpack:///./src/components/CellGraph.vue?6086","webpack:///./src/util.js","webpack:///./src/apis/utils.js","webpack:///./src/apis/graph.js","webpack:///./src/apis/draw.js","webpack:///./src/apis/structure.js","webpack:///./src/apis/tangler.js","webpack:///./src/apis/layout.js","webpack:///src/components/CellGraph.vue","webpack:///./src/components/CellGraph.vue?92f0","webpack:///./src/components/CellGraph.vue","webpack:///./src/components/SearchView.vue?48d5","webpack:///src/components/SearchView.vue","webpack:///./src/components/SearchView.vue?50ea","webpack:///./src/components/SearchView.vue?0461","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue?bff9","webpack:///./src/store.js","webpack:///./src/main.js","webpack:///./src/components/CellDetails.vue?f8b2"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SearchView_vue_vue_type_style_index_0_id_5eb40c2a_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SearchView_vue_vue_type_style_index_0_id_5eb40c2a_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_GeneDetails_vue_vue_type_style_index_0_id_e4c467ba_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_GeneDetails_vue_vue_type_style_index_0_id_e4c467ba_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","Appvue_type_template_id_1f4b877e_render","_vm","this","_h","$createElement","_c","_self","attrs","id","style","background","$vuetify","theme","themes","dark","setTheme","fluid","staticClass","color","label","selectedTheme","model","callback","$$v","goDark","expression","msg","bg","grid-list-md","row","wrap","md5","cellData","loadedData","md7","staticRenderFns","CellDetailsvue_type_template_id_372a0b49_scoped_true_render","align-center","md12","$store","getters","getCurrentThemeMode","max-height","_v","medium","justify-right","on","click","removeCellSelected","sm12","md9","append-icon","single-line","hide-details","hide-no-data","search","md3","items","sortOptions","input","sortBasedOnOption","option","cellSelectedExist","geneDataExist","cellSelected","md6","sm6","_s","_l","filteredData","index","class","geneNameOnHover","setOverlapGeneBackgroundColor","input-value","dense","$event","setGeneItem","mouseover","setGeneNameOnHover","mouseleave","clearGeneNameOnHover","sm5","loadedGeneIdToNameDict","sm7","top","scopedSlots","_u","fn","ref","_g","setGeneIndexBarChartRatio","setGeneIndexBarChartColor","height","rounded","striped","reactive","maxGeneMagnitude","toFixed","fixedGeneDigits","_e","CellDetailsvue_type_template_id_372a0b49_scoped_true_staticRenderFns","FIRST_ROW_CARD_MAX_HEIGHT","MAX_SELECTED_CELL_TYPE_NUMBER","CELL_TYPE_DEFAULT_COLOR","CELL_TYPE_CHANGED_COLOR","NODE_RADIUS_DEFAULT","NODE_RADIUS_POPPED","COLOR_RAMP","CellDetailsvue_type_script_lang_js_","props","mounted","fetchData","cardHighlight","loadedGeneData","geneCellCopy1","geneCellCopy2","topGenesInColumnOne","topGenesInColumnTwo","methods","getCellDetails","globalThis","lodash_default","a","sortBy","geneData","console","log","gene","_fetchData","asyncToGenerator","regeneratorRuntime","mark","_callee","_context","prev","next","d3","sent","stop","arguments","getDefaultCells","cellArr","getCellSelected","geneCellCopy","columnIndex","indexGeneValue","Math","abs","cellName","filteredDataSecondRow","_i","_Object$entries","entries","entry","geneValueObject","filteredDataFirstRow","_i2","_Object$entries2","_entry","_geneValueObject","geneIndexInFirstRow","sortCells","concat","sort","b","dispatch","cellTypeName","undefined","computed","currentCells","getOption","dynamicData","getGeneSearch","resultArr","cellTypes","cell1FilteredArray","cell2FilteredArray","forEach","element","lowerCaseElement","toLowerCase","includes","set","onHover","watch","geneDataColumnOne","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","done","_geneData","Number","err","return","geneDataColumnTwo","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","components_CellDetailsvue_type_script_lang_js_","component","componentNormalizer","CellDetails","TheHeadervue_type_template_id_6c560743_scoped_true_render","center","TheHeadervue_type_template_id_6c560743_scoped_true_staticRenderFns","TheHeadervue_type_script_lang_js_","String","components_TheHeadervue_type_script_lang_js_","TheHeader_component","TheHeader","GeneDetailsvue_type_template_id_e4c467ba_scoped_true_render","removeGeneDetails","geneNotEmpty","geneSelectedPresentedName","geneSelectedDescription","listHeight","setCellSelected","offset-md1","GeneDetailsvue_type_template_id_e4c467ba_scoped_true_staticRenderFns","GeneDetailsvue_type_script_lang_js_","cellTypeNames","filteredList","loadedDictData","loadedGeneIdToDescriptionDict","filterBySearchList","list","geneSelected","navigateToGenePage","open","returnToDefaultList","_Object$entries$_i","slicedToArray","geneArr","geneValue","curList","pop","topGeneDataExist","topGenes","geneValues","filteredGeneCellList","getGeneSearchOption","getGeneSelected","getCellInGeneSearch","_Object$entries2$_i","components_GeneDetailsvue_type_script_lang_js_","GeneDetails_component","GeneDetails","CellGraphvue_type_template_id_ba93787c_scoped_true_render","maxCardHeight","cellType1","cellType2","CellGraphvue_type_template_id_ba93787c_scoped_true_staticRenderFns","FORMAT_TO_ID","split","join","replace","GENERATE_LIST_COPY","originalList","_","cloneDeep","average","lst","sum","reduce","cur","avg","listOfLists","len","array","Array","simpleSorter","graph","hlevel","pass","levels","getLevels","cmp","primaryParent","ai","levelIdx","bi","parents","ap","map","bp","children","ac","bc","dalevel","idx","level","li","nodes","primaryChildren","Vertex","params","classCallCheck","width","istree","phantom","depth","longest","ancestors","Set","descendentAncestors","levelrank","x","y","grandkidIndex","twidth","Link","source","target","Graph","links","constraints","groups","analysis","createClass","filter","nodefunc","nodupes","results","queue","roots","maxLongest","max","toConsumableArray","node","orderedNodes","child","pCount","npars","root","expand","tree","nchildren","nnode","strifyNodes","field","v","phantomGraph","longLinks","link","oldLinks","indexOf","analyzeGraph","_loop","_loop2","newLong","isTree","breadthFirst","ancestor","add","drawGraph","paths","selector","vueThis","nodeRadius","bvert","bezierVert","svg","append","attr","transform","cseg","x1","y1","x2","y2","bv","pathId","util","nodeId","handleMouseOver","d3plus","require","Tooltip","thead","position","render","handleMouseOut","remove","handleMouseClick","selectedCellName","nodeClass","nodeColor","nodeName","nodeStroke","selectAll","enter","pstr","drawPhantoms","text","jsonToGraph","keys","sourceName","targetName","maxChildren","parent","parentKids","treeLayout","topmargin","levelSep","vertexRadius","phantomRadius","spacer","space","minwid","left","ni","goalX","neighbor","maxX","min","CellGraphvue_type_script_lang_js_","keyValueDict","listLocalCopy","listSize","loaded","pathsDict","linkArrayEdgeCases","edgeCaseCheck","showGraph","$refs","topGeneCellList","getTopGeneCellList","getSearch","_this","util_GENERATE_LIST_COPY","item","toString","svgClear","select","transition","svgHighlight","dict","cellTypesThatFitCriteria","cellType","cellValues","geneExist","geneName","svgFade","svgEdgeCase1","svgEdgeCase2","svgEdgeCase3","each","linkArray","has","components_CellGraphvue_type_script_lang_js_","CellGraph_component","CellGraph","SearchViewvue_type_template_id_5eb40c2a_scoped_true_render","fixed-tabs","background-color","keyValuePair","geneSearch","size","remain","three-line","SearchViewvue_type_template_id_5eb40c2a_scoped_true_staticRenderFns","SearchViewvue_type_script_lang_js_","cardHeight","getCardHeight","detailItem","generateListCopy","cell","searchResult","caseInsesitiveCell0","caseInsesitiveCellList","_cell","filteredGeneData","_this2","getGeneSearchFromSearchView","components","virtual-list","dist_default","components_SearchViewvue_type_script_lang_js_","SearchView_component","SearchView","Appvue_type_script_lang_js_","Header","src_Appvue_type_script_lang_js_","App_component","App","Vue","use","Vuex","state","cellDetails","cellSelectedPrevious","currentThemeMode","topGeneCellListPrevious","geneSearchOption","optionSelected","cellInGeneSearch","geneSearchFromSearchView","mutations","ADD_TO_CELL_DETAILS","payload","CHANGE_CELL_DETAILS","ADD_TO_CELL_SELECTED","CHANGE_CELL_SELECTED","POP_FROM_CELL_SELECTED","CHANGE_CURRENT_THEME_MODE","ADD_TO_TOP_GENE_CELL_LIST","CHANGE_TOP_GENE_CELL_LIST","CHANGE_TOP_GENE_CELL_LIST_PREVIOUS","CHANGE_CELL_SELECTED_PREVIOUS","CHANGE_GENE_SEARCH_OPTION","CHANGE_GENE_SELECTED","CHANGE_CELL_IN_GENE_SEARCH","CHANGE_GENE_SEARCH","CHANGE_GENE_SEARCH_FROM_SEARCH_VIEW","CHANGE_SEARCH","CHANGE_OPTION","actions","addToCellDetails","context","commit","changeCellDetails","addToCellSelected","changeCellSelected","popFromCellSelected","changeCurrentThemeMode","addToTopGeneCellList","changeTopGeneCellList","changeTopGeneCellListPrevious","changeCellSelectedPrevious","changeGeneSearchOption","changeGeneSelected","changeCellInGeneSearch","searchContent","changeGeneSearch","changeGeneSearchFromSearchView","changeSearch","changeOption","getTopGeneCellListPrevious","getCellSelectedPrevious","store","Store","config","productionTip","options","VueLodash","vuetifyOptions","iconfont","primary","secondary","accent","error","light","Vuetify","h","vuetify","$mount","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_CellDetails_vue_vue_type_style_index_0_id_372a0b49_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_CellDetails_vue_vue_type_style_index_0_id_372a0b49_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/app.06577aa6.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SearchView.vue?vue&type=style&index=0&id=5eb40c2a&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SearchView.vue?vue&type=style&index=0&id=5eb40c2a&scoped=true&lang=css&\"","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GeneDetails.vue?vue&type=style&index=0&id=e4c467ba&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GeneDetails.vue?vue&type=style&index=0&id=e4c467ba&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('v-app',{style:({background: _vm.$vuetify.theme.themes['dark'].background}),attrs:{\"dark\":_vm.setTheme}},[_c('v-container',{attrs:{\"fluid\":\"\"}},[_c('v-switch',{staticClass:\"switch\",attrs:{\"color\":\"primary\",\"label\":_vm.selectedTheme},model:{value:(_vm.goDark),callback:function ($$v) {_vm.goDark=$$v},expression:\"goDark\"}}),_c('Header',{attrs:{\"msg\":\"Cell Network Viewer\"}})],1),_c('v-container',{attrs:{\"bg\":\"\",\"grid-list-md\":\"\",\"fluid\":\"\"}},[_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"md5\":\"\"}},[_c('SearchView',{attrs:{\"cellData\":this.loadedData}})],1),_c('v-flex',{attrs:{\"md7\":\"\"}},[_c('Graph',{attrs:{\"cellData\":this.loadedData}})],1)],1),_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"md5\":\"\"}},[_c('GeneDetails')],1),_c('v-flex',{attrs:{\"md7\":\"\"}},[_c('CellDetails')],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\",\"align-center\":\"\"}},[_c('v-flex',{attrs:{\"md12\":\"\"}},[_c('v-card',{style:({\n        background:\n          _vm.$vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n            .background\n      }),attrs:{\"max-height\":\"1300\"}},[_c('v-card-title',{staticClass:\"justify-center\"},[_c('h4',{staticClass:\"view-title\"},[_vm._v(\"Cell Details View\")]),_c('v-spacer'),_c('v-btn',{attrs:{\"medium\":\"\",\"color\":\"red\",\"justify-right\":\"\",\"dark\":\"\"},on:{\"click\":_vm.removeCellSelected}},[_c('v-icon',{attrs:{\"dark\":\"\"}},[_vm._v(\"remove_circle\")])],1)],1),_c('v-card-text',[_c('v-layout',{attrs:{\"row\":\"\"}},[_c('v-flex',{attrs:{\"md12\":\"\",\"sm12\":\"\"}},[_c('v-layout',[_c('v-flex',{attrs:{\"md9\":\"\",\"sm12\":\"\"}},[_c('v-text-field',{attrs:{\"append-icon\":\"search\",\"label\":\"search\",\"single-line\":\"\",\"hide-details\":\"\",\"hide-no-data\":\"\"},model:{value:(_vm.search),callback:function ($$v) {_vm.search=$$v},expression:\"search\"}})],1),_c('v-spacer'),_c('v-flex',{attrs:{\"md3\":\"\",\"sm12\":\"\"}},[_c('v-select',{attrs:{\"items\":_vm.sortOptions,\"label\":\"sort\"},on:{\"input\":_vm.sortBasedOnOption},model:{value:(_vm.option),callback:function ($$v) {_vm.option=$$v},expression:\"option\"}})],1)],1),_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[(_vm.cellSelectedExist && _vm.geneDataExist(_vm.cellSelected[0]))?_c('v-flex',{attrs:{\"md6\":\"\",\"sm6\":\"\"}},[_c('h3',{staticClass:\"sub-title\"},[_vm._v(_vm._s(_vm.cellSelected[0]))]),_c('v-list',{staticClass:\"list\"},_vm._l((_vm.filteredData[0]),function(value,index){return _c('v-list-item',{key:index,class:[\n                      value[2] === _vm.geneNameOnHover ? 'highlight-theme' : ''\n                    ],attrs:{\"color\":_vm.setOverlapGeneBackgroundColor(index, value, 0),\"input-value\":\"true\",\"dense\":\"\"},on:{\"click\":function($event){return _vm.setGeneItem(value)},\"mouseover\":function($event){return _vm.setGeneNameOnHover(index, value)},\"mouseleave\":function($event){return _vm.clearGeneNameOnHover()}}},[_c('v-layout',[_c('v-flex',{attrs:{\"md5\":\"\",\"sm5\":\"\"}},[_c('span',{staticClass:\"index\"},[_vm._v(_vm._s(_vm.loadedGeneIdToNameDict[value[2]])+\":\")])]),_c('v-flex',{attrs:{\"md7\":\"\",\"sm7\":\"\"}},[_c('span',[_c('v-tooltip',{attrs:{\"top\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\n                    var on = ref.on;\nreturn [_c('v-progress-linear',_vm._g({key:index,attrs:{\"value\":_vm.setGeneIndexBarChartRatio(\n                                    (\"\" + index),\n                                    value,\n                                    0\n                                  ),\"color\":_vm.setGeneIndexBarChartColor(\n                                    (\"\" + index),\n                                    value,\n                                    0\n                                  ),\"height\":\"15\",\"rounded\":\"\",\"striped\":\"\",\"reactive\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\n                                  var value = ref.value;\nreturn [_vm._v(\"\\n                                  \"+_vm._s((\n                                      (value / 100) *\n                                      _vm.maxGeneMagnitude\n                                    ).toFixed(_vm.fixedGeneDigits))+\"\\n                                \")]}}],null,true)},on))]}}],null,true)},[_c('span',[_vm._v(_vm._s(value[1]))])])],1)])],1)],1)}),1)],1):_vm._e(),(\n                  _vm.cellSelected.length == 2 && _vm.geneDataExist(_vm.cellSelected[1])\n                )?_c('v-flex',{attrs:{\"md6\":\"\",\"sm6\":\"\"}},[_c('h3',{staticClass:\"sub-title\"},[_vm._v(_vm._s(_vm.cellSelected[1]))]),_c('v-list',{staticClass:\"list\"},_vm._l((_vm.filteredData[1]),function(value,index){return _c('v-list-item',{key:index,class:[\n                      value[2] === _vm.geneNameOnHover ? 'highlight-theme' : ''\n                    ],attrs:{\"color\":_vm.setOverlapGeneBackgroundColor(index, value, 1),\"input-value\":\"true\",\"dense\":\"\"},on:{\"click\":function($event){return _vm.setGeneItem(value)},\"mouseover\":function($event){return _vm.setGeneNameOnHover(index, value)},\"mouseleave\":function($event){return _vm.clearGeneNameOnHover()}}},[_c('v-layout',[_c('v-flex',{attrs:{\"md5\":\"\",\"sm12\":\"\"}},[_c('span',{staticClass:\"index\"},[_vm._v(_vm._s(_vm.loadedGeneIdToNameDict[value[2]])+\":\")])]),_c('v-flex',{attrs:{\"md7\":\"\",\"sm12\":\"\"}},[_c('span',[_c('v-tooltip',{attrs:{\"top\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\n                    var on = ref.on;\nreturn [_c('v-progress-linear',_vm._g({attrs:{\"value\":_vm.setGeneIndexBarChartRatio((\"\" + index), 1),\"color\":_vm.setGeneIndexBarChartColor((\"\" + index), 1),\"height\":\"15\",\"rounded\":\"\",\"striped\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\n                    var value = ref.value;\nreturn [_vm._v(\"\\n                                  \"+_vm._s((\n                                      (value / 100) *\n                                      _vm.maxGeneMagnitude\n                                    ).toFixed(_vm.fixedGeneDigits))+\"\\n                                \")]}}],null,true)},on))]}}],null,true)},[_c('span',[_vm._v(_vm._s(value[1]))])])],1)])],1)],1)}),1)],1):_vm._e()],1)],1)],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export const FIRST_ROW_CARD_MAX_HEIGHT = 600;\nexport const MAX_SELECTED_CELL_TYPE_NUMBER = 2;\nexport const CELL_TYPE_DEFAULT_COLOR = \"#faed27\";\nexport const CELL_TYPE_CHANGED_COLOR = \"#f33\";\nexport const NODE_RADIUS_DEFAULT = 5;\nexport const NODE_RADIUS_POPPED = 8;\nexport const COLOR_RAMP = [\n    \"#40004b\",\n    \"#762a83\",\n    \"#9970ab\",\n    \"#c2a5cf\",\n    \"#e7d4e8\",\n    \"#d9f0d3\",\n    \"#a6dba0\",\n    \"#5aae61\",\n    \"#1b7837\",\n    \"#00441b\",\n]","<template>\n  <v-layout row wrap align-center>\n    <v-flex md12>\n      <v-card\n        max-height=\"1300\"\n        :style=\"{\n          background:\n            $vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n              .background\n        }\"\n      >\n        <v-card-title class=\"justify-center\">\n          <h4 class=\"view-title\">Cell Details View</h4>\n          <v-spacer></v-spacer>\n          <v-btn\n            medium\n            color=\"red\"\n            justify-right\n            dark\n            @click=\"removeCellSelected\"\n          >\n            <v-icon dark>remove_circle</v-icon>\n          </v-btn>\n        </v-card-title>\n\n        <v-card-text>\n          <v-layout row>\n            <v-flex md12 sm12>\n              <v-layout>\n                <!-- Search Box -->\n                <v-flex md9 sm12>\n                  <v-text-field\n                    v-model=\"search\"\n                    append-icon=\"search\"\n                    label=\"search\"\n                    single-line\n                    hide-details\n                    hide-no-data\n                  ></v-text-field>\n                </v-flex>\n\n                <v-spacer />\n\n                <!-- Sort Box -->\n                <v-flex md3 sm12>\n                  <v-select\n                    v-model=\"option\"\n                    :items=\"sortOptions\"\n                    @input=\"sortBasedOnOption\"\n                    label=\"sort\"\n                  ></v-select>\n                </v-flex>\n              </v-layout>\n\n              <v-layout row wrap>\n                <v-flex\n                  md6\n                  sm6\n                  v-if=\"cellSelectedExist && geneDataExist(cellSelected[0])\"\n                >\n                  <h3 class=\"sub-title\">{{ cellSelected[0] }}</h3>\n                  <v-list class=\"list\">\n                    <v-list-item\n                      :color=\"setOverlapGeneBackgroundColor(index, value, 0)\"\n                      input-value=\"true\"\n                      v-for=\"(value, index) in filteredData[0]\"\n                      :key=\"index\"\n                      dense\n                      @click=\"setGeneItem(value)\"\n                      @mouseover=\"setGeneNameOnHover(index, value)\"\n                      @mouseleave=\"clearGeneNameOnHover()\"\n                      :class=\"[\n                        value[2] === geneNameOnHover ? 'highlight-theme' : ''\n                      ]\"\n                    >\n                      <v-layout>\n                        <v-flex md5 sm5>\n                          <span class=\"index\"\n                            >{{ loadedGeneIdToNameDict[value[2]] }}:</span\n                          >\n                        </v-flex>\n                        <v-flex md7 sm7>\n                          <span>\n                            <v-tooltip top>\n                              <template v-slot:activator=\"{ on }\">\n                                <v-progress-linear\n                                  :value=\"\n                                    setGeneIndexBarChartRatio(\n                                      `${index}`,\n                                      value,\n                                      0\n                                    )\n                                  \"\n                                  :color=\"\n                                    setGeneIndexBarChartColor(\n                                      `${index}`,\n                                      value,\n                                      0\n                                    )\n                                  \"\n                                  :key=\"index\"\n                                  height=\"15\"\n                                  v-on=\"on\"\n                                  rounded\n                                  striped\n                                  reactive\n                                >\n                                  <template v-slot=\"{ value }\">\n                                    {{\n                                      (\n                                        (value / 100) *\n                                        maxGeneMagnitude\n                                      ).toFixed(fixedGeneDigits)\n                                    }}\n                                  </template></v-progress-linear\n                                >\n                              </template>\n                              <span>{{ value[1] }}</span>\n                            </v-tooltip>\n                          </span>\n                        </v-flex>\n                      </v-layout>\n                    </v-list-item>\n                  </v-list>\n                </v-flex>\n                <v-flex\n                  md6\n                  sm6\n                  v-if=\"\n                    cellSelected.length == 2 && geneDataExist(cellSelected[1])\n                  \"\n                >\n                  <h3 class=\"sub-title\">{{ cellSelected[1] }}</h3>\n                  <v-list class=\"list\">\n                    <v-list-item\n                      :color=\"setOverlapGeneBackgroundColor(index, value, 1)\"\n                      input-value=\"true\"\n                      v-for=\"(value, index) in filteredData[1]\"\n                      :key=\"index\"\n                      dense\n                      @click=\"setGeneItem(value)\"\n                      @mouseover=\"setGeneNameOnHover(index, value)\"\n                      @mouseleave=\"clearGeneNameOnHover()\"\n                      :class=\"[\n                        value[2] === geneNameOnHover ? 'highlight-theme' : ''\n                      ]\"\n                    >\n                      <v-layout>\n                        <v-flex md5 sm12>\n                          <span class=\"index\"\n                            >{{ loadedGeneIdToNameDict[value[2]] }}:</span\n                          >\n                        </v-flex>\n                        <v-flex md7 sm12>\n                          <span>\n                            <v-tooltip top>\n                              <template v-slot:activator=\"{ on }\">\n                                <v-progress-linear\n                                  :value=\"\n                                    setGeneIndexBarChartRatio(`${index}`, 1)\n                                  \"\n                                  :color=\"\n                                    setGeneIndexBarChartColor(`${index}`, 1)\n                                  \"\n                                  height=\"15\"\n                                  v-on=\"on\"\n                                  rounded\n                                  striped\n                                >\n                                  <template v-slot=\"{ value }\">\n                                    {{\n                                      (\n                                        (value / 100) *\n                                        maxGeneMagnitude\n                                      ).toFixed(fixedGeneDigits)\n                                    }}\n                                  </template>\n                                </v-progress-linear>\n                              </template>\n                              <span>{{ value[1] }}</span>\n                            </v-tooltip>\n                          </span>\n                        </v-flex>\n                      </v-layout>\n                    </v-list-item>\n                  </v-list>\n                </v-flex>\n              </v-layout>\n            </v-flex>\n          </v-layout>\n        </v-card-text>\n      </v-card>\n    </v-flex>\n  </v-layout>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\nimport { COLOR_RAMP } from \"../config\";\nimport _ from \"lodash\";\n\nexport default {\n  name: \"cell-details\",\n  props: [],\n  mounted() {\n    this.fetchData();\n  },\n  data() {\n    return {\n      cardHighlight: false,\n      fixedGeneDigits: 5,\n      maxGeneMagnitude: 0.14907,\n      loadedGeneData: {},\n      loadedGeneIdToNameDict: {},\n      sortOptions: [\"default\", \"magnitude\", \"coordinated\"],\n      geneNameOnHover: \"\",\n      geneCellCopy1: [],\n      geneCellCopy2: [],\n      topGenesInColumnOne: [],\n      topGenesInColumnTwo: []\n    };\n  },\n  methods: {\n    sortBasedOnOption(option) {\n      if (this.$store.getters.getCellDetails.length == 0) {\n        return;\n      }\n\n      let globalThis = this;\n\n      switch (option) {\n        case \"magnitude\":\n          globalThis.filteredData[0] = _.sortBy(\n            globalThis.filteredData[0],\n            [\n              function(geneData) {\n                console.log(geneData[1]);\n                return gene[1];\n              }\n            ],\n            [\"asc\"]\n          );\n          if (filteredData.length > 1) {\n            globalThis.filteredData[1] = _.sortBy(\n              globalThis.filteredData[1],\n              [\n                function(geneData) {\n                  return gene[1];\n                }\n              ],\n              [\"asc\"]\n            );\n          }\n          return globalThis.filteredData;\n        case \"coordinated\":\n          // To be filled\n      }\n    },\n\n    async fetchData() {\n      this.loadedGeneData = await d3.json(\"./top_abs_10_dict.json\");\n      this.loadedGeneIdToNameDict = await d3.json(\"./gene_id_to_name.json\");\n    },\n\n    getDefaultCells() {\n      let cellArr = this.$store.getters.getCellSelected;\n      let geneCellCopy = [];\n      geneCellCopy.push(this.loadedGeneData[cellArr[0]]);\n      if (cellArr.length > 1) {\n        geneCellCopy.push(this.loadedGeneData[cellArr[1]]);\n      }\n\n      return geneCellCopy;\n    },\n\n    /**\n     * Get gene color by column and gene index, if negative display pink\n     */\n    setGeneIndexBarChartColor(index, columnIndex) {\n      let globalThis = this;\n      let indexGeneValue = 0;\n      if (columnIndex == 0) {\n        indexGeneValue = globalThis.topGenesInColumnOne[index];\n      } else if (columnIndex == 1) {\n        indexGeneValue = globalThis.topGenesInColumnTwo[index];\n      }\n\n      if (indexGeneValue >= 0) {\n        return \"primary\";\n      } else {\n        return \"pink\";\n      }\n    },\n\n    setGeneIndexBarChartRatio(index, columnIndex) {\n      let globalThis = this;\n      if (columnIndex == 0) {\n        return Math.abs(\n          (\n            (globalThis.topGenesInColumnOne[index] /\n              globalThis.maxGeneMagnitude) *\n            100\n          ).toFixed(globalThis.fixedGeneDigits)\n        );\n      } else {\n        return Math.abs(\n          (\n            (globalThis.topGenesInColumnTwo[index] /\n              globalThis.maxGeneMagnitude) *\n            100\n          ).toFixed(globalThis.fixedGeneDigits)\n        );\n      }\n    },\n\n    setOverlapGeneBackgroundColor(index, value, columnIndex) {\n      let globalThis = this;\n      let cellName = value[2];\n\n      if (columnIndex == 0) {\n        let filteredDataSecondRow = globalThis.filteredData[1];\n        if (globalThis.filteredData.length > 1) {\n          for (const entry of Object.entries(filteredDataSecondRow)) {\n            let geneValueObject = entry[1];\n            if (geneValueObject[2] === cellName) {\n              return COLOR_RAMP[index];\n            }\n          }\n        }\n      } else if (columnIndex == 1) {\n        let filteredDataFirstRow = globalThis.filteredData[0];\n        for (const entry of Object.entries(filteredDataFirstRow)) {\n          let geneValueObject = entry[1];\n          if (geneValueObject[2] === cellName) {\n            let geneIndexInFirstRow = entry[0];\n            return COLOR_RAMP[geneIndexInFirstRow];\n          }\n        }\n      }\n\n      return \"#303030\";\n    },\n\n    sortCells() {\n      let cellArr = this.$store.getters.getCellSelected;\n      let geneCellCopy = [];\n      geneCellCopy.push(\n        this.loadedGeneData[cellArr[0]]\n          .concat()\n          .sort((a, b) => (a[1] < b[1] ? 1 : -1))\n      );\n      if (cellArr.length > 1) {\n        geneCellCopy.push(\n          this.loadedGeneData[cellArr[1]]\n            .concat()\n            .sort((a, b) => (a[1] < b[1] ? 1 : -1))\n        );\n      }\n      return geneCellCopy;\n    },\n\n    removeCellSelected() {\n      this.$store.dispatch(\"popFromCellSelected\");\n    },\n\n    setGeneItem(value) {\n      this.$store.dispatch(\"changeGeneSelected\", value[2]);\n    },\n\n    setGeneNameOnHover(index, value) {\n      this.geneNameOnHover = value[2];\n    },\n\n    cellSelectedExist() {\n      return this.$store.getters.getCellSelected.length !== 0;\n    },\n\n    clearGeneNameOnHover() {\n      this.geneNameOnHover = \"\";\n    },\n\n    geneDataExist(cellTypeName) {\n      if (this.loadedGeneData[cellTypeName] === undefined) {\n        return false;\n      }\n      return true;\n    }\n  },\n  computed: {\n    cellSelected: {\n      get() {\n        return this.$store.getters.getCellSelected;\n      }\n    },\n\n    currentCells() {\n      return this.$store.getters.getOption === \"default\"\n        ? this.getDefaultCells()\n        : this.sortCells();\n    },\n\n    dynamicData() {\n      if (this.geneCellCopy1.length == 0) {\n        return;\n      } else {\n        return this.$store.getters.getCellDetails;\n      }\n    },\n\n    filteredData() {\n      let globalThis = this;\n      if (this.$store.getters.getGeneSearch === \"\") {\n        return this.currentCells;\n      } else {\n        let resultArr = [];\n        let cellTypes = this.currentCells;\n        let cell1FilteredArray = [];\n        let cell2FilteredArray = [];\n        if (cellTypes.length > 1) {\n          cellTypes[1].forEach(element => {\n            // Map the gene id to name before converting to lower case for search matching\n            let lowerCaseElement = globalThis.loadedGeneIdToNameDict[\n              element[2]\n            ].toLowerCase();\n\n            if (lowerCaseElement.includes(globalThis.search.toLowerCase())) {\n              cell2FilteredArray.push(element);\n            }\n          });\n        }\n        if (cellTypes.length > 0) {\n          cellTypes[0].forEach(element => {\n            // Map the gene id to name before converting to lower case for search matching\n            let lowerCaseElement = globalThis.loadedGeneIdToNameDict[\n              element[2]\n            ].toLowerCase();\n            if (lowerCaseElement.includes(globalThis.search.toLowerCase())) {\n              cell1FilteredArray.push(element);\n            }\n          });\n        }\n        resultArr.push(cell1FilteredArray);\n        resultArr.push(cell2FilteredArray);\n\n        return resultArr;\n      }\n    },\n\n    option: {\n      get() {\n        return this.$store.getters.getOption;\n      },\n      set(option) {\n        this.$store.dispatch(\"changeOption\", option);\n      }\n    },\n\n    search: {\n      get() {\n        return this.$store.getters.getGeneSearch;\n      },\n      set(input) {\n        this.$store.dispatch(\"changeGeneSearch\", input);\n      }\n    },\n\n    selectedTheme() {\n      return this.onHover === true ? \"highlight-theme\" : \"\";\n    }\n  },\n  watch: {\n    cellSelected() {\n      let cellArr = this.$store.getters.getCellSelected;\n      this.$store.dispatch(\"changeCellDetails\", []);\n      this.topGenesInColumnOne = [];\n      this.topGenesInColumnTwo = [];\n\n      if (cellArr.length === 0) {\n        return;\n      }\n      this.geneCellCopy1 = this.loadedGeneData[cellArr[0]];\n      this.$store.dispatch(\"addToCellDetails\", this.geneCellCopy1);\n      let geneDataColumnOne = [];\n      for (const geneData of this.geneCellCopy1) {\n        geneDataColumnOne.push(Number(geneData[1]));\n      }\n\n      this.topGenesInColumnOne = geneDataColumnOne;\n\n      if (cellArr.length > 1) {\n        this.geneCellCopy2 = this.loadedGeneData[cellArr[1]];\n        this.$store.dispatch(\"addToCellDetails\", this.geneCellCopy2);\n        let geneDataColumnTwo = [];\n        for (const geneData of this.geneCellCopy2) {\n          geneDataColumnTwo.push(Number(geneData[1]));\n        }\n        this.topGenesInColumnTwo = geneDataColumnTwo;\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.message {\n  color: red;\n  text-align: left;\n}\n.geneName {\n  color: #c5050c;\n}\n.highlight-theme {\n  background: #34495e;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CellDetails.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CellDetails.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CellDetails.vue?vue&type=template&id=372a0b49&scoped=true&\"\nimport script from \"./CellDetails.vue?vue&type=script&lang=js&\"\nexport * from \"./CellDetails.vue?vue&type=script&lang=js&\"\nimport style0 from \"./CellDetails.vue?vue&type=style&index=0&id=372a0b49&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"372a0b49\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\",\"align-center\":\"\"}},[_c('v-flex',{attrs:{\"md12\":\"\",\"center\":\"\"}},[_c('h1',{staticClass:\"view-title\"},[_vm._v(\"🦠\"+_vm._s(_vm.msg)+\"🧬\")])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-layout row wrap align-center>\n    <v-flex md12 center>\n      <h1 class=\"view-title\">&#x1F9A0;{{ msg }}&#x1F9EC;</h1>\n    </v-flex>\n  </v-layout>\n</template>\n\n<script>\nexport default {\n  name: \"app-header\",\n  props: {\n    msg: String\n  }\n};\n</script>\n\n<style scoped>\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TheHeader.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TheHeader.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TheHeader.vue?vue&type=template&id=6c560743&scoped=true&\"\nimport script from \"./TheHeader.vue?vue&type=script&lang=js&\"\nexport * from \"./TheHeader.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6c560743\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\",\"align-center\":\"\"}},[_c('v-flex',{attrs:{\"md12\":\"\"}},[_c('v-card',{style:({\n        background:\n          _vm.$vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n            .background\n      }),attrs:{\"max-height\":\"595\"}},[_c('v-card-title',{staticClass:\"justify-center\"},[_c('h4',{staticClass:\"view-title\"},[_vm._v(\"Gene Details View\")]),_c('v-spacer'),_c('v-btn',{attrs:{\"medium\":\"\",\"color\":\"red\",\"justify-right\":\"\",\"dark\":\"\"},on:{\"click\":_vm.removeGeneDetails}},[_c('v-icon',{attrs:{\"dark\":\"\"}},[_vm._v(\"remove_circle\")])],1)],1),_c('v-card-text',[_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[(_vm.geneNotEmpty())?_c('v-flex',{attrs:{\"md9\":\"\",\"sm12\":\"\"}},[_c('v-text-field',{attrs:{\"append-icon\":\"search\",\"label\":\"search\",\"single-line\":\"\",\"hide-details\":\"\",\"hide-no-data\":\"\"},model:{value:(_vm.search),callback:function ($$v) {_vm.search=$$v},expression:\"search\"}})],1):_vm._e(),_c('v-spacer'),(_vm.geneNotEmpty())?_c('v-flex',{attrs:{\"md3\":\"\",\"sm12\":\"\"}},[_c('v-select',{attrs:{\"items\":_vm.sortOptions,\"label\":\"sort\"},on:{\"input\":_vm.sortBasedOnOption},model:{value:(_vm.option),callback:function ($$v) {_vm.option=$$v},expression:\"option\"}})],1):_vm._e()],1),_c('v-layout',[(_vm.geneNotEmpty())?_c('v-flex',[_c('h3',{staticClass:\"sub-title\"},[_vm._v(\"Gene: \"+_vm._s(_vm.geneSelectedPresentedName))]),_c('div',{staticClass:\"gene-description\"},[_vm._v(_vm._s(_vm.geneSelectedDescription))]),_c('v-list',{staticClass:\"list\",class:{ 'max-height': _vm.listHeight }},_vm._l((_vm.filteredGeneCellList),function(value,index){return _c('v-list-item',{key:index,on:{\"click\":function($event){return _vm.setCellSelected(value[0])}}},[_c('v-layout',[_c('v-flex',{staticClass:\"index\",attrs:{\"md3\":\"\",\"offset-md1\":\"\"}},[_vm._v(_vm._s(value[0])+\": \")]),_c('v-flex',{attrs:{\"md6\":\"\",\"offset-md1\":\"\"}},[_c('span',[_c('v-tooltip',{attrs:{\"top\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\n      var on = ref.on;\nreturn [_c('v-progress-linear',_vm._g({attrs:{\"value\":_vm.setGeneIndexBarChartRatio(value, 0),\"color\":_vm.setGeneIndexBarChartColor(value, 1),\"height\":\"15\",\"rounded\":\"\",\"striped\":\"\",\"reactive\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\n      var value = ref.value;\nreturn [_vm._v(\"\\n                              \"+_vm._s(((value / 100) * _vm.maxGeneMagnitude).toFixed(\n                                  _vm.fixedGeneDigits\n                                ))+\"\\n                            \")]}}],null,true)},on))]}}],null,true)},[_c('span',[_vm._v(_vm._s(value[1]))])])],1)])],1)],1)}),1)],1):_vm._e()],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-layout row wrap align-center>\n    <v-flex md12>\n      <v-card\n        max-height=\"595\"\n        :style=\"{\n          background:\n            $vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n              .background\n        }\"\n      >\n        <v-card-title class=\"justify-center\">\n          <h4 class=\"view-title\">Gene Details View</h4>\n          <v-spacer></v-spacer>\n          <v-btn\n            medium\n            color=\"red\"\n            justify-right\n            dark\n            @click=\"removeGeneDetails\"\n          >\n            <v-icon dark>remove_circle</v-icon>\n          </v-btn>\n        </v-card-title>\n        <v-card-text>\n          <v-layout row wrap>\n            <v-flex md9 sm12 v-if=\"geneNotEmpty()\">\n              <v-text-field\n                v-model=\"search\"\n                append-icon=\"search\"\n                label=\"search\"\n                single-line\n                hide-details\n                hide-no-data\n              ></v-text-field>\n            </v-flex>\n            <v-spacer />\n            <v-flex md3 sm12 v-if=\"geneNotEmpty()\">\n              <v-select\n                v-model=\"option\"\n                :items=\"sortOptions\"\n                @input=\"sortBasedOnOption\"\n                label=\"sort\"\n              ></v-select>\n            </v-flex>\n          </v-layout>\n          <v-layout>\n            <v-flex v-if=\"geneNotEmpty()\">\n              <h3 class=\"sub-title\">Gene: {{ geneSelectedPresentedName }}</h3>\n              <div class=\"gene-description\">{{ geneSelectedDescription }}</div>\n              <v-list :class=\"{ 'max-height': listHeight }\" class=\"list\">\n                <v-list-item\n                  v-for=\"(value, index) in filteredGeneCellList\"\n                  :key=\"index\"\n                  @click=\"setCellSelected(value[0])\"\n                >\n                  <v-layout>\n                    <v-flex md3 offset-md1 class=\"index\"\n                      >{{ value[0] }}:&nbsp;</v-flex\n                    >\n                    <v-flex md6 offset-md1>\n                      <span>\n                        <v-tooltip top>\n                          <template v-slot:activator=\"{ on }\">\n                            <v-progress-linear\n                              :value=\"setGeneIndexBarChartRatio(value, 0)\"\n                              :color=\"setGeneIndexBarChartColor(value, 1)\"\n                              height=\"15\"\n                              v-on=\"on\"\n                              rounded\n                              striped\n                              reactive\n                            >\n                              <template v-slot=\"{ value }\">\n                                {{\n                                  ((value / 100) * maxGeneMagnitude).toFixed(\n                                    fixedGeneDigits\n                                  )\n                                }}\n                              </template>\n                            </v-progress-linear>\n                          </template>\n                          <span>{{ value[1] }}</span>\n                        </v-tooltip>\n                      </span>\n                    </v-flex>\n                  </v-layout>\n                </v-list-item>\n              </v-list>\n            </v-flex>\n          </v-layout>\n        </v-card-text>\n      </v-card>\n    </v-flex>\n  </v-layout>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\n\nexport default {\n  name: \"gene-details\",\n  props: [],\n  mounted() {\n    // Fetch gene data once mounted\n    this.fetchData();\n  },\n  data() {\n    return {\n      cellTypeNames: [],\n      filteredList: [],\n      fixedGeneDigits: 5,\n      geneSelectedPresentedName: \"\",\n      geneSelectedDescription: \"\",\n      listHeight: \"400px\",\n      loadedDictData: {},\n      loadedGeneIdToNameDict: {},\n      loadedGeneIdToDescriptionDict: {},\n      maxGeneMagnitude: 0.14907,\n      sortOptions: [\"default\", \"strength\", \"magnitude\"]\n    };\n  },\n  methods: {\n    async fetchData() {\n      this.loadedDictData = await d3.json(\"./top_abs_10_dict.json\");\n      this.loadedGeneIdToNameDict = await d3.json(\"./gene_id_to_name.json\");\n      this.loadedGeneIdToDescriptionDict = await d3.json(\n        \"gene_id_to_description.json\"\n      );\n    },\n    filterBySearchList(list) {\n      let globalThis = this;\n      let filterBySearchList = [];\n      list.forEach(element => {\n        let lowerCaseElement = element[0].toLowerCase();\n        if (lowerCaseElement.includes(globalThis.search.toLowerCase())) {\n          filterBySearchList.push(element);\n        }\n      });\n      return filterBySearchList;\n    },\n    geneNotEmpty() {\n      return this.geneSelected !== \"\";\n    },\n    navigateToGenePage() {\n      window.open(\n        \"http://useast.ensembl.org/Homo_sapiens/Gene/Summary?g=\" +\n          this.geneSelected\n      );\n    },\n    removeGeneDetails() {\n      this.$store.dispatch(\"changeGeneSelected\", \"\");\n    },\n    returnToDefaultList() {\n      let list = [];\n      let globalThis = this;\n      for (const [key, value] of Object.entries(this.loadedDictData)) {\n        let geneArr = value;\n        for (let i = 0; i < geneArr.length; i++) {\n          if (geneArr[i][2] === globalThis.geneSelected) {\n            let cellName = key;\n            let geneValue = value[i][1].toFixed(this.fixedGeneDigits);\n            list.push([cellName, geneValue]);\n          }\n        }\n      }\n\n      return this.filterBySearchList(list);\n    },\n    setCellSelected(cellName) {\n      let curList = this.$store.getters.getCellSelected;\n      if (curList.length > 1) {\n        curList.pop();\n      }\n      curList.push(cellName);\n      this.$store.dispatch(\"changeCellSelected\", curList);\n    },\n    sortBasedOnOption(option) {\n      let globalThis = this;\n      switch (option) {\n        case \"default\":\n          return this.filterBySearchList(this.filteredList);\n        case \"strength\":\n          return this.filterBySearchList(\n            this.filteredList.sort((a, b) =>\n              Math.abs(a[1]) > Math.abs(b[1]) ? -1 : 1\n            )\n          );\n        case \"magnitude\":\n          return this.filterBySearchList(\n            this.filteredList.sort((a, b) => (a[1] > b[1] ? -1 : 1))\n          );\n      }\n    },\n    topGeneDataExist(topGenes, cellTypeName) {\n      return typeof topGenes[this.geneSelected] !== \"undefined\";\n    },\n\n    setGeneIndexBarChartRatio(geneValues, columnIndex) {\n      let globalThis = this;\n      let value = geneValues[1];\n      if (columnIndex == 0) {\n        return Math.abs(\n          ((value / globalThis.maxGeneMagnitude) * 100).toFixed(\n            globalThis.fixedGeneDigits\n          )\n        );\n      }\n    },\n\n    setGeneIndexBarChartColor(geneValues, columnIndex) {\n      let value = geneValues[1];\n      if (value >= 0) {\n        return \"primary\";\n      } else {\n        return \"pink\";\n      }\n    }\n  },\n  computed: {\n    filteredGeneCellList() {\n      return this.$store.getters.getGeneSearchOption === \"default\"\n        ? this.returnToDefaultList()\n        : this.sortBasedOnOption(this.$store.getters.getGeneSearchOption);\n    },\n    geneSelected: {\n      get() {\n        return this.$store.getters.getGeneSelected;\n      },\n      set(option) {\n        this.$store.dispatch(\"changeGeneSelected\", option);\n      }\n    },\n    option: {\n      get() {\n        return this.$store.getters.getGeneSearchOption;\n      },\n      set(option) {\n        this.$store.dispatch(\"changeGeneSearchOption\", option);\n      }\n    },\n    search: {\n      get() {\n        return this.$store.getters.getCellInGeneSearch;\n      },\n      set(input) {\n        this.$store.dispatch(\"changeCellInGeneSearch\", input);\n      }\n    }\n  },\n  watch: {\n    geneSelected() {\n      // Change sorting back to default\n      this.$store.dispatch(\"changeGeneSearchOption\", \"default\");\n      let globalThis = this;\n      // Clear both local list and store to receive updated values\n      globalThis.filteredList = [];\n      this.$store.dispatch(\"changeTopGeneCellList\", []);\n      this.geneSelectedPresentedName = this.loadedGeneIdToNameDict[\n        this.geneSelected\n      ];\n      this.geneSelectedDescription = this.loadedGeneIdToDescriptionDict[\n        this.geneSelected\n      ];\n\n      for (const [key, value] of Object.entries(this.loadedDictData)) {\n        let geneArr = value;\n        for (let i = 0; i < geneArr.length; i++) {\n          if (geneArr[i][2] === globalThis.geneSelected) {\n            let cellName = key;\n            let geneValue = value[i][1];\n            globalThis.filteredList.push([cellName, geneValue]);\n            globalThis.$store.dispatch(\"addToTopGeneCellList\", [\n              cellName,\n              geneValue\n            ]);\n          }\n        }\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\nv-card-title {\n  margin: 100px;\n}\n.list {\n  max-height: 355px;\n  overflow-y: auto;\n}\n.gene-web-link {\n  text-align: left;\n  margin-top: 10px;\n  text-decoration: underline;\n}\n.gene-description {\n  text-align: left;\n  font-weight: normal;\n  font-size: medium;\n  margin-top: 10px;\n  color: \"#fff\";\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GeneDetails.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GeneDetails.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GeneDetails.vue?vue&type=template&id=e4c467ba&scoped=true&\"\nimport script from \"./GeneDetails.vue?vue&type=script&lang=js&\"\nexport * from \"./GeneDetails.vue?vue&type=script&lang=js&\"\nimport style0 from \"./GeneDetails.vue?vue&type=style&index=0&id=e4c467ba&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"e4c467ba\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"md12\":\"\"}},[_c('v-card',{attrs:{\"max-height\":_vm.maxCardHeight,\"color\":_vm.$vuetify.theme.themes[this.$store.getters.getCurrentThemeMode].background}},[_c('v-card-title',{staticClass:\"justify-center\"},[_c('h4',{staticClass:\"view-title\"},[_vm._v(\"Graph View\")]),_c('v-spacer'),(_vm.cellType1)?_c('v-chip',{staticClass:\"ma-2\"},[_vm._v(_vm._s(_vm.cellType1))]):_vm._e(),(_vm.cellType2)?_c('v-chip',{staticClass:\"ma-2\"},[_vm._v(_vm._s(_vm.cellType2))]):_vm._e()],1),_c('v-card-text',[_c('div',{ref:\"graph\",attrs:{\"id\":\"graph\"}})])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import _ from \"lodash\";\nimport * as d3 from \"d3\";\n\nexport const FORMAT_TO_ID = cellName => {\n  return cellName\n    .split(\" \")\n    .join(\"-\")\n    .split(\"(\")\n    .join(\"\")\n    .split(\")\")\n    .join(\"\")\n    .split(\",\")\n    .join(\"\")\n    .replace(/\\//g, \"-\");\n};\n\nexport const GENERATE_LIST_COPY = originalList => {\n  return Object.entries(_.cloneDeep(originalList));\n};","/*jshint esversion: 6 */\n// @ts-check\n// eslint-disable-next-line no-unused-vars\n// @ts-ignore\nimport { Vertex } from \"./graph.js\";\n/**\n *\n * @param {number[]} lst\n */\nexport function average(lst) {\n  if (!lst.length) return 0;\n  let sum = lst.reduce((prev, cur) => (cur += prev));\n  let avg = sum / lst.length;\n  return avg;\n}\n\nexport function sum(lst) {\n  if (!lst.length) return 0;\n  return lst.reduce((prev, cur) => (cur += prev));\n}\n\n/**\n *\n * @param {number} len\n */\nexport function listOfLists(len) {\n  const array = Array(len);\n  for (let i = 0; i < array.length; i++) {\n    array[i] = [];\n  }\n  return array;\n}\n\n/* given 2 edges (x coordinates) do the edges cross? */\nexport function isCross(p1, c1, p2, c2) {\n  return (p1 > p2 && c1 < c2) || (p1 < p2 && c1 > c2) ? 1 : 0;\n}\n\n/**\n * Count the number of crossings between two (adjacent) levels\n * @param {Vertex[]} parents\n */\nexport function countCrossingsLevel(parents) {\n  let count = 0;\n  // no easy way to iterate over the links of a level...\n  if (parents.length > 1) {\n    for (let i = 0; i < parents.length - 1; i++) {\n      let p1 = parents[i];\n      p1.children.forEach(function(c1) {\n        // jshint ignore:line\n        for (let j = i + 1; j < parents.length; j++) {\n          let p2 = parents[j];\n          p2.children.forEach(function(c2) {\n            // jshint ignore:line\n            count += isCross(\n              p1.levelIdx,\n              c1.levelIdx,\n              p2.levelIdx,\n              c2.levelIdx\n            );\n          });\n        }\n      });\n    }\n  }\n  return count;\n}\n\nexport function countCrossingsGraph(graph) {\n  const levels = graph.getLevels();\n  let crossings = 0;\n  for (let i = 0; i < levels.length - 1; i++) {\n    let lc = countCrossingsLevel(levels[i]);\n    crossings += lc;\n  }\n  return crossings;\n}\n\nexport function simpleSorter(graph, hlevel = 3, pass = 0) {\n  const levels = graph.getLevels();\n\n  // compare two nodes\n  function cmp(a, b) {\n    // heuristic one - stick to your primary parent\n    if (!a.primaryParent) {\n      console.log(`node ${a.index} ${a.name} no primary parent`);\n    }\n    let ai = a.primaryParent.levelIdx;\n    let bi = b.primaryParent.levelIdx;\n    if (ai != bi) return ai - bi;\n    if (hlevel > 1) {\n      // hueristic two - consider all your parents\n      // only make sense if at least one has multiple parents\n      if (a.parents.length > 1 || b.parents.length > 1) {\n        let ap = average(a.parents.map(p => p.levelIdx));\n        let bp = average(b.parents.map(p => p.levelIdx));\n        if (ap != bp) return ap - bp;\n      } else {\n        // generally, looking at your children is a really bad\n        // idea - wait until it becomes useful (when things are stable)\n        // and only if you have only 1 child\n        if (pass > 5 && a.children.length == 1 && b.children.length == 1) {\n          // keep diving until someone doesn't have 1 child\n          let ac = a.children[0];\n          let bc = b.children[0];\n          while (ac.children.length == 1 && bc.children.length == 1) {\n            ac = ac.children[0];\n            bc = bc.children[0];\n          }\n          let ap = ac.levelIdx;\n          let bp = bc.levelIdx;\n          return ap - bp;\n        }\n      }\n    }\n    if (hlevel > 2) {\n      // heuristic three - transitive closure of your descendents ancestors\n      if (a.dalevel.length && b.dalevel.length) {\n        let ap = average(a.dalevel.map(p => p.levelIdx));\n        let bp = average(b.dalevel.map(p => p.levelIdx));\n        if (ap != bp) return ap - bp;\n      }\n    }\n    return 0;\n  }\n\n  // sort each level\n  let idx = 0;\n  levels.forEach(function(level, li) {\n    if (li > 0) {\n      level.sort(cmp);\n    }\n    level.forEach((n, i) => {\n      n.levelIdx = i;\n      n.index = idx++;\n    });\n  });\n\n  // reorder the nodes\n  graph.nodes.sort((a, b) => a.index - b.index);\n  // make sure the children are sorted correctly\n  graph.nodes.forEach(n => n.primaryChildren.sort((a, b) => a.index - b.index));\n  graph.nodes.forEach(n => n.children.sort((a, b) => a.index - b.index));\n}\n","/*jshint esversion: 6 */\n// @ts-check\n\n// @ts-ignore\nimport { listOfLists } from \"./utils.js\";\n\n/**\n * Can't be a Node since that's a reserved term by the DOM\n */\nexport class Vertex {\n  /**\n   * make a node\n   * @param {string} name\n   * @param {object} params\n   * @param {number} [params.width=10]\n   * @param {number} [params.height=10]\n   */\n  constructor(name, params = {}) {\n    this.name = name;\n    this.height = \"height\" in params ? params.height : 10;\n    this.width = \"width\" in params ? params.width : 10;\n    // these are usually added later by the reader\n    this.parents = [];\n    this.children = [];\n    this.istree = undefined;\n    this.index = undefined; // overl rank (index into nodes list)\n    this.phantom = false;\n    // these are added later by the analyzer, but we declare them to have no warnings\n    this.depth = -1;\n    this.longest = -1;\n    this.levelIdx = undefined; // index in the level (where in levels list)\n    this.ancestors = new Set();\n    this.descendentAncestors = new Set();\n    this.dalevel = [];\n\n    // these are used for sorting\n    this.levelrank = undefined;\n\n    // these are used for drawing\n    this.x = undefined;\n    this.y = undefined;\n\n    // for the new and improved sorter\n    this.primaryParent = undefined;\n    /** @type {Vertex[]} */\n    this.primaryChildren = [];\n    this.grandkidIndex = undefined;\n\n    // used for layout\n    this.twidth = undefined;\n  }\n}\n\nexport class Link {\n  /**\n   *\n   * @param {Vertex} source\n   * @param {Vertex} target\n   * @param {string} color\n   * @param {number} value\n   */\n  constructor(source, target, color = \"#000\", value = 1) {\n    this.source = source;\n    this.target = target;\n    this.color = color;\n    this.value = value;\n  }\n}\n\n/**\n * @callback NodeFunction\n * @param{Vertex} node\n */\n\n/**\n * @class\n */\nexport class Graph {\n  /**\n   *\n   * @param {Vertex[]} nodes\n   * @param {Link[]} links\n   * @param {Array} constraints\n   * @param {Array} groups\n   */\n  constructor(nodes, links, constraints = [], groups = []) {\n    /** @type {Vertex[]} */\n    this.nodes = nodes;\n    /** @type {Link[]} */\n    this.links = links;\n    this.constraints = constraints;\n    this.groups = groups;\n    this.analysis = undefined;\n  }\n  /**\n   * return a list of the roots\n   * @returns {Vertex[]}\n   */\n  roots() {\n    return this.nodes.filter(n => !n.parents.length);\n  }\n  /**\n   * return a list of the leaves\n   * @returns {Vertex[]}\n   */\n  leaves() {\n    return this.nodes.filter(n => !n.children.length);\n  }\n\n  /**\n   * apply a function to each node in breadth first order\n   * this only works on level graphs!\n   * @param {NodeFunction} nodefunc\n   */\n  breadthFirst(nodefunc, nodupes = true) {\n    let results = [];\n    // start with the roots\n    let queue = this.roots();\n    // now iterate until we're done\n    while (queue.length) {\n      const n = queue.shift();\n      results.push(nodefunc(n));\n      n.children.forEach(function(c) {\n        // jshint ignore:line\n        if (!nodupes || !queue.includes(c)) queue.push(c);\n      });\n    }\n    return results;\n  }\n\n  /**\n   * get the levels of the graph - it also resets the indecies in the levels\n   */\n  getLevels() {\n    const nodes = this.nodes;\n    const maxLongest = Math.max(...nodes.map(n => n.longest));\n\n    /** @type Vertex[][]] */\n    const levels = listOfLists(maxLongest);\n\n    nodes.forEach(n => levels[n.longest - 1].push(n));\n    levels.forEach(level => level.forEach((node, i) => (node.levelIdx = i)));\n\n    return levels;\n  }\n\n  /**\n   * Re-order the nodes based on a breadth first traversal\n   * it puts the nodes in order - which means it can mess stuff up\n   * It does re-assign indecies based on this new order.\n   * It does not re-assign level indecies.\n   */\n  orderNodes() {\n    // beginning with the roots, do a breadth first traversal of the tree to\n    // assign indecies\n    let idx = 0;\n    let orderedNodes = [];\n    let queue = this.nodes.filter(node => !node.primaryParent);\n    while (queue.length) {\n      const node = queue.shift();\n      node.index = idx++;\n      orderedNodes.push(node);\n      node.primaryChildren.forEach(child => queue.push(child)); // jshint ignore:line\n    }\n    this.nodes = orderedNodes;\n  }\n\n  /** describe the graph to the console */\n  describe() {\n    // count the number of nodes with each amount of parents\n    let pCount = {};\n    this.nodes.forEach(node => {\n      let npars = node.parents.length;\n      if (pCount[npars]) {\n        pCount[npars]++;\n      } else {\n        pCount[npars] = 1;\n      }\n    });\n  }\n\n  /** extract a D3 Hierarchy description  - this is the literal\n   *  (someone else has to call d3.hierarchy) */\n  hierarchy() {\n    /** get the root - if there are multiple roots, make a new root node */\n    let roots = this.roots();\n    let root;\n    if (roots.length == 1) {\n      root = {\n        name: roots[0].name,\n        node: roots[0],\n        nchildren: roots[0].primaryChildren\n      };\n    } else {\n      root = { name: \"Fake Root\", node: undefined, nchildren: roots };\n    }\n    /* proceed recursively */\n    function expand(tree) {\n      // converty nchildren (node list) to d3 form.\n      tree.children = [];\n      tree.nchildren.forEach(function(c) {\n        let nnode = { name: c.name, node: c, nchildren: c.primaryChildren };\n        tree.children.push(nnode);\n        expand(nnode);\n      });\n    }\n    expand(root);\n    return root;\n  }\n}\n\n/**\n * turn something with a forEach into a string (works for sets)\n * @param {*} lst\n */\nexport function strifyNodes(lst, field = \"name\") {\n  let s = \"[\";\n  lst.forEach(v => (s += v[field] + \" \"));\n  s += \"]\";\n  return s;\n}\n\n/**\n * Given a graph, change things such that all links are 1 level\n * this means that longer links get broken into a series of steps with phantom nodes inserted\n * @param {Graph} graph\n */\nfunction phantomGraph(graph) {\n  // a list of all of the long links\n  const longLinks = graph.links.filter(\n    link => link.target.longest - link.source.longest > 1\n  );\n  // links are only the links of the correct length\n  const links = graph.links.filter(\n    link => link.target.longest - link.source.longest == 1\n  );\n  // save the old links\n  // @ts-ignore\n  graph.oldLinks = graph.links;\n\n  // break up the long links\n  longLinks.forEach(function(link, li) {\n    // disconnect child and parent\n    link.target.parents.splice(link.target.parents.indexOf(link.source), 1);\n    link.source.children.splice(link.source.children.indexOf(link.target), 1);\n    let prev = link.source;\n    for (\n      let level = link.source.longest + 1;\n      level < link.target.longest;\n      level++\n    ) {\n      let nnode = new Vertex(`connector-${li}-${level}`);\n      nnode.phantom = true;\n      nnode.parents.push(prev);\n      nnode.longest = level;\n      nnode.depth = link.source.depth + 1;\n      nnode.istree = false;\n      prev.children.push(nnode);\n      graph.nodes.push(nnode);\n      links.push(new Link(prev, nnode));\n      prev = nnode;\n    }\n    link.target.parents.push(prev);\n    prev.children.push(link.target);\n    links.push(new Link(prev, link.target));\n  });\n\n  graph.links = links;\n}\n\n/**\n * analyze a graph in place\n * this just adds information to the nodes (in place)\n * depth, longest, istree, index\n * if we level the graph, we add phantom nodes BEFORE doing ancestry\n * @param {Graph} graph\n * @param {boolean} [level=true]\n */\nexport function analyzeGraph(graph, level = true) {\n  // some analysis\n  let roots = graph.roots();\n\n  // Depths\n  // do a simple breadth-first search to get depth - where depth is shortest path to a root\n  // start with the roots\n  let queue = [];\n  roots.forEach(x => {\n    x.depth = 1;\n    queue.push(x);\n  });\n  // now iterate until we're done\n  while (queue.length) {\n    const n = queue.shift();\n    n.children.forEach(child => {\n      // jshint ignore:line\n      if (child.depth < 1) {\n        child.depth = n.depth + 1;\n        queue.push(child);\n      }\n    });\n  }\n\n  // a tricker thing is to find the LONGEST path to a node\n  // I am doing this inefficiently - each node may be visited multiple times\n  // each time it is updated\n  queue = [];\n  roots.forEach(x => {\n    x.longest = 1;\n    queue.push(x);\n  });\n  // now iterate until we're done\n  while (queue.length) {\n    const n = queue.shift();\n    const newLong = n.longest + 1;\n    n.children.forEach(child => {\n      // jshint ignore:line\n      if (child.longest < newLong) {\n        child.longest = newLong;\n        queue.push(child);\n      }\n    });\n  }\n\n  // Is the subtree below a node a tree?\n  // this requires that: each child is a tree, and each child has 1 parent\n  // we cache this within the node\n  function isTree(n) {\n    // jshint ignore:line\n    if (n.istree != undefined) return n.istree;\n    // look for a child that makes us not a tree\n    let istree = true;\n    n.children.forEach(function(child) {\n      if (!isTree(child) || child.parents.length > 1) {\n        istree = false;\n      }\n    });\n    n.istree = istree;\n    return istree;\n  }\n  graph.nodes.forEach(n => isTree(n));\n\n  // add the phantom nodes if need be\n  if (level) phantomGraph(graph);\n\n  // assign indecies based on order - AFTER phantom nodes added\n  graph.nodes.forEach((n, i) => (n.index = i));\n\n  // analyses after adding the phantoms\n  let levels = graph.getLevels();\n\n  // ancestor sets - a place where naive breadth first actually makes sense\n  graph.breadthFirst(function(node) {\n    node.children.forEach(function(child) {\n      node.ancestors.forEach(ancestor => child.ancestors.add(ancestor));\n      child.ancestors.add(node);\n    });\n  });\n\n  // work bottom up, rather than using breadth first\n  for (let li = levels.length - 1; li >= 0; li--) {\n    const level = levels[li];\n    level.forEach(function(node) {\n      node.children.forEach(function(child) {\n        child.ancestors.forEach(a => node.descendentAncestors.add(a));\n        child.descendentAncestors.forEach(a => node.descendentAncestors.add(a));\n      });\n    });\n  }\n  // find the das at the level above the node\n  graph.nodes.forEach(function(node) {\n    node.dalevel = [...node.descendentAncestors].filter(\n      n => n.longest == node.longest\n    );\n  });\n}\n","/* eslint-disable no-console */\n/*jshint esversion: 6 */\n// @ts-check\n\n// eslint-disable-next-line no-unused-vars\nimport { Graph, strifyNodes } from \"./graph.js\";\n// @ts-ignore\n// @ts-ignore\nimport * as d3 from \"d3\";\nimport * as util from \"../util\";\n\n// /**\n//  *\n//  * @param {Graph} graph\n//  * @param {string} selector=\"body\"\n//  * @param {Object} params={}\n//  * @param {number} [params.height = 800]\n//  * @param {number} [params.nodeRadius = 4]\n//  * @param {?Boolean} [params.drawPhantoms]\n//  * @param {number} [params.bezierVert = 25]\n//  */\n// export function drawGraphLab(graph, selector = \"body\", vueThis, params = {}) {\n\n//   let linkType = \"paths\";\n//   let paths;\n\n//   /**\n//    * Where the vanilla JavaScript pass the click event to Vue\n//    */\n//   function update() {\n//     switch (linkType) {\n//       case \"arrows\":\n//         // draw directed edges with proper padding from node centers\n//         paths.attr(\"d\", function(d) {\n//           let deltaX = d.target.x - d.source.x,\n//             deltaY = d.target.y - d.source.y,\n//             dist = Math.sqrt(deltaX * deltaX + deltaY * deltaY),\n//             normX = deltaX / dist,\n//             normY = deltaY / dist,\n//             sourcePadding = d.source.phantom ? 1 : nodeRadius,\n//             targetPadding = d.target.phantom ? 1 : nodeRadius + 2,\n//             sourceX = d.source.x + sourcePadding * normX,\n//             sourceY = d.source.y + sourcePadding * normY,\n//             targetX = d.target.x - targetPadding * normX,\n//             targetY = d.target.y - targetPadding * normY;\n//           return \"M\" + sourceX + \",\" + sourceY + \"L\" + targetX + \",\" + targetY;\n//         });\n//         break; // end arrow update\n//       case \"lines\":\n//         paths.attr(\"x1\", d => d.source.x);\n//         paths.attr(\"y1\", d => d.source.y);\n//         paths.attr(\"x2\", d => d.target.x);\n//         paths.attr(\"y2\", d => d.target.y);\n//         break;\n//       case \"paths\":\n//         paths.attr(\"d\", function(d) {\n//           let x1 = d.source.x;\n//           let y1 = d.source.y + radius(d.source);\n//           let x2 = d.target.x;\n//           let y2 = d.target.y - radius(d.target);\n//           //return `M${x1},${y1}L${x2},${y2}`;\n//           return `M${x1},${y1}C${x1},${y1 + 15},${x2},${y2 - 15},${x2},${y2}`;\n//         });\n//         break;\n//     }\n\n//     // update node positions\n//     node\n//       .attr(\"cx\", function(d) {\n//         return d.x;\n//       })\n//       .attr(\"cy\", function(d) {\n//         return d.y;\n//       });\n//   }\n//   update();\n// }\n\n/**\n * New drawwing code - only does Beziers\n * has a few parameters\n * and cannot update node positions\n *\n * @param {Graph} graph\n * @param {string} selector=\"body\"\n * @param {Object} params={}\n * @param {number} [params.height = 800]\n * @param {number} [params.nodeRadius = 4.5]\n * @param {?Boolean} [params.drawPhantoms]\n * @param {number} [params.bezierVert = 25]\n */\n// @ts-ignore\n// @ts-ignore\nexport function drawGraph(graph, selector = \"body\", vueThis, params = {}) {\n  let nodeRadius = params.nodeRadius || 4.5;\n  let bvert = params.bezierVert || 15;\n  let height = params.height || 985;\n  const width = Math.max(...graph.nodes.map(n => n.x)) + nodeRadius;\n\n  let svg = d3\n    // @ts-ignore\n    .select(selector)\n    .append(\"svg\")\n    .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n    .attr(\"viewBox\", `0 0 ${width} ${height}`)\n    .call(\n      // @ts-ignore\n      d3.zoom().on(\"zoom\", function() {\n        // @ts-ignore\n        svg.attr(\"transform\", d3.event.transform);\n      })\n    )\n    .append(\"g\");\n\n  let paths;\n\n  // create the Bezier segment from x1,y1 to x2,y2 - assuming that x1,y1 was the last point\n  // note that the derivatives go vertically\n  function cseg(x1, y1, x2, y2) {\n    // I made this a variable to experiment with computing better values\n    // nothing works well\n    let bv = bvert;\n    return `C${x1},${y1 + nodeRadius + bv},${x2},${y2 -\n      nodeRadius -\n      bv},${x2},${y2 - nodeRadius}`;\n  }\n\n  // @ts-ignore\n  function pathId(links) {\n    return (\n      util.FORMAT_TO_ID(links[\"source\"][\"name\"]) +\n      \"---\" +\n      util.FORMAT_TO_ID(links[\"target\"][\"name\"])\n    );\n  }\n\n  // we only create links for the non-phantom source nodes\n  // we then trace through the phantom nodes\n  paths = svg\n    .selectAll(\".link\")\n    .data(graph.links.filter(link => !link.source.phantom))\n    .enter()\n    .append(\"svg:path\")\n    .attr(\"id\", pathId)\n    .attr(\"stroke-width\", 0.75)\n    .attr(\"fill\", \"none\")\n    .attr(\"d\", function(d) {\n      // start at the beginning of the first source\n      let x1 = d.source.x;\n      let y1 = d.source.y + nodeRadius;\n      let pstr = `M${x1},${y1}`;\n      let next = d.target;\n      // traverse phantom nodes\n      while (next.phantom) {\n        let x2 = next.x;\n        let y2 = next.y;\n        pstr += cseg(x1, y1, x2, y2);\n        // vertical line through the node's location\n        pstr += `L${x2},${y2 + nodeRadius}`;\n        next = next.children[0];\n        x1 = x2;\n        y1 = y2;\n      }\n      // now we go to the final place\n      let x2 = next.x;\n      let y2 = next.y;\n      pstr += cseg(x1, y1, x2, y2);\n      return pstr;\n    });\n\n  paths.style(\"stroke\", link => link.color).attr(\"class\", \"link\");\n  paths.on(\"mouseover\", function handle(d) {\n    // @ts-ignore\n    let link = d3.select(this);\n    link.style(\"stroke\", \"#FF6F61\");\n   \n    /**\n     * \n     * \n     * Need to add the hover over edge show tooltips\n     * on both nodes functionality here\n     * \n     * \n     */\n  });\n  paths.on(\"mouseout\", function handle(d) {\n    // @ts-ignore\n    d3.select(this).style(\"stroke\", d.color);\n  });\n\n  /**\n   * Assign an id to each circle based on node type\n   * @param {Object} node\n   */\n  // Assign an id to each circle based on node type\n  // @ts-ignore\n  function nodeId(node) {\n    if (node.phantom) {\n      return \"phantom-\" + util.FORMAT_TO_ID(node.name);\n    } else {\n      return \"circle-\" + util.FORMAT_TO_ID(node.name);\n    }\n  }\n\n  // @ts-ignore\n  function handleMouseOver() {\n    // Use D3 to select element, change color and size\n    // @ts-ignore\n    let node = d3.select(this);\n    node.attr(\"r\", nodeRadius * 2);\n\n    // @ts-ignore\n    let d3plus = require(\"d3plus-tooltip\");\n    // @ts-ignore: This is a notation that d3plus-tooltip uses\n    new d3plus.Tooltip()\n      .data([{ name: node.attr(\"name\") }])\n      .thead([\n        function(node) {\n          return node.name;\n        }\n      ])\n      .position(\"#\" + node.attr(\"id\"))\n      .render();\n  }\n\n  // @ts-ignore\n  function handleMouseOut() {\n    // @ts-ignore\n    d3.select(this).attr(\"r\", nodeRadius);\n    // @ts-ignore\n    d3.select(\".d3plus-tooltip\").remove();\n  }\n\n  function handleMouseClick() {\n    // @ts-ignore\n    vueThis.selectedCellName = d3.select(this).attr(\"name\");\n  }\n\n  function nodeClass(node) {\n    if (node.phantom) {\n      return \"phantom\";\n    } else {\n      return \"cell\";\n    }\n  }\n\n  function nodeColor(node) {\n    if (node.phantom) return \"#42b98300\";\n    if (node.istree) return \"#faed27\";\n    return \"#faed27\";\n  }\n\n  function nodeName(node) {\n    return node.name;\n  }\n\n  function nodeStroke(node) {\n    if (node.phantom) return \"none\";\n    return \"#000\";\n  }\n\n  let node = svg\n    .selectAll(\".node\")\n    .data(\n      params.drawPhantoms ? graph.nodes : graph.nodes.filter(n => !n.phantom)\n    )\n    .enter()\n    .append(\"circle\")\n    .attr(\"name\", nodeName)\n    .attr(\"id\", nodeId)\n    .attr(\"class\", nodeClass)\n    .attr(\"r\", nodeRadius)\n    .style(\"fill\", nodeColor)\n    .style(\"stroke\", nodeStroke)\n    .style(\"stroke-width\", 0.5)\n    .attr(\"cx\", d => d.x)\n    .attr(\"cy\", d => d.y);\n\n  node\n    .filter(\".cell\")\n    .on(\"mouseover\", handleMouseOver)\n    .on(\"mouseout\", handleMouseOut)\n    .on(\"click\", handleMouseClick);\n\n  node.append(\"title\").text(function(d) {\n    return `${\n      d.index\n    }:${d.name} ${strifyNodes(d.dalevel, \"index\")} tw:${d.twidth}`;\n  });\n}\n","import { Link, Graph, Vertex } from \"./graph.js\";\n\n/* just make the graph data structure given the input data */\n/**\n *\n * @param {Graph} data\n */\nexport function jsonToGraph(data) {\n  // we have a set of node names (in data) with their children\n  // make a list of node objects\n  // warning: arrow notation can't return an object directly\n  let nodes = Object.keys(data).map(name => new Vertex(name));\n\n  // make a dictionary so that we can find things by name\n  // it's called \"node\" since it lets us find a node\n  let node = {};\n  nodes.forEach(function(n) {\n    node[n.name] = n;\n  });\n\n  // assign reasonable indecies\n  nodes.forEach((node, idx) => (node.index = idx));\n\n  // make links in the correct format\n  // now process all of the links - create a list of links, as well\n  // as store the graph information in the nodes\n  let links = [];\n  for (const sourceName in data) {\n    data[sourceName].forEach(function(targetName) {\n      const source = node[sourceName];\n      const target = node[targetName];\n      if (!source) console.log(`Bad node ${sourceName} as source`);\n      if (!target) console.log(`Bad node ${targetName} as target`);\n      if (source && target) {\n        let link = new Link(source, target);\n        links.push(link);\n        source.children.push(target);\n        target.parents.push(source);\n      }\n    });\n  }\n\n  return new Graph(nodes, links);\n}\n","/*jshint esversion: 6 */\n// @ts-check\nimport { Graph } from \"./graph.js\";\n\n/**\n * @param {Graph} graph\n */\nexport function primaryParent(graph) {\n  // for every node, choose it's primary parent\n  graph.nodes.forEach(function(node) {\n    node.primaryParent = undefined;\n    let maxChildren = 0;\n    node.parents.forEach(function(parent) {\n      const parentKids = parent.children.length;\n      if (parentKids > maxChildren) {\n        maxChildren = parentKids;\n        node.primaryParent = parent;\n      }\n    });\n  });\n  // for every node, get all of the children for which it is primary\n  graph.nodes.forEach(node => (node.primaryChildren = []));\n  graph.nodes.forEach(node => {\n    if (node.primaryParent) node.primaryParent.primaryChildren.push(node);\n  });\n}\n","/*jshint esversion: 6 */\n// @ts-check\nimport { Graph } from \"./graph.js\";\nimport { average, sum } from \"./utils.js\";\n\nimport * as d3 from \"d3\";\n\nfunction xLength(graph) {\n  const diffs = graph.links.map(link =>\n    Math.abs(link.source.x - link.target.x)\n  );\n  return diffs.reduce((a, b) => (b += a));\n}\n\n/** use the d3 layout */\nexport function d3Layout(graph, levelSep = 100, leftMargin = 10) {\n  // @ts-ignore\n  let hier = d3.hierarchy(graph.hierarchy());\n  // @ts-ignore\n  let tree = d3.tree();\n  // @ts-ignore\n  tree.size([]); // do we have to give it a size?\n  // node size is fixed - so instead, use separation to control spacing\n  tree.separation(function(a, b) {\n    let na = a.data.node;\n    let nb = b.data.node;\n    if (na && nb) {\n      return 1 + (na.phantom ? 2 : 5) + (nb.phantom ? 2 : 5);\n    } else {\n      return 10;\n    }\n  });\n  tree.nodeSize([1, 1]);\n  tree(hier);\n  // things are centered at zero, so shift things\n  // @ts-ignore\n  let left = Math.min(...hier.descendants().map(n => n.x));\n  hier.descendants().forEach(n => {\n    // @ts-ignore\n    n.x -= left - leftMargin;\n  });\n  // copy the D3 positions into the node positions\n  hier.descendants().forEach(function(node) {\n    if ((node.data, node)) {\n      // @ts-ignore\n      node.data.node.x = node.x;\n      node.data.node.y = (node.data.node.longest + 1) * levelSep;\n    }\n  });\n}\n\n/**\n *\n * @param {Graph} graph\n */\nexport function layout(graph) {\n  // for debugging - keep a set of nodes (a dictionary) that we'll do print statements\n  const examine = {\n    129: true\n  };\n\n  const width = 1200;\n  const topmargin = 50;\n  const levelSep = 50;\n\n  const vertexRadius = 5;\n  const phantomRadius = 1;\n  const spacer = 2;\n\n  function space(node) {\n    return spacer + (node.phantom ? phantomRadius : vertexRadius);\n  }\n\n  const levels = graph.getLevels();\n  // @ts-ignore\n  // @ts-ignore\n  const links = graph.links;\n\n  // assign indecies based on levels\n  // this means creating a new node list\n  const orderedNodes = [];\n  levels.forEach(level => level.forEach(n => orderedNodes.push(n)));\n  orderedNodes.forEach((node, idx) => (node.index = idx));\n\n  // make initial positions\n  levels.forEach(function(level, li) {\n    let left = 0;\n    // @ts-ignore\n    // @ts-ignore\n    level.forEach(function(n, ni) {\n      // @ts-ignore\n      // @ts-ignore\n      let px = n.parents.length ? Math.min(...n.parents.map(m => m.x)) : 0;\n      n.x = left + space(n); // Math.max(px, left+space(n));\n      n.y = topmargin + li * levelSep;\n      left = n.x + space(n);\n    });\n  });\n  console.log(`Initial Lengths = ${xLength(graph)}`);\n\n  // adjust initial positions to the right\n  if (1) {\n    // need to go bottom to top\n    // levels.forEach( function(level,li)\n    for (let li = levels.length - 1; li >= 0; li--) {\n      const level = levels[li];\n      let right = width;\n      // go from right to left shifting things right if they can\n      for (let ni = level.length - 1; ni >= 0; ni--) {\n        let n = level[ni];\n\n        // if the rightmost thing is a leaf, we might want to move it to\n        // make space for other things\n        let rightLeaf = width;\n\n        // 4 different heuristics as to where to move to - purely aesthetics\n        let nx1 = n.children.length\n          ? Math.min(...n.children.map(m => m.x))\n          : rightLeaf;\n        let nx3 = n.children.length\n          ? Math.max(...n.children.map(m => m.x))\n          : rightLeaf;\n        // @ts-ignore\n        // @ts-ignore\n        let nx2 = (nx1 + nx3) / 2;\n        let na = n.children.length\n          ? average(n.children.map(m => m.x))\n          : rightLeaf;\n\n        if (n.index in examine) {\n          console.log(`right: n.x:${n.x} na:${na} right:${right}`);\n        }\n\n        let nx = Math.max(na, n.x);\n        n.x = Math.min(nx, right - space(n));\n        right = n.x - space(n);\n      }\n    } // );\n  }\n\n  function argmax(lst) {\n    let val = lst[0];\n    let mi = 0;\n    for (let i = 1; i < lst.length; i++) {\n      if (lst[i] > val) {\n        mi = i;\n        val = lst[i];\n      }\n    }\n    return mi;\n  }\n\n  function argmin(lst) {\n    let val = lst[0];\n    let mi = 0;\n    for (let i = 1; i < lst.length; i++) {\n      if (lst[i] < val) {\n        mi = i;\n        val = lst[i];\n      }\n    }\n    return mi;\n  }\n\n  // greedy pull left\n  // if the average of the children of a parent is to the right of the parent\n  // then this is a candidate to move to the left\n  // a parent should shift its children to the left if they aren't centered\n  levels.forEach(function(level) {\n    let left = 0;\n    level.forEach(function(node) {\n      if (node.primaryChildren.length) {\n        // we can't count on the ordering of the primary children\n        let leftChild =\n          node.primaryChildren[argmin(node.primaryChildren.map(n => n.x))];\n        let rightChild =\n          node.primaryChildren[argmax(node.primaryChildren.map(n => n.x))];\n        // console.log(`$N:${node.name} LC:${leftChild.name} RC:${rightChild.name} Left:${left}`)\n        // figure out how much shift we want\n        let goalDelta = average(node.primaryChildren.map(n => n.x)) - node.x;\n        if (goalDelta > 0) {\n          // we want to shift left, but how much can we\n          let maxShift = leftChild.x - (left + space(leftChild));\n          let shift = Math.min(maxShift, goalDelta);\n          if (shift > 0) {\n            node.primaryChildren.forEach(n => (n.x -= shift));\n          }\n        }\n        // put the boundary to the right of the rightmost child\n        left = rightChild.x + space(rightChild);\n      }\n    });\n  });\n\n  console.log(`Final Lengths = ${xLength(graph)}`);\n\n  // Report Out\n  console.log(\n    `${graph.nodes.length} nodes (w/phantoms), ${graph.links.length} links (w/phantoms)`\n  );\n  console.log(`${graph.constraints.length} constraints`);\n}\n\n/**\n * New version - use tree layout first (which will be too wide) and then try to do some packing for conciseness\n * @param {Graph} graph\n */\nexport function treeLayout(graph) {\n  // parameters (should be passed)\n  const topmargin = 50;\n  const levelSep = 65;\n\n  const vertexRadius = 5;\n  const phantomRadius = 2;\n  const spacer = 2;\n\n  function space(node) {\n    return spacer + (node.phantom ? phantomRadius : vertexRadius);\n  }\n\n  function minwid(node) {\n    return spacer + 2 * (node.phantom ? phantomRadius : vertexRadius);\n  }\n\n  const levels = graph.getLevels();\n\n  // compute various vertex properties - needs to be done from bottom to top\n  for (let li = levels.length - 1; li >= 0; li--) {\n    const level = levels[li];\n    // figure out the twidth of each node - the twidth includes the \"left\" spacer\n    level.forEach(function(node) {\n      // jshint ignore:line\n      node.twidth = Math.max(\n        minwid(node),\n        sum(node.primaryChildren.map(n => n.twidth))\n      );\n    });\n  }\n\n  // in theory, if we use the twidths, we shoud get a left leaning tree layout\n  levels.forEach(function(level, li) {\n    let left = vertexRadius;\n    level.forEach(function(node) {\n      node.x = Math.max(\n        left + space(node),\n        node.primaryParent ? node.primaryParent.x : 0\n      );\n      node.y = topmargin + li * levelSep;\n      // left += node.twidth;\n      left = node.x - space(node) + node.twidth;\n    });\n  });\n\n  // we have a left leaning tree, center parents over their kids (if we can move them that far right)\n  for (let ni = graph.nodes.length - 1; ni >= 0; ni--) {\n    const node = graph.nodes[ni];\n    if (node.primaryChildren.length) {\n      const goalX = average(node.primaryChildren.map(n => n.x));\n      const neighbor = graph.nodes[ni + 1];\n      if (neighbor.longest == node.longest) {\n        const maxX = neighbor.x - space(node) - space(neighbor) + spacer;\n        node.x = Math.min(maxX, goalX);\n      } else {\n        node.x = goalX;\n      }\n    }\n  }\n}\n","<template>\n  <v-layout row wrap>\n    <v-flex md12>\n      <v-card :max-height=\"maxCardHeight\" :color=\"$vuetify.theme.themes[this.$store.getters.getCurrentThemeMode].background\">\n        <v-card-title class=\"justify-center\">\n          <h4 class=\"view-title\">Graph View</h4>\n          <v-spacer />\n          <v-chip v-if=\"cellType1\" class=\"ma-2\">{{ cellType1 }}</v-chip>\n          <v-chip v-if=\"cellType2\" class=\"ma-2\">{{ cellType2 }}</v-chip>\n        </v-card-title>\n        <v-card-text>\n          <div ref=\"graph\" id=\"graph\"></div>\n        </v-card-text>\n      </v-card>\n    </v-flex>\n  </v-layout>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\nimport _ from \"lodash\";\n\nimport * as config from \"@/config\";\nimport * as util from \"@/util\";\n\nimport { analyzeGraph } from \"@/apis/graph.js\";\nimport { average, countCrossingsGraph, simpleSorter } from \"@/apis/utils.js\";\nimport { drawGraph } from \"@/apis/draw.js\";\nimport { jsonToGraph } from \"@/apis/structure.js\";\nimport { primaryParent } from \"@/apis/tangler.js\";\nimport { treeLayout } from \"@/apis/layout.js\";\n\nexport default {\n  name: \"cell-graph\",\n  props: {\n    cellData: Object\n  },\n  mounted() {\n    this.fetchData();\n  },\n  data() {\n    return {\n      cellType1: \"\",\n      cellType2: \"\",\n      keyValueDict: {},\n      listLocalCopy: [],\n      listSize: config.MAX_SELECTED_CELL_TYPE_NUMBER,\n      loaded: false,\n      loadedDictData: {},\n      maxCardHeight: config.FIRST_ROW_CARD_MAX_HEIGHT,\n      selectedCellName: \"\",\n      pathsDict: {}\n    };\n  },\n  methods: {\n    async fetchData() {\n      let data = await d3.json(\"./top_abs_10_dict.json\");\n      this.loadedDictData = data;\n    },\n\n    /**\n     * If any of these edge cases nodes are contained,\n     * return true (need to fade the edge in current case)\n     */\n    linkArrayEdgeCases(edgeCaseCheck) {\n      return (\n        edgeCaseCheck === \"cell\" ||\n        edgeCaseCheck === \"native cell\" ||\n        edgeCaseCheck === \"eukaryotic cell\"\n      );\n    },\n\n    /**\n     * Draw, layout and show graph on view\n     */\n    showGraph() {\n      let graph = jsonToGraph(this.cellData);\n      analyzeGraph(graph);\n      primaryParent(graph);\n      for (let i = 0; i < 20; i++) {\n        simpleSorter(graph, 3, i);\n      }\n      graph.links.forEach(\n        link =>\n          (link.color =\n            link.target.primaryParent == link.source ? \"#42b983\" : \"#42b983\")\n      );\n      treeLayout(graph);\n      drawGraph(graph, this.$refs.graph, this);\n    }\n  },\n  computed: {\n    geneSelected: {\n      get() {\n        return this.$store.getters.getGeneSelected;\n      }\n    },\n    cellSelected: {\n      get() {\n        return this.$store.getters.getCellSelected;\n      }\n    },\n    topGeneCellList: {\n      get() {\n        return this.$store.getters.getTopGeneCellList;\n      }\n    },\n    search: {\n      get() {\n        return this.$store.getters.getSearch;\n      },\n      set(value) {\n        return this.$store.dispatch(\"changeSearch\", value);\n      }\n    }\n  },\n  watch: {\n    // This is entry point of where the graph starts rendering\n    cellData() {\n      this.loaded = true;\n      this.listLocalCopy = util.GENERATE_LIST_COPY(this.cellData);\n      // Create a key(cell name) value(cell neighbors) list dict\n      const keys = Object.entries(this.listLocalCopy);\n      keys.forEach(item => {\n        this.keyValueDict[item[1][0]] = item[1][1];\n      });\n\n      for (let i = 0; i < this.listLocalCopy.length; i++) {\n        this.listLocalCopy[i].push(i.toString());\n      }\n      this.showGraph();\n    },\n    cellSelected() {\n      let curList = this.cellSelected;\n      this.cellType1 = \"\";\n      this.cellType2 = \"\";\n\n      if (curList.length == 1) {\n        this.cellType1 = curList[0];\n      } else if (curList.length == 2) {\n        this.cellType1 = curList[0];\n        this.cellType2 = curList[1];\n      }\n      // Set all cell nodes back to default\n      let svgClear = d3.select(this.$refs.graph).select(\"svg\");\n      svgClear\n        .selectAll(\".cell\")\n        .style(\"r\", config.NODE_RADIUS_DEFAULT)\n        .transition()\n        .style(\"fill\", config.CELL_TYPE_DEFAULT_COLOR);\n      // Highlight the node being selected\n      for (let i = 0; i < curList.length; i++) {\n        let svgHighlight = d3.select(this.$refs.graph).select(\"svg\");\n        svgHighlight\n          .select(\"#circle-\" + util.FORMAT_TO_ID(curList[i]))\n          .style(\"r\", config.NODE_RADIUS_POPPED)\n          .transition()\n          .style(\"fill\", config.CELL_TYPE_CHANGED_COLOR);\n      }\n    },\n    // Maintain selected cell type in display list\n    selectedCellName() {\n      let curList = this.cellSelected;\n      while (curList.length >= this.listSize) {\n        curList.pop();\n      }\n      curList.push(this.selectedCellName);\n      this.$store.dispatch(\"changeCellSelected\", curList);\n    },\n    /**\n     * Fade cell types that does not contain selected gene as top 10\n     */\n    geneSelected() {\n      let globalThis = this;\n      let dict = this.loadedDictData;\n      /* Reset default cell opacity(1) */\n      let cellReset = d3.select(this.$refs.graph).select(\"svg\");\n      cellReset = d3.selectAll(\".cell\").style(\"opacity\", 1);\n      /* Reset link opacity(1) and width(0.5) */\n      let linkReset = d3.select(this.$refs.graph).select(\"svg\");\n      linkReset = d3\n        .selectAll(\".link\")\n        .style(\"opacity\", 1.0)\n        .attr(\"stroke-width\", 0.5);\n\n      if (this.geneSelected === \"\") {\n        return;\n      }\n\n      let cellTypesThatFitCriteria = new Set();\n\n      /* Determine if each cell type contain selected gene as its top 10 */\n      for (const cellType of Object.entries(dict)) {\n        let cellName = cellType[0];\n        let cellValues = cellType[1];\n        let geneExist = false;\n        for (const gene of cellValues) {\n          let geneName = gene[2];\n          if (this.geneSelected === geneName) {\n            geneExist = true;\n            break;\n          }\n        }\n        /* If a gene is not among a cell type's top 10 */\n        if (!geneExist) {\n          /* Fade the cell type on graph */\n          let svgFade = d3.select(this.$refs.graph).select(\"svg\");\n          svgFade\n            .select(\"#circle-\" + util.FORMAT_TO_ID(cellName))\n            .style(\"opacity\", 0.2);\n        } else {\n          /* Add it to the cell type set */\n          cellTypesThatFitCriteria.add(\n            cellName\n              .replace(/-/g, \" \")\n              .replace(/\\(/g, \"\")\n              .replace(/\\)/g, \"\")\n              .replace(/,/, \"\")\n              .replace(/\\//g, \"-\")\n          );\n        }\n      }\n\n      /**\n       * Current edge cases of nodes that needs to be manually faded,\n       * need to figure out what happened here.\n       */\n      let svgEdgeCase1 = d3.select(this.$refs.graph).select(\"svg\");\n      svgEdgeCase1\n        .select(\"#circle-\" + util.FORMAT_TO_ID(\"cell\"))\n        .style(\"opacity\", 0.2);\n      let svgEdgeCase2 = d3.select(this.$refs.graph).select(\"svg\");\n      svgEdgeCase2\n        .select(\"#circle-\" + util.FORMAT_TO_ID(\"native cell\"))\n        .style(\"opacity\", 0.2);\n      let svgEdgeCase3 = d3.select(this.$refs.graph).select(\"svg\");\n      svgEdgeCase3\n        .select(\"#circle-\" + util.FORMAT_TO_ID(\"eukaryotic cell\"))\n        .style(\"opacity\", 0.2);\n\n      /**\n       * Fade links does not have both nodes contained in our node set\n       */\n      d3.select(this.$refs.graph)\n        .select(\"svg\")\n        .selectAll(\".link\")\n        .each(function(d) {\n          let linkArray = d3\n            .select(this)\n            .attr(\"id\")\n            .split(\"---\");\n          for (let i = 0; i < linkArray.length; i++) {\n            linkArray[i] = linkArray[i]\n              .replace(/-/g, \" \")\n              .replace(/\\(/g, \"\")\n              .replace(/\\)/g, \"\")\n              .replace(/,/, \"\")\n              .replace(/\\//g, \"-\");\n          }\n          if (\n            !cellTypesThatFitCriteria.has(linkArray[0]) ||\n            !cellTypesThatFitCriteria.has(linkArray[1]) ||\n            globalThis.linkArrayEdgeCases(linkArray[0]) ||\n            globalThis.linkArrayEdgeCases(linkArray[1])\n          ) {\n            d3.select(this).style(\"opacity\", 0.2);\n          } else {\n            // Increase the stroke width if fit all the criteria\n            d3.select(this).attr(\"stroke-width\", 3);\n          }\n        });\n    }\n  }\n};\n</script>\n\n<style scoped>\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CellGraph.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CellGraph.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CellGraph.vue?vue&type=template&id=ba93787c&scoped=true&\"\nimport script from \"./CellGraph.vue?vue&type=script&lang=js&\"\nexport * from \"./CellGraph.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ba93787c\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\",\"align-center\":\"\"}},[_c('v-flex',{attrs:{\"md12\":\"\"}},[_c('v-card',{attrs:{\"max-height\":\"600\",\"color\":_vm.$vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n          .background}},[_c('v-card-title',{staticClass:\"justify-left\"},[_c('h4',{staticClass:\"view-title\"},[_vm._v(\"Search View\")])]),_c('v-tabs',{attrs:{\"fixed-tabs\":\"\",\"background-color\":_vm.$vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n            .background}},[_c('v-tab',[_vm._v(\"Cell Centric\")]),_c('v-tab',[_vm._v(\"Gene Centric\")]),_c('v-tab-item',[_c('v-card-text',{style:({\n              background:\n                _vm.$vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n                  .background\n            })},[_c('v-layout',[_c('v-flex',{attrs:{\"md9\":\"\",\"sm12\":\"\"}},[_c('v-text-field',{attrs:{\"append-icon\":\"search\",\"label\":\"search\",\"single-line\":\"\",\"hide-details\":\"\",\"hide-no-data\":\"\"},model:{value:(_vm.search),callback:function ($$v) {_vm.search=$$v},expression:\"search\"}})],1),_c('v-spacer'),_c('v-flex',{attrs:{\"md3\":\"\",\"sm12\":\"\"}},[_c('v-select',{attrs:{\"items\":_vm.sortOptions,\"label\":\"sort\"},on:{\"input\":_vm.sortBasedOnOption},model:{value:(_vm.option),callback:function ($$v) {_vm.option=$$v},expression:\"option\"}})],1)],1),_c('v-layout',{staticClass:\"list\",class:{ 'max-height': _vm.listHeight },attrs:{\"row\":\"\",\"wrap\":\"\"}},[(_vm.loaded && _vm.listLocalCopy)?_c('v-flex',{attrs:{\"md12\":\"\"}},[_c('v-list',{attrs:{\"color\":_vm.$vuetify.theme.themes[\n                      this.$store.getters.getCurrentThemeMode\n                    ].background}},_vm._l((_vm.filteredData),function(keyValuePair,index){return _c('v-list-item',{key:index,staticClass:\"list\",on:{\"click\":function($event){return _vm.setCellSelected(keyValuePair[0])}}},[_c('v-layout',[(keyValuePair[0] && keyValuePair[1])?_c('v-flex',{staticClass:\"index\",attrs:{\"md3\":\"\",\"offset-md1\":\"\"}},[_vm._v(_vm._s(keyValuePair[0])+\": \")]):_vm._e(),(keyValuePair[1])?_c('v-flex',{attrs:{\"md6\":\"\",\"offset-md1\":\"\"}},_vm._l((keyValuePair[1]),function(neighbor,index){return _c('v-list',{key:index,attrs:{\"dense\":\"\"}},[(index === keyValuePair[1].length - 1)?_c('div',[_vm._v(\"\\n                            \"+_vm._s(neighbor)+\" \\n                          \")]):_c('div',[_vm._v(_vm._s(neighbor)+\",\")])])}),1):_vm._e()],1)],1)}),1)],1):_vm._e()],1)],1)],1),_c('v-tab-item',[_c('v-card-text',[_c('v-layout',[_c('v-flex',{attrs:{\"md12\":\"\",\"sm12\":\"\"}},[_c('v-text-field',{attrs:{\"append-icon\":\"search\",\"label\":\"search\",\"single-line\":\"\",\"hide-details\":\"\",\"hide-no-data\":\"\"},model:{value:(_vm.geneSearch),callback:function ($$v) {_vm.geneSearch=$$v},expression:\"geneSearch\"}})],1)],1),_c('virtual-list',{staticClass:\"list\",attrs:{\"size\":40,\"remain\":10}},_vm._l((_vm.filteredGeneData),function(item){return _c('v-list-item',{key:item.id,attrs:{\"three-line\":\"\"},on:{\"click\":function($event){return _vm.setGeneItem(item)}}},[_c('v-list-item-content',{staticClass:\"list-item-box\"},[_c('v-list-item-title',[_vm._v(_vm._s(_vm.loadedGeneIdToNameDict[item])+\": \\n                  \")]),_c('v-list-item-subtitle',[_c('a',{staticClass:\"web-link\",on:{\"click\":function($event){return _vm.navigateToGenePage(item)}}},[_vm._v(\"\\n                      \"+_vm._s(item)+\"\\n                    \")])]),_c('v-list-item-subtitle',[_vm._v(\"\\n                    \"+_vm._s(_vm.loadedGeneIdToDescriptionDict[item])+\"\\n                  \")])],1)],1)}),1)],1)],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-layout row wrap align-center>\n    <v-flex md12>\n      <v-card\n        max-height=\"600\"\n        :color=\"\n          $vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n            .background\n        \"\n      >\n        <v-card-title class=\"justify-left\">\n          <h4 class=\"view-title\">Search View</h4>\n        </v-card-title>\n\n        <v-tabs\n          fixed-tabs\n          :background-color=\"\n            $vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n              .background\n          \"\n        >\n          <v-tab>Cell Centric</v-tab>\n          <v-tab>Gene Centric</v-tab>\n          <v-tab-item>\n            <v-card-text\n              :style=\"{\n                background:\n                  $vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n                    .background\n              }\"\n            >\n              <v-layout>\n                <v-flex md9 sm12>\n                  <v-text-field\n                    v-model=\"search\"\n                    append-icon=\"search\"\n                    label=\"search\"\n                    single-line\n                    hide-details\n                    hide-no-data\n                  ></v-text-field>\n                </v-flex>\n                <v-spacer />\n                <v-flex md3 sm12>\n                  <v-select\n                    v-model=\"option\"\n                    :items=\"sortOptions\"\n                    @input=\"sortBasedOnOption\"\n                    label=\"sort\"\n                  ></v-select>\n                </v-flex>\n              </v-layout>\n              <v-layout\n                row\n                wrap\n                class=\"list\"\n                :class=\"{ 'max-height': listHeight }\"\n              >\n                <v-flex md12 v-if=\"loaded && listLocalCopy\">\n                  <v-list\n                    :color=\"\n                      $vuetify.theme.themes[\n                        this.$store.getters.getCurrentThemeMode\n                      ].background\n                    \"\n                  >\n                    <v-list-item\n                      v-for=\"(keyValuePair, index) in filteredData\"\n                      :key=\"index\"\n                      class=\"list\"\n                      @click=\"setCellSelected(keyValuePair[0])\"\n                    >\n                      <v-layout>\n                        <v-flex\n                          md3\n                          offset-md1\n                          v-if=\"keyValuePair[0] && keyValuePair[1]\"\n                          class=\"index\"\n                          >{{ keyValuePair[0] }}:&nbsp;</v-flex\n                        >\n                        <v-flex md6 offset-md1 v-if=\"keyValuePair[1]\">\n                          <v-list\n                            v-for=\"(neighbor, index) in keyValuePair[1]\"\n                            :key=\"index\"\n                            dense\n                          >\n                            <div v-if=\"index === keyValuePair[1].length - 1\">\n                              {{ neighbor }} \n                            </div>\n                            <div v-else>{{ neighbor }},</div>\n                          </v-list>\n                        </v-flex>\n                      </v-layout>\n                    </v-list-item>\n                  </v-list>\n                </v-flex>\n              </v-layout>\n            </v-card-text>\n          </v-tab-item>\n          <!-- Gene Centric Search View -->\n          <v-tab-item>\n            <v-card-text>\n              <v-layout>\n                <v-flex md12 sm12>\n                  <v-text-field\n                    v-model=\"geneSearch\"\n                    append-icon=\"search\"\n                    label=\"search\"\n                    single-line\n                    hide-details\n                    hide-no-data\n                  ></v-text-field>\n                </v-flex>\n              </v-layout>\n              <virtual-list :size=\"40\" :remain=\"10\" class=\"list\">\n                <v-list-item\n                  three-line\n                  v-for=\"item of filteredGeneData\"\n                  :key=\"item.id\"\n                  @click=\"setGeneItem(item)\"\n                >\n                  <v-list-item-content class=\"list-item-box\">\n                    <v-list-item-title\n                      >{{ loadedGeneIdToNameDict[item] }}:&nbsp;\n                    </v-list-item-title>\n                    <v-list-item-subtitle>\n                      <a class=\"web-link\" @click=\"navigateToGenePage(item)\">\n                        {{ item }}\n                      </a>\n                    </v-list-item-subtitle>\n                    <v-list-item-subtitle>\n                      {{ loadedGeneIdToDescriptionDict[item] }}\n                    </v-list-item-subtitle>\n                  </v-list-item-content>\n                </v-list-item>\n              </virtual-list>\n            </v-card-text>\n          </v-tab-item>\n        </v-tabs>\n      </v-card>\n    </v-flex>\n  </v-layout>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\nimport virtualList from \"vue-virtual-scroll-list\";\nimport _ from \"lodash\";\n\nexport default {\n  name: \"cell-list\",\n  props: {\n    cellData: Object\n  },\n  mounted() {\n    this.fetchData();\n  },\n  data() {\n    return {\n      cardHeight: this.$store.getters.getCardHeight,\n      detailItem: [],\n      listHeight: \"500px\",\n      listLocalCopy: [],\n      listSize: 2, // Put this in store at cleanup phase\n      loaded: false,\n      loadedDictData: {},\n      loadedGeneData: [],\n      loadedGeneIdToNameDict: {},\n      loadedGeneIdToDescriptionDict: {},\n      sortOptions: [\"default\", \"alphabetical\"]\n    };\n  },\n  methods: {\n    async fetchData() {\n      this.loadedGeneData = await d3.json(\"./genes.json\");\n      this.loadedDictData = await d3.json(\"./top_abs_10_dict.json\");\n      this.loadedGeneIdToNameDict = await d3.json(\"./gene_id_to_name.json\");\n      this.loadedGeneIdToDescriptionDict = await d3.json(\n        \"gene_id_to_description.json\"\n      );\n    },\n    setCellSelected(cellName) {\n      let curList = this.$store.getters.getCellSelected;\n      while (curList.length >= this.listSize) {\n        curList.pop();\n      }\n      curList.push(cellName);\n      this.$store.dispatch(\"changeCellSelected\", curList);\n    },\n    generateListCopy(originalList) {\n      return Object.entries(_.cloneDeep(originalList));\n    },\n    navigateToGenePage(item) {\n      window.open(\n        \"http://useast.ensembl.org/Homo_sapiens/Gene/Summary?g=\" + item\n      );\n    },\n    setGeneItem(gene) {\n      this.$store.dispatch(\"changeGeneSelected\", gene);\n    },\n    sortBasedOnOption(option) {\n      let globalThis = this;\n      this.$store.dispatch(\"changeOption\", String(option));\n      this.listLocalCopy = this.generateListCopy(this.cellData);\n      switch (option) {\n        case \"alphabetical\":\n          globalThis.listLocalCopy = _.sortBy(\n            this.listLocalCopy,\n            [\n              function(list) {\n                console.log(list[0]);\n                return list[0];\n              }\n            ],\n            [\"asc\"]\n          );\n          return globalThis.listLocalCopy;\n      }\n    }\n  },\n  computed: {\n    filteredData() {\n      if (this.$store.getters.getSearch === \"\") {\n        return this.listLocalCopy;\n      } else {\n        return this.listLocalCopy.filter(cell => {\n          let searchResult = this.search.toLowerCase();\n          let caseInsesitiveCell0 = cell[0].toLowerCase();\n          let caseInsesitiveCellList = cell[1];\n          // Make all cell name in corresponding list to be lowercase\n          for (const cell of caseInsesitiveCellList) {\n            cell = cell.toLowerCase();\n          }\n          return (\n            caseInsesitiveCell0.includes(searchResult) ||\n            caseInsesitiveCellList.includes(searchResult)\n          );\n        });\n      }\n    },\n\n    /**\n     * Filtered gene data for gene centric view\n     */\n    filteredGeneData() {\n      let globalThis = this;\n\n      if (this.$store.getters.getGeneSearchFromSearchView === \"\") {\n        return this.loadedGeneData;\n      } else {\n        return this.loadedGeneData.filter(gene => {\n          if (globalThis.loadedGeneIdToNameDict[gene] == undefined) {\n            return;\n          }\n          return globalThis.loadedGeneIdToNameDict[gene].includes(\n            this.geneSearch\n          );\n        });\n      }\n    },\n    geneSelected: {\n      get() {\n        return this.$store.getters.getGeneSelected;\n      }\n    },\n    option: {\n      get() {\n        return this.$store.getters.getOption;\n      },\n      set(option) {\n        this.$store.dispatch(\"changeOption\", option);\n      }\n    },\n    search: {\n      get() {\n        return this.$store.getters.getSearch;\n      },\n      set(input) {\n        this.$store.dispatch(\"changeSearch\", input);\n      }\n    },\n    geneSearch: {\n      get() {\n        return this.$store.getters.getGeneSearchFromSearchView;\n      },\n      set(input) {\n        this.$store.dispatch(\"changeGeneSearchFromSearchView\", input);\n      }\n    }\n  },\n  watch: {\n    cellData() {\n      this.loaded = true;\n      this.listLocalCopy = this.generateListCopy(this.cellData);\n    },\n    geneSelected() {\n      let globalThis = this;\n      this.$store.dispatch(\"changeTopGeneCellList\", []);\n      for (const [key, value] of Object.entries(this.loadedDictData)) {\n        let geneArr = value;\n        for (let i = 0; i < geneArr.length; i++) {\n          if (geneArr[i][2] === globalThis.geneSelected) {\n            let cellName = key;\n            let geneValue = value[i][1];\n            globalThis.$store.dispatch(\"addToTopGeneCellList\", [\n              cellName,\n              geneValue\n            ]);\n          }\n        }\n      }\n    }\n  },\n  components: {\n    \"virtual-list\": virtualList\n  }\n};\n</script>\n\n<style scoped>\nv-card-title {\n  margin: 100px;\n}\n.list {\n  max-height: 350px;\n  overflow-y: auto;\n}\n.title {\n  margin-top: 10px;\n}\n.list-item-box {\n  text-align: left;\n}\n.web-link {\n  text-decoration: underline;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SearchView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SearchView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SearchView.vue?vue&type=template&id=5eb40c2a&scoped=true&\"\nimport script from \"./SearchView.vue?vue&type=script&lang=js&\"\nexport * from \"./SearchView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SearchView.vue?vue&type=style&index=0&id=5eb40c2a&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5eb40c2a\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"app\">\n    <v-app :dark=\"setTheme\" :style=\"{background: $vuetify.theme.themes['dark'].background}\">\n      <!--Header Section-->\n      <v-container fluid>\n        <v-switch\n          color=\"primary\"\n          :label=\"selectedTheme\"\n          v-model=\"goDark\"\n          class=\"switch\"\n        ></v-switch>\n        <Header msg=\"Cell Network Viewer\" />\n      </v-container>\n\n      <!--Body Section-->\n      <v-container bg grid-list-md fluid>\n        <v-layout row wrap>\n          <!-- \n          Search View \n          -->\n          <v-flex md5>\n            <SearchView :cellData=\"this.loadedData\"/>\n          </v-flex>\n          <!-- \n          Graph View \n          -->\n          <v-flex md7>\n            <Graph :cellData=\"this.loadedData\" />\n          </v-flex>\n        </v-layout>\n        <v-layout row wrap>\n          <!-- \n          Gene Details View \n          -->\n          <v-flex md5>\n            <GeneDetails />\n          </v-flex>\n          <!-- \n          Cell Details View \n          -->\n          <v-flex md7>\n            <CellDetails />\n          </v-flex>\n        </v-layout>\n      </v-container>\n    </v-app>\n  </div>\n</template>\n\n<script>\nimport CellDetails from \"@/components/CellDetails.vue\";\nimport Header from \"@/components/TheHeader.vue\";\nimport GeneDetails from \"@/components/GeneDetails.vue\";\nimport Graph from \"@/components/CellGraph.vue\";\nimport SearchView from \"@/components/SearchView.vue\";\n\nimport * as d3 from \"d3\";\n\nexport default {\n  name: \"app\",\n  components: {\n    Header,\n    Graph,\n    SearchView,\n    CellDetails,\n    GeneDetails\n  },\n  mounted() {\n    this.fetchData();\n  },\n  data: function() {\n    return {\n      loadedData: {},\n      goDark: true\n    };\n  },\n  methods: {\n    // Fetch cell type graph data\n    async fetchData() {\n      this.loadedData = await d3.json(\"./cell_type_graph.json\");\n    }\n  },\n  computed: {\n    // Display which theme is currently on\n    selectedTheme() {\n      return this.goDark ? \"Dark Theme\" : \"Light Theme\";\n    },\n    // Toggle between light and dark theme\n    setTheme() {\n      if (this.goDark == true) {\n        this.$store.dispatch(\"changeCurrentThemeMode\", 'dark');\n        return (this.$vuetify.theme.dark = true);\n      } else {\n        this.$store.dispatch(\"changeCurrentThemeMode\", 'light');\n        return (this.$vuetify.theme.dark = false);\n      }\n    }\n  }\n};\n</script>\n\n<style>\n#app {\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n}\n.switch {\n  margin: 20px;\n}\na,\nh3 {\n  color: #42b983;\n}\n.index {\n  color: #42b983;\n  font-weight: bold;\n}\n@import url(\"https://fonts.googleapis.com/css?family=BioRhyme&display=swap\");\n.view-title {\n  font-family: \"BioRhyme\", serif;\n}\n.sub-title {\n  font-weight: bold;\n  text-align: left;\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=1f4b877e&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from \"vue\";\nimport Vuex from \"vuex\";\n\nVue.use(Vuex);\n\nconst state = {\n  cellDetails: [],\n  cellSelected: [],\n  cellSelectedPrevious: \"\",\n  currentThemeMode: \"dark\",\n  topGeneCellList: [],\n  topGeneCellListPrevious: [],\n  geneSearchOption: \"default\",\n  geneSelected: \"\",\n  optionSelected: \"default\",\n  cellInGeneSearch: \"\",\n  geneSearchFromSearchView: \"\",\n  geneSearch: \"\",\n  search: \"\"\n};\n\nconst mutations = {\n  ADD_TO_CELL_DETAILS(state, payload) {\n    state.cellDetails.push(payload);\n  },\n  CHANGE_CELL_DETAILS(state, payload) {\n    state.cellDetails = payload;\n  },\n  ADD_TO_CELL_SELECTED(state, payload) {\n    state.cellSelected.push(payload);\n  },\n  CHANGE_CELL_SELECTED(state, payload) {\n    state.cellSelected = payload;\n  },\n  POP_FROM_CELL_SELECTED(state) {\n    state.cellSelected.pop();\n  },\n  CHANGE_CURRENT_THEME_MODE(state, payload) {\n    state.currentThemeMode = payload;\n  },\n  ADD_TO_TOP_GENE_CELL_LIST(state, payload) {\n    state.topGeneCellList.push(payload);\n  },\n  CHANGE_TOP_GENE_CELL_LIST(state, payload) {\n    state.topGeneCellList = payload;\n  },\n  CHANGE_TOP_GENE_CELL_LIST_PREVIOUS(state, payload) {\n    state.topGeneCellListPrevious = payload;\n  },\n  CHANGE_CELL_SELECTED_PREVIOUS(state, payload) {\n    state.cellSelectedPrevious = payload;\n  },\n  CHANGE_GENE_SEARCH_OPTION(state, payload) {\n    state.geneSearchOption = payload;\n  },\n  CHANGE_GENE_SELECTED(state, payload) {\n    state.geneSelected = payload;\n  },\n  CHANGE_CELL_IN_GENE_SEARCH(state, payload) {\n    state.cellInGeneSearch = payload;\n  },\n  CHANGE_GENE_SEARCH(state, payload) {\n    state.geneSearch = payload;\n  },\n  CHANGE_GENE_SEARCH_FROM_SEARCH_VIEW(state, payload) {\n    state.geneSearchFromSearchView = payload;\n  },\n  CHANGE_SEARCH(state, payload) {\n    state.search = payload;\n  },\n  CHANGE_OPTION(state, payload) {\n    state.optionSelected = payload;\n  }\n};\n\nconst actions = {\n  addToCellDetails(context, cellDetails) {\n    context.commit(\"ADD_TO_CELL_DETAILS\", cellDetails);\n  },\n  changeCellDetails(context, cellDetails) {\n    context.commit(\"CHANGE_CELL_DETAILS\", cellDetails);\n  },\n  addToCellSelected(context, cellSelected) {\n    context.commit(\"ADD_TO_CELL_SELECTED\", cellSelected);\n  },\n  changeCellSelected(context, cellSelected) {\n    context.commit(\"CHANGE_CELL_SELECTED\", cellSelected);\n  },\n  popFromCellSelected(context) {\n    context.commit(\"POP_FROM_CELL_SELECTED\");\n  },\n  changeCurrentThemeMode(context, mode) {\n    context.commit(\"CHANGE_CURRENT_THEME_MODE\", mode)\n  },\n  addToTopGeneCellList(context, topGeneCellList) {\n    context.commit(\"ADD_TO_TOP_GENE_CELL_LIST\", topGeneCellList);\n  },\n  changeTopGeneCellList(context, topGeneCellList) {\n    context.commit(\"CHANGE_TOP_GENE_CELL_LIST\", topGeneCellList);\n  },\n  changeTopGeneCellListPrevious(context, topGeneCellListPrevious) {\n    context.commit(\"CHANGE_TOP_GENE_CELL_LIST_PREVIOUS\", topGeneCellListPrevious);\n  },\n  changeCellSelectedPrevious(context, cellSelectedPrevious) {\n    context.commit(\"CHANGE_CELL_SELECTED_PREVIOUS\", cellSelectedPrevious);\n  },\n  changeGeneSearchOption(context, geneSearchOption) {\n    context.commit(\"CHANGE_GENE_SEARCH_OPTION\", geneSearchOption);\n  },\n  changeGeneSelected(context, geneSelected) {\n    context.commit(\"CHANGE_GENE_SELECTED\", geneSelected);\n  },\n  changeCellInGeneSearch(context, searchContent) {\n    context.commit(\"CHANGE_CELL_IN_GENE_SEARCH\", searchContent);\n  },\n  changeGeneSearch(context, searchContent) {\n    context.commit(\"CHANGE_GENE_SEARCH\", searchContent);\n  },\n  changeGeneSearchFromSearchView(context, searchContent) {\n    context.commit(\"CHANGE_GENE_SEARCH_FROM_SEARCH_VIEW\", searchContent);\n  },\n  changeSearch(context, searchContent) {\n    context.commit(\"CHANGE_SEARCH\", searchContent);\n  },\n  changeOption(context, optionSelected) {\n    context.commit(\"CHANGE_OPTION\", optionSelected);\n  }\n};\n\nconst getters = {\n  getCellDetails(state) {\n    return state.cellDetails;\n  },\n  getCellSelected(state) {\n    return state.cellSelected;\n  },\n  getTopGeneCellList(state) {\n    return state.topGeneCellList;\n  },\n  getTopGeneCellListPrevious(state) {\n    return state.topGeneCellListPrevious;\n  },\n  getCellSelectedPrevious(state) {\n    return state.cellSelectedPrevious;\n  },\n  getCurrentThemeMode(state) {\n    return state.currentThemeMode;\n  },\n  getGeneSearchOption(state) {\n    return state.geneSearchOption;\n  },\n  getGeneSelected(state) {\n    return state.geneSelected;\n  },\n  getCellInGeneSearch(state) {\n    return state.cellInGeneSearch;\n  },\n  getGeneSearch(state) {\n    return state.geneSearch;\n  },\n  getGeneSearchFromSearchView(state) {\n    return state.geneSearchFromSearchView;\n  },\n  getSearch(state) {\n    return state.search;\n  },\n  getOption(state) {\n    return state.optionSelected;\n  }\n};\n\nexport default new Vuex.Store({\n  state,\n  mutations,\n  actions,\n  getters\n});\n","import \"material-design-icons-iconfont/dist/material-design-icons.css\";\nimport 'vuetify/dist/vuetify.min.css';\n\nimport Vue from 'vue';\nimport App from './App.vue';\nimport VueLodash from 'vue-lodash';\nimport Vuetify from 'vuetify';\nimport store from './store.js';\n\nVue.config.productionTip = false;\n\nconst options = { name: 'lodash' }; // customize the way you want to call it\nVue.use(VueLodash, options);\n\nconst vuetifyOptions = {\n  iconfont: 'md',\n  theme: {\n    dark: true,\n    themes: {\n      dark: {\n        primary: '#42b983',\n        secondary: '#b0bec5',\n        accent: '#8c9eff',\n        error: '#b71c1c'\n      },\n      light: {\n        primary: '#42b983',\n        secondary: '#b0bec5',\n        accent: '#8c9eff',\n        error: '#b71c1c',\n        background: '#EFE9E5',\n      }\n    }\n  }\n};\n\nVue.use(Vuetify);\n\nnew Vue({\n  render: h => h(App),\n  store,\n  vuetify: new Vuetify(vuetifyOptions)\n}).$mount('#app');\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CellDetails.vue?vue&type=style&index=0&id=372a0b49&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CellDetails.vue?vue&type=style&index=0&id=372a0b49&scoped=true&lang=css&\""],"sourceRoot":""}