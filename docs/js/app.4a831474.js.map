{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?7e02","webpack:///./public/cello.svg","webpack:///./src/App.vue?940d","webpack:///./src/components/TheHeader.vue?27c2","webpack:///src/components/TheHeader.vue","webpack:///./src/components/TheHeader.vue?0263","webpack:///./src/components/TheHeader.vue","webpack:///./src/components/SearchView.vue?5712","webpack:///src/components/SearchView.vue","webpack:///./src/components/SearchView.vue?50ea","webpack:///./src/components/SearchView.vue?0461","webpack:///./src/components/CellGraph.vue?f9f0","webpack:///./src/config.js","webpack:///./src/util.js","webpack:///./src/apis/utils.js","webpack:///./src/apis/graph.js","webpack:///./src/apis/draw.js","webpack:///./src/apis/structure.js","webpack:///./src/apis/tangler.js","webpack:///./src/apis/layout.js","webpack:///src/components/CellGraph.vue","webpack:///./src/components/CellGraph.vue?92f0","webpack:///./src/components/CellGraph.vue","webpack:///./src/components/GeneDetails.vue?7526","webpack:///src/components/GeneDetails.vue","webpack:///./src/components/GeneDetails.vue?3747","webpack:///./src/components/GeneDetails.vue?334f","webpack:///./src/components/CellDetails.vue?69f5","webpack:///src/components/CellDetails.vue","webpack:///./src/components/CellDetails.vue?29d7","webpack:///./src/components/CellDetails.vue?a457","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue?bff9","webpack:///./src/store/modules/cellType.js","webpack:///./src/store/mutations/cellTypeMutations.js","webpack:///./src/store/actions/cellTypeActions.js","webpack:///./src/store/modules/gene.js","webpack:///./src/store/mutations/geneMutations.js","webpack:///./src/store/actions/geneActions.js","webpack:///./src/store/index.js","webpack:///./src/main.js","webpack:///./src/components/CellDetails.vue?8723","webpack:///./src/components/SearchView.vue?27b5","webpack:///./src/components/GeneDetails.vue?5c56"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","Appvue_type_template_id_94634db6_render","_vm","this","_h","$createElement","_c","_self","attrs","id","dark","setTheme","fluid","staticClass","color","src","label","selectedTheme","model","callback","$$v","goDark","expression","msg","bg","grid-list-md","row","wrap","md5","cell-data","$store","getters","getCellTypeGraphStructureData","md7","staticRenderFns","TheHeadervue_type_template_id_42db0153_scoped_true_render","align-center","md12","center","_v","_s","TheHeadervue_type_template_id_42db0153_scoped_true_staticRenderFns","TheHeadervue_type_script_lang_js_","props","type","String","default","components_TheHeadervue_type_script_lang_js_","component","componentNormalizer","TheHeader","SearchViewvue_type_template_id_6b90ec6c_scoped_true_render","max-height","$vuetify","theme","themes","getCurrentThemeMode","background","fixed-tabs","background-color","style","md9","sm12","append-icon","single-line","hide-details","hide-no-data","search","md3","items","sortOptions","on","input","sortBasedOnOption","option","class","listHeight","loaded","listLocalCopy","_l","keyValuePair","index","click","$event","setSelectedCellTypeList","offset-md1","_e","md6","nativeOn","stopPropagation","neighbor","dense","geneSearchEntry","size","remain","item","three-line","setGeneItem","loadedGeneIdToNameDict","navigateToGenePage","loadedGeneIdToDescriptionDict","SearchViewvue_type_template_id_6b90ec6c_scoped_true_staticRenderFns","SearchViewvue_type_script_lang_js_","components","virtual-list","dist_default","a","cellData","message","cardHeight","getCardHeight","detailItem","listSize","loadedDictData","loadedGeneData","computed","filteredData","getSearch","searchEntry","toLowerCase","filter","cell","caseInsesitiveCell","includes","filteredGeneData","_this","globalThis","getGeneSearchEntry","gene","undefined","geneSelected","getGeneSelected","getCellTypeSortOption","set","dispatch","getCellTypeSearchEntryInSearchView","watch","generateListCopy","_i","_Object$entries","entries","_Object$entries$_i","slicedToArray","geneArr","cellName","geneValue","mounted","fetchData","methods","_fetchData","asyncToGenerator","regeneratorRuntime","mark","_callee","_context","prev","next","d3","sent","stop","arguments","curList","getSelectedCellTypeList","pop","originalList","lodash_default","cloneDeep","open","sortBy","list","components_SearchViewvue_type_script_lang_js_","SearchView_component","SearchView","CellGraphvue_type_template_id_0f921535_scoped_true_render","maxCardHeight","cellType1","cellType2","ref","CellGraphvue_type_template_id_0f921535_scoped_true_staticRenderFns","FIRST_ROW_CARD_MAX_HEIGHT","MAX_SELECTED_CELL_TYPE_NUMBER","CELL_TYPE_DEFAULT_COLOR","CELL_TYPE_CHANGED_COLOR","NODE_RADIUS_DEFAULT","NODE_RADIUS_POPPED","COLOR_RAMP","FORMAT_TO_ID","split","join","replace","GENERATE_LIST_COPY","_","average","lst","sum","reduce","cur","avg","listOfLists","len","array","Array","simpleSorter","graph","hlevel","pass","levels","getLevels","cmp","b","primaryParent","console","log","concat","ai","levelIdx","bi","parents","ap","map","bp","children","ac","bc","dalevel","idx","forEach","level","li","sort","nodes","primaryChildren","Vertex","params","classCallCheck","height","width","istree","phantom","depth","longest","ancestors","Set","descendentAncestors","levelrank","x","y","grandkidIndex","twidth","Link","source","target","Graph","links","constraints","groups","analysis","createClass","nodefunc","nodupes","results","queue","roots","maxLongest","Math","max","toConsumableArray","node","orderedNodes","child","pCount","npars","root","expand","tree","nchildren","nnode","strifyNodes","field","v","phantomGraph","longLinks","link","oldLinks","indexOf","analyzeGraph","_loop","_loop2","newLong","isTree","breadthFirst","ancestor","add","drawGraph","paths","selector","vueThis","nodeRadius","bvert","bezierVert","svg","append","attr","transform","cseg","x1","y1","x2","y2","bv","pathId","util","nodeId","handleMouseOver","d3plusTooltip","thead","position","render","handleMouseOut","remove","handleMouseClick","selectedCellName","nodeClass","nodeColor","nodeName","nodeStroke","selectAll","enter","pstr","drawPhantoms","text","jsonToGraph","keys","sourceName","targetName","maxChildren","parent","parentKids","treeLayout","topmargin","levelSep","vertexRadius","phantomRadius","spacer","space","minwid","left","ni","goalX","maxX","min","CellGraphvue_type_script_lang_js_","keyValueDict","pathsDict","selectedCellTypeList","cellTypesThatHaveSelectedGeneAsTopValue","getCellTypesThatHaveSelectedGeneAsTopValue","util_GENERATE_LIST_COPY","toString","showGraph","svgClear","$refs","select","transition","svgHighlight","dict","cellTypesThatFitCriteria","cellType","cellValues","geneExist","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","done","geneName","err","return","svgFade","svgEdgeCase1","svgEdgeCase2","svgEdgeCase3","each","linkArray","has","linkArrayEdgeCases","edgeCaseCheck","components_CellGraphvue_type_script_lang_js_","CellGraph_component","CellGraph","GeneDetailsvue_type_template_id_38d9dd14_scoped_true_render","medium","justify-right","removeGeneDetails","geneNotEmpty","geneSelectedPresentedName","geneSelectedDescription","top","scopedSlots","_u","fn","_g","setGeneIndexBarChartRatio","setGeneIndexBarChartColor","rounded","striped","reactive","maxGeneMagnitude","toFixed","fixedGeneDigits","GeneDetailsvue_type_template_id_38d9dd14_scoped_true_staticRenderFns","GeneDetailsvue_type_script_lang_js_","cellTypeNames","filteredList","filteredGeneCellList","getGeneSortOption","returnToDefaultList","getSelectedGene","getCellTypeSearchEntryInGeneDetailsView","filterBySearchList","element","lowerCaseElement","_i2","_Object$entries2","_Object$entries2$_i","abs","topGeneDataExist","topGenes","geneValues","columnIndex","components_GeneDetailsvue_type_script_lang_js_","GeneDetails_component","GeneDetails","CellDetailsvue_type_template_id_6df1d2d2_scoped_true_render","popFromSelectedCellTypeList","selectedCellTypeListNotEmpty","geneDataExist","sm6","geneNameOnHover","setOverlapGeneBackgroundColor","input-value","mouseover","setGeneNameOnHover","mouseleave","clearGeneNameOnHover","sm5","sm7","CellDetailsvue_type_template_id_6df1d2d2_scoped_true_staticRenderFns","CellDetailsvue_type_script_lang_js_","cardHighlight","currentCellTypes","getDefaultCellTypes","sortCellTypeList","dynamicData","geneCellCopy1","getCellDetails","resultArr","cellTypes","cell1FilteredArray","cell2FilteredArray","onHover","cellArr","geneDataColumnOne","_geneData","Number","geneCellCopy2","geneDataColumnTwo","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","geneData","itr","cellTypeNameIndexDict","cellTypeName","cellTypeNameInColumnTwo","overlapCellTypeIndex","swapEntryPositions","indexA","indexB","temp","geneCellCopy","indexGeneValue","parseFloat","numberValue","filteredDataSecondRow","entry","geneValueObject","filteredDataFirstRow","_entry","_geneValueObject","geneIndexInFirstRow","components_CellDetailsvue_type_script_lang_js_","CellDetails_component","CellDetails","Appvue_type_script_lang_js_","Header","cellTypeGraphStructureData","src_Appvue_type_script_lang_js_","App_component","App","cellTypeStates","cell_type_details_list","selected_cell_type_list","cell_type_graph_structure_data","cell_type_search_entry_in_search_view","cell_type_search_entry_in_gene_details_view","cell_type_sort_option","cell_types_that_have_selected_gene_as_top_value","cellTypeStatesGetters","getCellTypeList","state","cellTypeModule","cellTypeMutations","ADD_TO_CELL_TYPE_DETAILS_LIST","payload","CHANGE_CELL_TYPE_DETAILS_LIST","ADD_TO_SELECTED_CELL_TYPE_LIST","CHANGE_SELECTED_CELL_TYPE_LIST","POP_FROM_SELECTED_CELL_TYPE_LIST","CHANGE_CELL_TYPE_GRAPH_STRUCTURE_DATA","CHANGE_CELL_TYPE_SEARCH_ENTRY_IN_SEARCH_VIEW","CHANGE_CELL_TYPE_SEARCH_ENTRY_IN_GENE_DETAILS_VIEW","CHANGE_CELL_TYPE_SORT_OPTION","ADD_TO_CELL_TYPES_THAT_HAVE_SELECTED_GENE_AS_TOP_VALUE","CHANGE_CELL_TYPES_THAT_HAVE_SELECTED_GENE_AS_TOP_VALUE","cellTypeActions","addToCellTypeDetailsList","context","commit","changeCellTypeDetailsList","addToSelectedCellTypeList","changeSelectedCellTypeList","changeCellTypeGraphStructureData","changeCellTypeSearchEntryInSearchView","searchContent","changeCellTypeSearchEntryInGeneDetailsView","changeCellTypeSortOption","cellTypeSortOption","addToCellTypesThatHaveSelectedGeneAsTopValue","changeCellTypesThatHaveSelectedGeneAsTopValue","geneStates","gene_search_entry","gene_sort_option","selected_gene","geneGetters","geneModule","geneMutations","CHANGE_GENE_SEARCH_ENTRY","CHANGE_GENE_SORT_OPTION","CHANGE_SELECTED_GENE","geneActions","changeGeneSearchEntry","changeGeneSortOption","geneSortOption","changeSelectedGene","selectedGene","Vue","use","Vuex","_objectSpread","currentThemeMode","mutations","CHANGE_CURRENT_THEME_MODE","actions","changeCurrentThemeMode","store","Store","config","productionTip","performance","options","VueLodash","vuetifyOptions","iconfont","primary","secondary","accent","error","light","customProperties","Vuetify","h","vuetify","$mount","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_CellDetails_vue_vue_type_style_index_0_id_6df1d2d2_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_CellDetails_vue_vue_type_style_index_0_id_6df1d2d2_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SearchView_vue_vue_type_style_index_0_id_6b90ec6c_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SearchView_vue_vue_type_style_index_0_id_6b90ec6c_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_GeneDetails_vue_vue_type_style_index_0_id_38d9dd14_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_GeneDetails_vue_vue_type_style_index_0_id_38d9dd14_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/app.4a831474.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","module.exports = __webpack_public_path__ + \"img/cello.6361d740.svg\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('v-app',{attrs:{\"dark\":_vm.setTheme}},[_c('v-container',{attrs:{\"fluid\":\"\"}},[_c('v-layout',[_c('img',{staticClass:\"logo\",attrs:{\"color\":\"primary\",\"src\":require(\"../public/cello.svg\")}}),_c('v-spacer'),_c('v-switch',{staticClass:\"switch\",attrs:{\"color\":\"primary\",\"label\":_vm.selectedTheme},model:{value:(_vm.goDark),callback:function ($$v) {_vm.goDark=$$v},expression:\"goDark\"}})],1),_c('Header',{attrs:{\"msg\":\"CellO Viewer\"}})],1),_c('v-container',{attrs:{\"bg\":\"\",\"grid-list-md\":\"\",\"fluid\":\"\"}},[_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"md5\":\"\"}},[_c('SearchView',{attrs:{\"cell-data\":this.$store.getters.getCellTypeGraphStructureData}})],1),_c('v-flex',{attrs:{\"md7\":\"\"}},[_c('Graph',{attrs:{\"cell-data\":this.$store.getters.getCellTypeGraphStructureData}})],1)],1),_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"md5\":\"\"}},[_c('GeneDetails')],1),_c('v-flex',{attrs:{\"md7\":\"\"}},[_c('CellDetails')],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\",\"align-center\":\"\"}},[_c('v-flex',{attrs:{\"md12\":\"\",\"center\":\"\"}},[_c('h1',{staticClass:\"view-title\"},[_vm._v(\"🦠 \"+_vm._s(_vm.msg)+\" 🧬\")])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-layout row wrap align-center>\n    <v-flex md12 center>\n      <h1 class=\"view-title\">&#x1F9A0;&nbsp;{{ msg }}&nbsp;&#x1F9EC;</h1>\n    </v-flex>\n  </v-layout>\n</template>\n\n<script>\nexport default {\n  name: \"AppHeader\",\n\n  props: {\n    msg: {\n      type: String,\n      default: \"Welcome\"\n    }\n  }\n};\n</script>\n\n<style scoped></style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TheHeader.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TheHeader.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TheHeader.vue?vue&type=template&id=42db0153&scoped=true&\"\nimport script from \"./TheHeader.vue?vue&type=script&lang=js&\"\nexport * from \"./TheHeader.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"42db0153\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\",\"align-center\":\"\"}},[_c('v-flex',{attrs:{\"md12\":\"\"}},[_c('v-card',{attrs:{\"max-height\":\"600\",\"color\":_vm.$vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n          .background}},[_c('v-card-title',{staticClass:\"justify-left\"},[_c('h4',{staticClass:\"view-title\"},[_vm._v(\"\\n          Search View\\n        \")])]),_c('v-tabs',{attrs:{\"fixed-tabs\":\"\",\"background-color\":_vm.$vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n            .background}},[_c('v-tab',[_vm._v(\"Cell Centric\")]),_c('v-tab',[_vm._v(\"Gene Centric\")]),_c('v-tab-item',[_c('v-card-text',{style:({\n              background:\n                _vm.$vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n                  .background\n            })},[_c('v-layout',[_c('v-flex',{attrs:{\"md9\":\"\",\"sm12\":\"\"}},[_c('v-text-field',{attrs:{\"append-icon\":\"search\",\"label\":\"search\",\"single-line\":\"\",\"hide-details\":\"\",\"hide-no-data\":\"\"},model:{value:(_vm.search),callback:function ($$v) {_vm.search=$$v},expression:\"search\"}})],1),_c('v-spacer'),_c('v-flex',{attrs:{\"md3\":\"\",\"sm12\":\"\"}},[_c('v-select',{attrs:{\"items\":_vm.sortOptions,\"label\":\"sort\"},on:{\"input\":_vm.sortBasedOnOption},model:{value:(_vm.option),callback:function ($$v) {_vm.option=$$v},expression:\"option\"}})],1)],1),_c('v-layout',{staticClass:\"list\",class:{ 'max-height': _vm.listHeight },attrs:{\"row\":\"\",\"wrap\":\"\"}},[(_vm.loaded && _vm.listLocalCopy)?_c('v-flex',{attrs:{\"md12\":\"\"}},[_c('v-list',{style:({\n                    background:\n                      _vm.$vuetify.theme.themes[\n                        this.$store.getters.getCurrentThemeMode\n                      ].background\n                  })},_vm._l((_vm.filteredData),function(keyValuePair,index){return _c('v-list-item',{key:index,on:{\"click\":function($event){return _vm.setSelectedCellTypeList(keyValuePair[0])}}},[_c('v-layout',[(keyValuePair[0] != null)?_c('v-flex',{staticClass:\"index\",attrs:{\"md3\":\"\",\"offset-md1\":\"\"}},[_vm._v(\"\\n                        \"+_vm._s(keyValuePair[0])+\": \\n                      \")]):_vm._e(),(keyValuePair[1].length == 0)?_c('v-flex',{attrs:{\"md6\":\"\",\"offset-md1\":\"\"}},[_c('div',{staticClass:\"fade values\"},[_vm._v(\"No direct children\")])]):(keyValuePair[1].length == 1)?_c('v-flex',{attrs:{\"md6\":\"\",\"offset-md1\":\"\"}},[_c('div',{staticClass:\"values\"},[_vm._v(_vm._s(keyValuePair[1][0]))])]):_c('v-flex',{attrs:{\"md6\":\"\",\"offset-md1\":\"\"}},[_c('v-expansion-panels',{staticClass:\"values\",nativeOn:{\"click\":function($event){$event.stopPropagation();}}},[_c('v-expansion-panel',{attrs:{\"color\":\"primary\"}},[_c('v-expansion-panel-header',[_vm._v(\"\\n                              \"+_vm._s(keyValuePair[1].length + \" direct children\")+\"\\n                            \")]),_c('v-expansion-panel-content',_vm._l((keyValuePair[1]),function(neighbor,index){return _c('v-list',{key:index,attrs:{\"dense\":\"\"}},[(index == keyValuePair[1].length - 1)?_c('v-list-item',{on:{\"click\":function($event){return _vm.setSelectedCellTypeList(neighbor)}}},[_vm._v(\"\\n                                  \"+_vm._s(neighbor)+\"\\n                                \")]):_c('div',[_c('v-list-item',{on:{\"click\":function($event){return _vm.setSelectedCellTypeList(neighbor)}}},[_vm._v(_vm._s(neighbor)+\",\")])],1)],1)}),1)],1)],1)],1)],1)],1)}),1)],1):_vm._e()],1)],1)],1),_c('v-tab-item',[_c('v-card-text',[_c('v-layout',[_c('v-flex',{attrs:{\"md12\":\"\",\"sm12\":\"\"}},[_c('v-text-field',{attrs:{\"append-icon\":\"search\",\"label\":\"search\",\"single-line\":\"\",\"hide-details\":\"\",\"hide-no-data\":\"\"},model:{value:(_vm.geneSearchEntry),callback:function ($$v) {_vm.geneSearchEntry=$$v},expression:\"geneSearchEntry\"}})],1)],1),_c('virtual-list',{staticClass:\"list\",attrs:{\"size\":40,\"remain\":10}},_vm._l((_vm.filteredGeneData),function(item){return _c('v-list-item',{key:item.id,attrs:{\"three-line\":\"\"},on:{\"click\":function($event){return _vm.setGeneItem(item)}}},[_c('v-list-item-content',{staticClass:\"list-item-box\"},[_c('v-list-item-title',[_vm._v(\"\\n                    \"+_vm._s(_vm.loadedGeneIdToNameDict[item])+\": \\n                  \")]),_c('v-list-item-subtitle',[_c('a',{staticClass:\"web-link\",on:{\"click\":function($event){return _vm.navigateToGenePage(item)}}},[_vm._v(\"\\n                      \"+_vm._s(item)+\"\\n                    \")])]),_c('v-list-item-subtitle',[_vm._v(\"\\n                    \"+_vm._s(_vm.loadedGeneIdToDescriptionDict[item])+\"\\n                  \")])],1)],1)}),1)],1)],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-layout row wrap align-center>\n    <v-flex md12>\n      <v-card\n        max-height=\"600\"\n        :color=\"\n          $vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n            .background\n        \"\n      >\n        <v-card-title class=\"justify-left\">\n          <h4 class=\"view-title\">\n            Search View\n          </h4>\n        </v-card-title>\n\n        <v-tabs\n          fixed-tabs\n          :background-color=\"\n            $vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n              .background\n          \"\n        >\n          <v-tab>Cell Centric</v-tab>\n          <v-tab>Gene Centric</v-tab>\n          <!-- Cell Centric -->\n          <v-tab-item>\n            <v-card-text\n              :style=\"{\n                background:\n                  $vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n                    .background\n              }\"\n            >\n              <v-layout>\n                <v-flex md9 sm12>\n                  <v-text-field\n                    v-model=\"search\"\n                    append-icon=\"search\"\n                    label=\"search\"\n                    single-line\n                    hide-details\n                    hide-no-data\n                  />\n                </v-flex>\n                <v-spacer />\n                <v-flex md3 sm12>\n                  <v-select\n                    v-model=\"option\"\n                    :items=\"sortOptions\"\n                    label=\"sort\"\n                    @input=\"sortBasedOnOption\"\n                  />\n                </v-flex>\n              </v-layout>\n              <v-layout\n                row\n                wrap\n                class=\"list\"\n                :class=\"{ 'max-height': listHeight }\"\n              >\n                <v-flex v-if=\"loaded && listLocalCopy\" md12>\n                  <v-list\n                    :style=\"{\n                      background:\n                        $vuetify.theme.themes[\n                          this.$store.getters.getCurrentThemeMode\n                        ].background\n                    }\"\n                  >\n                    <v-list-item\n                      v-for=\"(keyValuePair, index) in filteredData\"\n                      :key=\"index\"\n                      @click=\"setSelectedCellTypeList(keyValuePair[0])\"\n                    >\n                      <v-layout>\n                        <!-- Cell Type Keyword -->\n                        <v-flex\n                          v-if=\"keyValuePair[0] != null\"\n                          md3\n                          offset-md1\n                          class=\"index\"\n                        >\n                          {{ keyValuePair[0] }}:&nbsp;\n                        </v-flex>\n\n                        <!-- Case of No Children -->\n                        <v-flex\n                          v-if=\"keyValuePair[1].length == 0\"\n                          md6\n                          offset-md1\n                        >\n                          <div class=\"fade values\">No direct children</div>\n                        </v-flex>\n\n                        <!-- Case of Only One Children -->\n                        <v-flex\n                          v-else-if=\"keyValuePair[1].length == 1\"\n                          md6\n                          offset-md1\n                        >\n                          <div class=\"values\">{{ keyValuePair[1][0] }}</div>\n                        </v-flex>\n\n                        <!-- Case of More Than One Children -->\n                        <v-flex v-else md6 offset-md1>\n                          <v-expansion-panels class=\"values\" @click.native.stop>\n                            <v-expansion-panel color=\"primary\">\n                              <v-expansion-panel-header>\n                                {{\n                                  keyValuePair[1].length + \" direct children\"\n                                }}\n                              </v-expansion-panel-header>\n                              <v-expansion-panel-content>\n                                <v-list\n                                  v-for=\"(neighbor, index) in keyValuePair[1]\"\n                                  :key=\"index\"\n                                  dense\n                                >\n                                  <v-list-item\n                                    v-if=\"index == keyValuePair[1].length - 1\"\n                                    @click=\"setSelectedCellTypeList(neighbor)\"\n                                  >\n                                    {{ neighbor }}\n                                  </v-list-item>\n                                  <div v-else>\n                                    <v-list-item\n                                      @click=\"setSelectedCellTypeList(neighbor)\"\n                                      >{{ neighbor }},</v-list-item\n                                    >\n                                  </div>\n                                </v-list>\n                              </v-expansion-panel-content>\n                            </v-expansion-panel>\n                          </v-expansion-panels>\n                        </v-flex>\n                      </v-layout>\n                    </v-list-item>\n                  </v-list>\n                </v-flex>\n              </v-layout>\n            </v-card-text>\n          </v-tab-item>\n          <!-- Gene Centric Search View -->\n          <v-tab-item>\n            <v-card-text>\n              <v-layout>\n                <v-flex md12 sm12>\n                  <v-text-field\n                    v-model=\"geneSearchEntry\"\n                    append-icon=\"search\"\n                    label=\"search\"\n                    single-line\n                    hide-details\n                    hide-no-data\n                  />\n                </v-flex>\n              </v-layout>\n              <virtual-list :size=\"40\" :remain=\"10\" class=\"list\">\n                <v-list-item\n                  v-for=\"item of filteredGeneData\"\n                  :key=\"item.id\"\n                  three-line\n                  @click=\"setGeneItem(item)\"\n                >\n                  <v-list-item-content class=\"list-item-box\">\n                    <v-list-item-title>\n                      {{ loadedGeneIdToNameDict[item] }}:&nbsp;\n                    </v-list-item-title>\n                    <v-list-item-subtitle>\n                      <a class=\"web-link\" @click=\"navigateToGenePage(item)\">\n                        {{ item }}\n                      </a>\n                    </v-list-item-subtitle>\n                    <v-list-item-subtitle>\n                      {{ loadedGeneIdToDescriptionDict[item] }}\n                    </v-list-item-subtitle>\n                  </v-list-item-content>\n                </v-list-item>\n              </virtual-list>\n            </v-card-text>\n          </v-tab-item>\n        </v-tabs>\n      </v-card>\n    </v-flex>\n  </v-layout>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\nimport virtualList from \"vue-virtual-scroll-list\";\nimport _ from \"lodash\";\n\nexport default {\n  name: \"CellList\",\n\n  components: {\n    \"virtual-list\": virtualList\n  },\n\n  props: {\n    cellData: {\n      type: Object,\n      default: function() {\n        return { message: \"cell data is here\" };\n      }\n    }\n  },\n\n  data() {\n    return {\n      cardHeight: this.$store.getters.getCardHeight,\n      detailItem: [],\n      listHeight: \"500px\",\n      listLocalCopy: [],\n      listSize: 2, // Put this in store at cleanup phase\n      loaded: false,\n      loadedDictData: {},\n      loadedGeneData: [],\n      loadedGeneIdToNameDict: {},\n      loadedGeneIdToDescriptionDict: {},\n      sortOptions: [\"default\", \"alphabetical\"]\n    };\n  },\n\n  computed: {\n    filteredData() {\n      if (this.$store.getters.getSearch === \"\") {\n        return this.listLocalCopy;\n      } else {\n        let searchEntry = this.search.toLowerCase();\n\n        return this.listLocalCopy.filter(cell => {\n          let caseInsesitiveCell = cell[0].toLowerCase();\n          \n          return caseInsesitiveCell.includes(searchEntry);\n        });\n      }\n    },\n\n    /**\n     * Filtered gene data for gene centric view\n     */\n    filteredGeneData() {\n      let globalThis = this;\n\n      if (this.$store.getters.getGeneSearchEntry === \"\") {\n        return this.loadedGeneData;\n      } else {\n        return this.loadedGeneData.filter(gene => {\n          if (globalThis.loadedGeneIdToNameDict[gene] == undefined) {\n            return;\n          }\n          return globalThis.loadedGeneIdToNameDict[gene].includes(\n            this.geneSearchEntry\n          );\n        });\n      }\n    },\n\n    geneSelected: {\n      get() {\n        return this.$store.getters.getGeneSelected;\n      }\n    },\n\n    option: {\n      get() {\n        return this.$store.getters.getCellTypeSortOption;\n      },\n      set(option) {\n        this.$store.dispatch(\"changeCellTypeSortOption\", option);\n      }\n    },\n\n    search: {\n      get() {\n        return this.$store.getters.getCellTypeSearchEntryInSearchView;\n      },\n      set(input) {\n        this.$store.dispatch(\"changeCellTypeSearchEntryInSearchView\", input);\n      }\n    },\n\n    geneSearchEntry: {\n      get() {\n        return this.$store.getters.getGeneSearchEntry;\n      },\n      set(input) {\n        this.$store.dispatch(\"changeGeneSearchEntry\", input);\n      }\n    }\n  },\n  watch: {\n    cellData() {\n      this.loaded = true;\n      this.listLocalCopy = this.generateListCopy(this.cellData);\n    },\n    geneSelected() {\n      let globalThis = this;\n      this.$store.dispatch(\"changeCellTypesThatHaveSelectedGeneAsTopValue\", []);\n      for (const [key, value] of Object.entries(this.loadedDictData)) {\n        let geneArr = value;\n        for (let i = 0; i < geneArr.length; i++) {\n          if (geneArr[i][2] === globalThis.geneSelected) {\n            let cellName = key;\n            let geneValue = value[i][1];\n            globalThis.$store.dispatch(\n              \"addToCellTypesThatHaveSelectedGeneAsTopValue\",\n              [cellName, geneValue]\n            );\n          }\n        }\n      }\n    }\n  },\n  mounted() {\n    this.fetchData();\n  },\n  methods: {\n    async fetchData() {\n      this.loadedGeneData = await d3.json(\"./genes.json\");\n      this.loadedDictData = await d3.json(\"./top_abs_10_dict.json\");\n      this.loadedGeneIdToNameDict = await d3.json(\"./gene_id_to_name.json\");\n      this.loadedGeneIdToDescriptionDict = await d3.json(\n        \"gene_id_to_description.json\"\n      );\n    },\n    setSelectedCellTypeList(cellName) {\n      let curList = this.$store.getters.getSelectedCellTypeList;\n      while (curList.length >= this.listSize) {\n        curList.pop();\n      }\n      curList.push(cellName);\n      this.$store.dispatch(\"changeSelectedCellTypeList\", curList);\n    },\n    generateListCopy(originalList) {\n      return Object.entries(_.cloneDeep(originalList));\n    },\n    navigateToGenePage(item) {\n      window.open(\n        \"http://useast.ensembl.org/Homo_sapiens/Gene/Summary?g=\" + item\n      );\n    },\n    setGeneItem(gene) {\n      this.$store.dispatch(\"changeSelectedGene\", gene);\n    },\n    sortBasedOnOption(option) {\n      let globalThis = this;\n      this.$store.dispatch(\"changeCellTypeSortOption\", String(option));\n      this.listLocalCopy = this.generateListCopy(this.cellData);\n      switch (option) {\n        case \"alphabetical\":\n          globalThis.listLocalCopy = _.sortBy(\n            this.listLocalCopy,\n            [\n              function(list) {\n                return list[0];\n              }\n            ],\n            [\"asc\"]\n          );\n          return globalThis.listLocalCopy;\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\nv-card-title {\n  margin: 100px;\n}\n.list {\n  max-height: 350px;\n  overflow-y: auto;\n}\n.title {\n  margin-top: 10px;\n}\n.list-item-box {\n  text-align: left;\n}\n.web-link {\n  text-decoration: underline;\n}\n.fade {\n  color: grey;\n}\n.values {\n  margin: 10px;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SearchView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SearchView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SearchView.vue?vue&type=template&id=6b90ec6c&scoped=true&\"\nimport script from \"./SearchView.vue?vue&type=script&lang=js&\"\nexport * from \"./SearchView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SearchView.vue?vue&type=style&index=0&id=6b90ec6c&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6b90ec6c\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"md12\":\"\"}},[_c('v-card',{attrs:{\"max-height\":_vm.maxCardHeight,\"color\":_vm.$vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n          .background}},[_c('v-card-title',{staticClass:\"justify-center\"},[_c('h4',{staticClass:\"view-title\"},[_vm._v(\"\\n          Graph View\\n        \")]),_c('v-spacer'),(_vm.cellType1)?_c('v-chip',{staticClass:\"ma-2\"},[_vm._v(\"\\n          \"+_vm._s(_vm.cellType1)+\"\\n        \")]):_vm._e(),(_vm.cellType2)?_c('v-chip',{staticClass:\"ma-2\"},[_vm._v(\"\\n          \"+_vm._s(_vm.cellType2)+\"\\n        \")]):_vm._e()],1),_c('v-card-text',[_c('div',{ref:\"graph\",attrs:{\"id\":\"graph\"}})])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export const FIRST_ROW_CARD_MAX_HEIGHT = 600;\nexport const MAX_SELECTED_CELL_TYPE_NUMBER = 2;\nexport const CELL_TYPE_DEFAULT_COLOR = \"#faed27\";\nexport const CELL_TYPE_CHANGED_COLOR = \"#f33\";\nexport const NODE_RADIUS_DEFAULT = 5;\nexport const NODE_RADIUS_POPPED = 8;\nexport const COLOR_RAMP = [\n    \"#40004b\",\n    \"#762a83\",\n    \"#9970ab\",\n    \"#c2a5cf\",\n    \"#e7d4e8\",\n    \"#d9f0d3\",\n    \"#a6dba0\",\n    \"#5aae61\",\n    \"#1b7837\",\n    \"#00441b\",\n]","import _ from \"lodash\";\n\nexport const FORMAT_TO_ID = cellName => {\n  return cellName\n    .split(\" \")\n    .join(\"-\")\n    .split(\"(\")\n    .join(\"\")\n    .split(\")\")\n    .join(\"\")\n    .split(\",\")\n    .join(\"\")\n    .replace(/\\//g, \"-\");\n};\n\nexport const GENERATE_LIST_COPY = originalList => {\n  return Object.entries(_.cloneDeep(originalList));\n};","/*jshint esversion: 6 */\n/**\n *\n * @param {number[]} lst\n */\nexport function average(lst) {\n  if (!lst.length) return 0;\n  let sum = lst.reduce((prev, cur) => (cur += prev));\n  let avg = sum / lst.length;\n  return avg;\n}\n\nexport function sum(lst) {\n  if (!lst.length) return 0;\n  return lst.reduce((prev, cur) => (cur += prev));\n}\n\n/**\n *\n * @param {number} len\n */\nexport function listOfLists(len) {\n  const array = Array(len);\n  for (let i = 0; i < array.length; i++) {\n    array[i] = [];\n  }\n  return array;\n}\n\n/* given 2 edges (x coordinates) do the edges cross? */\nexport function isCross(p1, c1, p2, c2) {\n  return (p1 > p2 && c1 < c2) || (p1 < p2 && c1 > c2) ? 1 : 0;\n}\n\n/**\n * Count the number of crossings between two (adjacent) levels\n * @param {Vertex[]} parents\n */\nexport function countCrossingsLevel(parents) {\n  let count = 0;\n  // no easy way to iterate over the links of a level...\n  if (parents.length > 1) {\n    for (let i = 0; i < parents.length - 1; i++) {\n      let p1 = parents[i];\n      p1.children.forEach(function(c1) {\n        // jshint ignore:line\n        for (let j = i + 1; j < parents.length; j++) {\n          let p2 = parents[j];\n          p2.children.forEach(function(c2) {\n            // jshint ignore:line\n            count += isCross(\n              p1.levelIdx,\n              c1.levelIdx,\n              p2.levelIdx,\n              c2.levelIdx\n            );\n          });\n        }\n      });\n    }\n  }\n  return count;\n}\n\nexport function countCrossingsGraph(graph) {\n  const levels = graph.getLevels();\n  let crossings = 0;\n  for (let i = 0; i < levels.length - 1; i++) {\n    let lc = countCrossingsLevel(levels[i]);\n    crossings += lc;\n  }\n  return crossings;\n}\n\nexport function simpleSorter(graph, hlevel = 3, pass = 0) {\n  const levels = graph.getLevels();\n\n  // compare two nodes\n  function cmp(a, b) {\n    // heuristic one - stick to your primary parent\n    if (!a.primaryParent) {\n      console.log(`node ${a.index} ${a.name} no primary parent`);\n    }\n    let ai = a.primaryParent.levelIdx;\n    let bi = b.primaryParent.levelIdx;\n    if (ai != bi) return ai - bi;\n    if (hlevel > 1) {\n      // hueristic two - consider all your parents\n      // only make sense if at least one has multiple parents\n      if (a.parents.length > 1 || b.parents.length > 1) {\n        let ap = average(a.parents.map(p => p.levelIdx));\n        let bp = average(b.parents.map(p => p.levelIdx));\n        if (ap != bp) return ap - bp;\n      } else {\n        // generally, looking at your children is a really bad\n        // idea - wait until it becomes useful (when things are stable)\n        // and only if you have only 1 child\n        if (pass > 5 && a.children.length == 1 && b.children.length == 1) {\n          // keep diving until someone doesn't have 1 child\n          let ac = a.children[0];\n          let bc = b.children[0];\n          while (ac.children.length == 1 && bc.children.length == 1) {\n            ac = ac.children[0];\n            bc = bc.children[0];\n          }\n          let ap = ac.levelIdx;\n          let bp = bc.levelIdx;\n          return ap - bp;\n        }\n      }\n    }\n    if (hlevel > 2) {\n      // heuristic three - transitive closure of your descendents ancestors\n      if (a.dalevel.length && b.dalevel.length) {\n        let ap = average(a.dalevel.map(p => p.levelIdx));\n        let bp = average(b.dalevel.map(p => p.levelIdx));\n        if (ap != bp) return ap - bp;\n      }\n    }\n    return 0;\n  }\n\n  // sort each level\n  let idx = 0;\n  levels.forEach(function(level, li) {\n    if (li > 0) {\n      level.sort(cmp);\n    }\n    level.forEach((n, i) => {\n      n.levelIdx = i;\n      n.index = idx++;\n    });\n  });\n\n  // reorder the nodes\n  graph.nodes.sort((a, b) => a.index - b.index);\n  // make sure the children are sorted correctly\n  graph.nodes.forEach(n => n.primaryChildren.sort((a, b) => a.index - b.index));\n  graph.nodes.forEach(n => n.children.sort((a, b) => a.index - b.index));\n}\n","/*jshint esversion: 6 */\n// @ts-check\n\n// @ts-ignore\nimport { listOfLists } from \"./utils.js\";\n\n/**\n * Can't be a Node since that's a reserved term by the DOM\n */\nexport class Vertex {\n  /**\n   * make a node\n   * @param {string} name\n   * @param {object} params\n   * @param {number} [params.width=10]\n   * @param {number} [params.height=10]\n   */\n  constructor(name, params = {}) {\n    this.name = name;\n    this.height = \"height\" in params ? params.height : 10;\n    this.width = \"width\" in params ? params.width : 10;\n    // these are usually added later by the reader\n    this.parents = [];\n    this.children = [];\n    this.istree = undefined;\n    this.index = undefined; // overl rank (index into nodes list)\n    this.phantom = false;\n    // these are added later by the analyzer, but we declare them to have no warnings\n    this.depth = -1;\n    this.longest = -1;\n    this.levelIdx = undefined; // index in the level (where in levels list)\n    this.ancestors = new Set();\n    this.descendentAncestors = new Set();\n    this.dalevel = [];\n\n    // these are used for sorting\n    this.levelrank = undefined;\n\n    // these are used for drawing\n    this.x = undefined;\n    this.y = undefined;\n\n    // for the new and improved sorter\n    this.primaryParent = undefined;\n    /** @type {Vertex[]} */\n    this.primaryChildren = [];\n    this.grandkidIndex = undefined;\n\n    // used for layout\n    this.twidth = undefined;\n  }\n}\n\nexport class Link {\n  /**\n   *\n   * @param {Vertex} source\n   * @param {Vertex} target\n   * @param {string} color\n   * @param {number} value\n   */\n  constructor(source, target, color = \"#000\", value = 1) {\n    this.source = source;\n    this.target = target;\n    this.color = color;\n    this.value = value;\n  }\n}\n\n/**\n * @callback NodeFunction\n * @param{Vertex} node\n */\n\n/**\n * @class\n */\nexport class Graph {\n  /**\n   *\n   * @param {Vertex[]} nodes\n   * @param {Link[]} links\n   * @param {Array} constraints\n   * @param {Array} groups\n   */\n  constructor(nodes, links, constraints = [], groups = []) {\n    /** @type {Vertex[]} */\n    this.nodes = nodes;\n    /** @type {Link[]} */\n    this.links = links;\n    this.constraints = constraints;\n    this.groups = groups;\n    this.analysis = undefined;\n  }\n  /**\n   * return a list of the roots\n   * @returns {Vertex[]}\n   */\n  roots() {\n    return this.nodes.filter(n => !n.parents.length);\n  }\n  /**\n   * return a list of the leaves\n   * @returns {Vertex[]}\n   */\n  leaves() {\n    return this.nodes.filter(n => !n.children.length);\n  }\n\n  /**\n   * apply a function to each node in breadth first order\n   * this only works on level graphs!\n   * @param {NodeFunction} nodefunc\n   */\n  breadthFirst(nodefunc, nodupes = true) {\n    let results = [];\n    // start with the roots\n    let queue = this.roots();\n    // now iterate until we're done\n    while (queue.length) {\n      const n = queue.shift();\n      results.push(nodefunc(n));\n      n.children.forEach(function(c) {\n        // jshint ignore:line\n        if (!nodupes || !queue.includes(c)) queue.push(c);\n      });\n    }\n    return results;\n  }\n\n  /**\n   * get the levels of the graph - it also resets the indecies in the levels\n   */\n  getLevels() {\n    const nodes = this.nodes;\n    const maxLongest = Math.max(...nodes.map(n => n.longest));\n\n    /** @type Vertex[][]] */\n    const levels = listOfLists(maxLongest);\n\n    nodes.forEach(n => levels[n.longest - 1].push(n));\n    levels.forEach(level => level.forEach((node, i) => (node.levelIdx = i)));\n\n    return levels;\n  }\n\n  /**\n   * Re-order the nodes based on a breadth first traversal\n   * it puts the nodes in order - which means it can mess stuff up\n   * It does re-assign indecies based on this new order.\n   * It does not re-assign level indecies.\n   */\n  orderNodes() {\n    // beginning with the roots, do a breadth first traversal of the tree to\n    // assign indecies\n    let idx = 0;\n    let orderedNodes = [];\n    let queue = this.nodes.filter(node => !node.primaryParent);\n    while (queue.length) {\n      const node = queue.shift();\n      node.index = idx++;\n      orderedNodes.push(node);\n      node.primaryChildren.forEach(child => queue.push(child)); // jshint ignore:line\n    }\n    this.nodes = orderedNodes;\n  }\n\n  /** describe the graph to the console */\n  describe() {\n    // count the number of nodes with each amount of parents\n    let pCount = {};\n    this.nodes.forEach(node => {\n      let npars = node.parents.length;\n      if (pCount[npars]) {\n        pCount[npars]++;\n      } else {\n        pCount[npars] = 1;\n      }\n    });\n  }\n\n  /** extract a D3 Hierarchy description  - this is the literal\n   *  (someone else has to call d3.hierarchy) */\n  hierarchy() {\n    /** get the root - if there are multiple roots, make a new root node */\n    let roots = this.roots();\n    let root;\n    if (roots.length == 1) {\n      root = {\n        name: roots[0].name,\n        node: roots[0],\n        nchildren: roots[0].primaryChildren\n      };\n    } else {\n      root = { name: \"Fake Root\", node: undefined, nchildren: roots };\n    }\n    /* proceed recursively */\n    function expand(tree) {\n      // converty nchildren (node list) to d3 form.\n      tree.children = [];\n      tree.nchildren.forEach(function(c) {\n        let nnode = { name: c.name, node: c, nchildren: c.primaryChildren };\n        tree.children.push(nnode);\n        expand(nnode);\n      });\n    }\n    expand(root);\n    return root;\n  }\n}\n\n/**\n * turn something with a forEach into a string (works for sets)\n * @param {*} lst\n */\nexport function strifyNodes(lst, field = \"name\") {\n  let s = \"[\";\n  lst.forEach(v => (s += v[field] + \" \"));\n  s += \"]\";\n  return s;\n}\n\n/**\n * Given a graph, change things such that all links are 1 level\n * this means that longer links get broken into a series of steps with phantom nodes inserted\n * @param {Graph} graph\n */\nfunction phantomGraph(graph) {\n  // a list of all of the long links\n  const longLinks = graph.links.filter(\n    link => link.target.longest - link.source.longest > 1\n  );\n  // links are only the links of the correct length\n  const links = graph.links.filter(\n    link => link.target.longest - link.source.longest == 1\n  );\n  // save the old links\n  // @ts-ignore\n  graph.oldLinks = graph.links;\n\n  // break up the long links\n  longLinks.forEach(function(link, li) {\n    // disconnect child and parent\n    link.target.parents.splice(link.target.parents.indexOf(link.source), 1);\n    link.source.children.splice(link.source.children.indexOf(link.target), 1);\n    let prev = link.source;\n    for (\n      let level = link.source.longest + 1;\n      level < link.target.longest;\n      level++\n    ) {\n      let nnode = new Vertex(`connector-${li}-${level}`);\n      nnode.phantom = true;\n      nnode.parents.push(prev);\n      nnode.longest = level;\n      nnode.depth = link.source.depth + 1;\n      nnode.istree = false;\n      prev.children.push(nnode);\n      graph.nodes.push(nnode);\n      links.push(new Link(prev, nnode));\n      prev = nnode;\n    }\n    link.target.parents.push(prev);\n    prev.children.push(link.target);\n    links.push(new Link(prev, link.target));\n  });\n\n  graph.links = links;\n}\n\n/**\n * analyze a graph in place\n * this just adds information to the nodes (in place)\n * depth, longest, istree, index\n * if we level the graph, we add phantom nodes BEFORE doing ancestry\n * @param {Graph} graph\n * @param {boolean} [level=true]\n */\nexport function analyzeGraph(graph, level = true) {\n  // some analysis\n  let roots = graph.roots();\n\n  // Depths\n  // do a simple breadth-first search to get depth - where depth is shortest path to a root\n  // start with the roots\n  let queue = [];\n  roots.forEach(x => {\n    x.depth = 1;\n    queue.push(x);\n  });\n  // now iterate until we're done\n  while (queue.length) {\n    const n = queue.shift();\n    n.children.forEach(child => {\n      // jshint ignore:line\n      if (child.depth < 1) {\n        child.depth = n.depth + 1;\n        queue.push(child);\n      }\n    });\n  }\n\n  // a tricker thing is to find the LONGEST path to a node\n  // I am doing this inefficiently - each node may be visited multiple times\n  // each time it is updated\n  queue = [];\n  roots.forEach(x => {\n    x.longest = 1;\n    queue.push(x);\n  });\n  // now iterate until we're done\n  while (queue.length) {\n    const n = queue.shift();\n    const newLong = n.longest + 1;\n    n.children.forEach(child => {\n      // jshint ignore:line\n      if (child.longest < newLong) {\n        child.longest = newLong;\n        queue.push(child);\n      }\n    });\n  }\n\n  // Is the subtree below a node a tree?\n  // this requires that: each child is a tree, and each child has 1 parent\n  // we cache this within the node\n  function isTree(n) {\n    // jshint ignore:line\n    if (n.istree != undefined) return n.istree;\n    // look for a child that makes us not a tree\n    let istree = true;\n    n.children.forEach(function(child) {\n      if (!isTree(child) || child.parents.length > 1) {\n        istree = false;\n      }\n    });\n    n.istree = istree;\n    return istree;\n  }\n  graph.nodes.forEach(n => isTree(n));\n\n  // add the phantom nodes if need be\n  if (level) phantomGraph(graph);\n\n  // assign indecies based on order - AFTER phantom nodes added\n  graph.nodes.forEach((n, i) => (n.index = i));\n\n  // analyses after adding the phantoms\n  let levels = graph.getLevels();\n\n  // ancestor sets - a place where naive breadth first actually makes sense\n  graph.breadthFirst(function(node) {\n    node.children.forEach(function(child) {\n      node.ancestors.forEach(ancestor => child.ancestors.add(ancestor));\n      child.ancestors.add(node);\n    });\n  });\n\n  // work bottom up, rather than using breadth first\n  for (let li = levels.length - 1; li >= 0; li--) {\n    const level = levels[li];\n    level.forEach(function(node) {\n      node.children.forEach(function(child) {\n        child.ancestors.forEach(a => node.descendentAncestors.add(a));\n        child.descendentAncestors.forEach(a => node.descendentAncestors.add(a));\n      });\n    });\n  }\n  // find the das at the level above the node\n  graph.nodes.forEach(function(node) {\n    node.dalevel = [...node.descendentAncestors].filter(\n      n => n.longest == node.longest\n    );\n  });\n}\n","/*jshint esversion: 6 */\n\nimport { strifyNodes } from \"./graph.js\";\nimport * as d3 from \"d3\";\nimport * as util from \"../util\";\nimport * as d3plusTooltip from \"d3plus-tooltip\";\n\n/**\n * New drawwing code - only does Beziers\n * has a few parameters\n * and cannot update node positions\n *\n * @param {Graph} graph\n * @param {string} selector=\"body\"\n * @param {Object} params={}\n * @param {number} [params.height = 800]\n * @param {number} [params.nodeRadius = 4.5]\n * @param {?Boolean} [params.drawPhantoms]\n * @param {number} [params.bezierVert = 25]\n */\n// @ts-ignore\n// @ts-ignore\nexport function drawGraph(graph, selector = \"body\", vueThis, params = {}) {\n  let nodeRadius = params.nodeRadius || 4.5;\n  let bvert = params.bezierVert || 15;\n  let height = params.height || 985;\n  const width = Math.max(...graph.nodes.map(n => n.x)) + nodeRadius;\n\n  let svg = d3\n    // @ts-ignore\n    .select(selector)\n    .append(\"svg\")\n    .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n    .attr(\"viewBox\", `0 0 ${width} ${height}`)\n    .call(\n      // @ts-ignore\n      d3.zoom().on(\"zoom\", function() {\n        // @ts-ignore\n        svg.attr(\"transform\", d3.event.transform);\n      })\n    )\n    .append(\"g\");\n\n  let paths;\n\n  // create the Bezier segment from x1,y1 to x2,y2 - assuming that x1,y1 was the last point\n  // note that the derivatives go vertically\n  function cseg(x1, y1, x2, y2) {\n    // I made this a variable to experiment with computing better values\n    // nothing works well\n    let bv = bvert;\n    return `C${x1},${y1 + nodeRadius + bv},${x2},${y2 -\n      nodeRadius -\n      bv},${x2},${y2 - nodeRadius}`;\n  }\n\n  // @ts-ignore\n  function pathId(links) {\n    return (\n      util.FORMAT_TO_ID(links[\"source\"][\"name\"]) +\n      \"---\" +\n      util.FORMAT_TO_ID(links[\"target\"][\"name\"])\n    );\n  }\n\n  // we only create links for the non-phantom source nodes\n  // we then trace through the phantom nodes\n  paths = svg\n    .selectAll(\".link\")\n    .data(graph.links.filter(link => !link.source.phantom))\n    .enter()\n    .append(\"svg:path\")\n    .attr(\"id\", pathId)\n    .attr(\"stroke-width\", 0.75)\n    .attr(\"fill\", \"none\")\n    .attr(\"d\", function(d) {\n      // start at the beginning of the first source\n      let x1 = d.source.x;\n      let y1 = d.source.y + nodeRadius;\n      let pstr = `M${x1},${y1}`;\n      let next = d.target;\n      // traverse phantom nodes\n      while (next.phantom) {\n        let x2 = next.x;\n        let y2 = next.y;\n        pstr += cseg(x1, y1, x2, y2);\n        // vertical line through the node's location\n        pstr += `L${x2},${y2 + nodeRadius}`;\n        next = next.children[0];\n        x1 = x2;\n        y1 = y2;\n      }\n      // now we go to the final place\n      let x2 = next.x;\n      let y2 = next.y;\n      pstr += cseg(x1, y1, x2, y2);\n      return pstr;\n    });\n\n  paths.style(\"stroke\", link => link.color).attr(\"class\", \"link\");\n  paths.on(\"mouseover\", function handle() {\n    // @ts-ignore\n    let link = d3.select(this);\n    link.style(\"stroke\", \"#FF6F61\");\n   \n    /**\n     * \n     * \n     * Need to add the hover over edge show tooltips\n     * on both nodes functionality here\n     * \n     * \n     */\n  });\n  paths.on(\"mouseout\", function handle(d) {\n    // @ts-ignore\n    d3.select(this).style(\"stroke\", d.color);\n  });\n\n  /**\n   * Assign an id to each circle based on node type\n   * @param {Object} node\n   */\n  // Assign an id to each circle based on node type\n  // @ts-ignore\n  function nodeId(node) {\n    if (node.phantom) {\n      return \"phantom-\" + util.FORMAT_TO_ID(node.name);\n    } else {\n      return \"circle-\" + util.FORMAT_TO_ID(node.name);\n    }\n  }\n\n  // @ts-ignore\n  function handleMouseOver() {\n    // Use D3 to select element, change color and size\n    // @ts-ignore\n    let node = d3.select(this);\n    node.attr(\"r\", nodeRadius * 2);\n\n    // @ts-ignore: This is a notation that d3plus-tooltip uses\n    new d3plusTooltip.Tooltip()\n      .data([{ name: node.attr(\"name\") }])\n      .thead([\n        function(node) {\n          return node.name;\n        }\n      ])\n      .position(\"#\" + node.attr(\"id\"))\n      .render();\n  }\n\n  // @ts-ignore\n  function handleMouseOut() {\n    // @ts-ignore\n    d3.select(this).attr(\"r\", nodeRadius);\n    // @ts-ignore\n    d3.select(\".d3plus-tooltip\").remove();\n  }\n\n  function handleMouseClick() {\n    // @ts-ignore\n    vueThis.selectedCellName = d3.select(this).attr(\"name\");\n  }\n\n  function nodeClass(node) {\n    if (node.phantom) {\n      return \"phantom\";\n    } else {\n      return \"cell\";\n    }\n  }\n\n  function nodeColor(node) {\n    if (node.phantom) return \"#42b98300\";\n    if (node.istree) return \"#faed27\";\n    return \"#faed27\";\n  }\n\n  function nodeName(node) {\n    return node.name;\n  }\n\n  function nodeStroke(node) {\n    if (node.phantom) return \"none\";\n    return \"#000\";\n  }\n\n  let node = svg\n    .selectAll(\".node\")\n    .data(\n      params.drawPhantoms ? graph.nodes : graph.nodes.filter(n => !n.phantom)\n    )\n    .enter()\n    .append(\"circle\")\n    .attr(\"name\", nodeName)\n    .attr(\"id\", nodeId)\n    .attr(\"class\", nodeClass)\n    .attr(\"r\", nodeRadius)\n    .style(\"fill\", nodeColor)\n    .style(\"stroke\", nodeStroke)\n    .style(\"stroke-width\", 0.5)\n    .attr(\"cx\", d => d.x)\n    .attr(\"cy\", d => d.y);\n\n  node\n    .filter(\".cell\")\n    .on(\"mouseover\", handleMouseOver)\n    .on(\"mouseout\", handleMouseOut)\n    .on(\"click\", handleMouseClick);\n\n  node.append(\"title\").text(function(d) {\n    return `${\n      d.index\n    }:${d.name} ${strifyNodes(d.dalevel, \"index\")} tw:${d.twidth}`;\n  });\n}\n","import { Link, Graph, Vertex } from \"./graph.js\";\n\n/* just make the graph data structure given the input data */\n/**\n *\n * @param {Graph} data\n */\nexport function jsonToGraph(data) {\n  // we have a set of node names (in data) with their children\n  // make a list of node objects\n  // warning: arrow notation can't return an object directly\n  let nodes = Object.keys(data).map(name => new Vertex(name));\n\n  // make a dictionary so that we can find things by name\n  // it's called \"node\" since it lets us find a node\n  let node = {};\n  nodes.forEach(function(n) {\n    node[n.name] = n;\n  });\n\n  // assign reasonable indecies\n  nodes.forEach((node, idx) => (node.index = idx));\n\n  // make links in the correct format\n  // now process all of the links - create a list of links, as well\n  // as store the graph information in the nodes\n  let links = [];\n  for (const sourceName in data) {\n    data[sourceName].forEach(function(targetName) {\n      const source = node[sourceName];\n      const target = node[targetName];\n      if (!source) console.log(`Bad node ${sourceName} as source`);\n      if (!target) console.log(`Bad node ${targetName} as target`);\n      if (source && target) {\n        let link = new Link(source, target);\n        links.push(link);\n        source.children.push(target);\n        target.parents.push(source);\n      }\n    });\n  }\n\n  return new Graph(nodes, links);\n}\n","/*jshint esversion: 6 */\n\n/**\n * @param {Graph} graph\n */\nexport function primaryParent(graph) {\n  // for every node, choose it's primary parent\n  graph.nodes.forEach(function(node) {\n    node.primaryParent = undefined;\n    let maxChildren = 0;\n    node.parents.forEach(function(parent) {\n      const parentKids = parent.children.length;\n      if (parentKids > maxChildren) {\n        maxChildren = parentKids;\n        node.primaryParent = parent;\n      }\n    });\n  });\n  // for every node, get all of the children for which it is primary\n  graph.nodes.forEach(node => (node.primaryChildren = []));\n  graph.nodes.forEach(node => {\n    if (node.primaryParent) node.primaryParent.primaryChildren.push(node);\n  });\n}\n","/*jshint esversion: 6 */\nimport { average, sum } from \"./utils.js\";\n\nimport * as d3 from \"d3\";\n\nfunction xLength(graph) {\n  const diffs = graph.links.map(link =>\n    Math.abs(link.source.x - link.target.x)\n  );\n  return diffs.reduce((a, b) => (b += a));\n}\n\n/** use the d3 layout */\nexport function d3Layout(graph, levelSep = 100, leftMargin = 10) {\n  // @ts-ignore\n  let hier = d3.hierarchy(graph.hierarchy());\n  // @ts-ignore\n  let tree = d3.tree();\n  // @ts-ignore\n  tree.size([]); // do we have to give it a size?\n  // node size is fixed - so instead, use separation to control spacing\n  tree.separation(function(a, b) {\n    let na = a.data.node;\n    let nb = b.data.node;\n    if (na && nb) {\n      return 1 + (na.phantom ? 2 : 5) + (nb.phantom ? 2 : 5);\n    } else {\n      return 10;\n    }\n  });\n  tree.nodeSize([1, 1]);\n  tree(hier);\n  // things are centered at zero, so shift things\n  // @ts-ignore\n  let left = Math.min(...hier.descendants().map(n => n.x));\n  hier.descendants().forEach(n => {\n    // @ts-ignore\n    n.x -= left - leftMargin;\n  });\n  // copy the D3 positions into the node positions\n  hier.descendants().forEach(function(node) {\n    if ((node.data, node)) {\n      // @ts-ignore\n      node.data.node.x = node.x;\n      node.data.node.y = (node.data.node.longest + 1) * levelSep;\n    }\n  });\n}\n\n/**\n *\n * @param {Graph} graph\n */\nexport function layout(graph) {\n  // for debugging - keep a set of nodes (a dictionary) that we'll do print statements\n  const examine = {\n    129: true\n  };\n\n  const width = 1200;\n  const topmargin = 50;\n  const levelSep = 50;\n\n  const vertexRadius = 5;\n  const phantomRadius = 1;\n  const spacer = 2;\n\n  function space(node) {\n    return spacer + (node.phantom ? phantomRadius : vertexRadius);\n  }\n\n  const levels = graph.getLevels();\n\n  // assign indecies based on levels\n  // this means creating a new node list\n  const orderedNodes = [];\n  levels.forEach(level => level.forEach(n => orderedNodes.push(n)));\n  orderedNodes.forEach((node, idx) => (node.index = idx));\n\n  // make initial positions\n  levels.forEach(function(level, li) {\n    let left = 0;\n    level.forEach(function(n) {\n      n.x = left + space(n); // Math.max(px, left+space(n));\n      n.y = topmargin + li * levelSep;\n      left = n.x + space(n);\n    });\n  });\n  console.log(`Initial Lengths = ${xLength(graph)}`);\n\n  // adjust initial positions to the right\n  // need to go bottom to top\n  // levels.forEach( function(level,li)\n  for (let li = levels.length - 1; li >= 0; li--) {\n    const level = levels[li];\n    let right = width;\n    // go from right to left shifting things right if they can\n    for (let ni = level.length - 1; ni >= 0; ni--) {\n      let n = level[ni];\n\n      // if the rightmost thing is a leaf, we might want to move it to\n      // make space for other things\n      let rightLeaf = width;\n\n      // 4 different heuristics as to where to move to - purely aesthetics\n      let na = n.children.length\n        ? average(n.children.map(m => m.x))\n        : rightLeaf;\n\n      if (n.index in examine) {\n        console.log(`right: n.x:${n.x} na:${na} right:${right}`);\n      }\n\n      let nx = Math.max(na, n.x);\n      n.x = Math.min(nx, right - space(n));\n      right = n.x - space(n);\n    }\n  }\n\n  function argmax(lst) {\n    let val = lst[0];\n    let mi = 0;\n    for (let i = 1; i < lst.length; i++) {\n      if (lst[i] > val) {\n        mi = i;\n        val = lst[i];\n      }\n    }\n    return mi;\n  }\n\n  function argmin(lst) {\n    let val = lst[0];\n    let mi = 0;\n    for (let i = 1; i < lst.length; i++) {\n      if (lst[i] < val) {\n        mi = i;\n        val = lst[i];\n      }\n    }\n    return mi;\n  }\n\n  // greedy pull left\n  // if the average of the children of a parent is to the right of the parent\n  // then this is a candidate to move to the left\n  // a parent should shift its children to the left if they aren't centered\n  levels.forEach(function(level) {\n    let left = 0;\n    level.forEach(function(node) {\n      if (node.primaryChildren.length) {\n        // we can't count on the ordering of the primary children\n        let leftChild =\n          node.primaryChildren[argmin(node.primaryChildren.map(n => n.x))];\n        let rightChild =\n          node.primaryChildren[argmax(node.primaryChildren.map(n => n.x))];\n        // console.log(`$N:${node.name} LC:${leftChild.name} RC:${rightChild.name} Left:${left}`)\n        // figure out how much shift we want\n        let goalDelta = average(node.primaryChildren.map(n => n.x)) - node.x;\n        if (goalDelta > 0) {\n          // we want to shift left, but how much can we\n          let maxShift = leftChild.x - (left + space(leftChild));\n          let shift = Math.min(maxShift, goalDelta);\n          if (shift > 0) {\n            node.primaryChildren.forEach(n => (n.x -= shift));\n          }\n        }\n        // put the boundary to the right of the rightmost child\n        left = rightChild.x + space(rightChild);\n      }\n    });\n  });\n\n  console.log(`Final Lengths = ${xLength(graph)}`);\n\n  // Report Out\n  console.log(\n    `${graph.nodes.length} nodes (w/phantoms), ${graph.links.length} links (w/phantoms)`\n  );\n  console.log(`${graph.constraints.length} constraints`);\n}\n\n/**\n * New version - use tree layout first (which will be too wide) and then try to do some packing for conciseness\n * @param {Graph} graph\n */\nexport function treeLayout(graph) {\n  // parameters (should be passed)\n  const topmargin = 50;\n  const levelSep = 65;\n\n  const vertexRadius = 5;\n  const phantomRadius = 2;\n  const spacer = 2;\n\n  function space(node) {\n    return spacer + (node.phantom ? phantomRadius : vertexRadius);\n  }\n\n  function minwid(node) {\n    return spacer + 2 * (node.phantom ? phantomRadius : vertexRadius);\n  }\n\n  const levels = graph.getLevels();\n\n  // compute various vertex properties - needs to be done from bottom to top\n  for (let li = levels.length - 1; li >= 0; li--) {\n    const level = levels[li];\n    // figure out the twidth of each node - the twidth includes the \"left\" spacer\n    level.forEach(function(node) {\n      // jshint ignore:line\n      node.twidth = Math.max(\n        minwid(node),\n        sum(node.primaryChildren.map(n => n.twidth))\n      );\n    });\n  }\n\n  // in theory, if we use the twidths, we shoud get a left leaning tree layout\n  levels.forEach(function(level, li) {\n    let left = vertexRadius;\n    level.forEach(function(node) {\n      node.x = Math.max(\n        left + space(node),\n        node.primaryParent ? node.primaryParent.x : 0\n      );\n      node.y = topmargin + li * levelSep;\n      // left += node.twidth;\n      left = node.x - space(node) + node.twidth;\n    });\n  });\n\n  // we have a left leaning tree, center parents over their kids (if we can move them that far right)\n  for (let ni = graph.nodes.length - 1; ni >= 0; ni--) {\n    const node = graph.nodes[ni];\n    if (node.primaryChildren.length) {\n      const goalX = average(node.primaryChildren.map(n => n.x));\n      const neighbor = graph.nodes[ni + 1];\n      if (neighbor.longest == node.longest) {\n        const maxX = neighbor.x - space(node) - space(neighbor) + spacer;\n        node.x = Math.min(maxX, goalX);\n      } else {\n        node.x = goalX;\n      }\n    }\n  }\n}\n","<template>\n  <v-layout row wrap>\n    <v-flex md12>\n      <v-card\n        :max-height=\"maxCardHeight\"\n        :color=\"\n          $vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n            .background\n        \"\n      >\n        <v-card-title class=\"justify-center\">\n          <h4 class=\"view-title\">\n            Graph View\n          </h4>\n          <v-spacer />\n          <v-chip v-if=\"cellType1\" class=\"ma-2\">\n            {{ cellType1 }}\n          </v-chip>\n          <v-chip v-if=\"cellType2\" class=\"ma-2\">\n            {{ cellType2 }}\n          </v-chip>\n        </v-card-title>\n        <v-card-text>\n          <div id=\"graph\" ref=\"graph\" />\n        </v-card-text>\n      </v-card>\n    </v-flex>\n  </v-layout>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\n\nimport * as config from \"@/config\";\nimport * as util from \"@/util\";\n\nimport { analyzeGraph } from \"@/apis/graph.js\";\nimport { simpleSorter } from \"@/apis/utils.js\";\nimport { drawGraph } from \"@/apis/draw.js\";\nimport { jsonToGraph } from \"@/apis/structure.js\";\nimport { primaryParent } from \"@/apis/tangler.js\";\nimport { treeLayout } from \"@/apis/layout.js\";\n\nexport default {\n  name: \"CellGraph\",\n\n  props: {\n    cellData: {\n      type: Object,\n      default: function() {\n        return { message: \"cell data is here\" };\n      }\n    }\n  },\n\n  data() {\n    return {\n      cellType1: \"\",\n      cellType2: \"\",\n      keyValueDict: {},\n      listLocalCopy: [],\n      listSize: config.MAX_SELECTED_CELL_TYPE_NUMBER,\n      loaded: false,\n      loadedDictData: {},\n      maxCardHeight: config.FIRST_ROW_CARD_MAX_HEIGHT,\n      selectedCellName: \"\",\n      pathsDict: {}\n    };\n  },\n\n  computed: {\n    geneSelected: {\n      get() {\n        return this.$store.getters.getGeneSelected;\n      }\n    },\n\n    selectedCellTypeList: {\n      get() {\n        return this.$store.getters.getSelectedCellTypeList;\n      }\n    },\n\n    cellTypesThatHaveSelectedGeneAsTopValue: {\n      get() {\n        return this.$store.getters.getCellTypesThatHaveSelectedGeneAsTopValue;\n      }\n    },\n\n    search: {\n      get() {\n        return this.$store.getters.getSearch;\n      },\n      set(value) {\n        return this.$store.dispatch(\"changeSearch\", value);\n      }\n    }\n  },\n\n  watch: {\n    // This is entry point of where the graph starts rendering\n    cellData() {\n      this.loaded = true;\n      this.listLocalCopy = util.GENERATE_LIST_COPY(this.cellData);\n      // Create a key(cell name) value(cell neighbors) list dict\n      const keys = Object.entries(this.listLocalCopy);\n      keys.forEach(item => {\n        this.keyValueDict[item[1][0]] = item[1][1];\n      });\n\n      for (let i = 0; i < this.listLocalCopy.length; i++) {\n        this.listLocalCopy[i].push(i.toString());\n      }\n      this.showGraph();\n    },\n\n    selectedCellTypeList() {\n      let curList = this.selectedCellTypeList;\n      this.cellType1 = \"\";\n      this.cellType2 = \"\";\n\n      if (curList.length == 1) {\n        this.cellType1 = curList[0];\n      } else if (curList.length == 2) {\n        this.cellType1 = curList[0];\n        this.cellType2 = curList[1];\n      }\n      // Set all cell nodes back to default\n      let svgClear = d3.select(this.$refs.graph).select(\"svg\");\n      svgClear\n        .selectAll(\".cell\")\n        .style(\"r\", config.NODE_RADIUS_DEFAULT)\n        .transition()\n        .style(\"fill\", config.CELL_TYPE_DEFAULT_COLOR);\n      // Highlight the node being selected\n      for (let i = 0; i < curList.length; i++) {\n        let svgHighlight = d3.select(this.$refs.graph).select(\"svg\");\n        svgHighlight\n          .select(\"#circle-\" + util.FORMAT_TO_ID(curList[i]))\n          .style(\"r\", config.NODE_RADIUS_POPPED)\n          .transition()\n          .style(\"fill\", config.CELL_TYPE_CHANGED_COLOR);\n      }\n    },\n\n    // Maintain selected cell type in display list\n    selectedCellName() {\n      let curList = this.selectedCellTypeList;\n      while (curList.length >= this.listSize) {\n        curList.pop();\n      }\n      curList.push(this.selectedCellName);\n      this.$store.dispatch(\"changeSelectedCellTypeList\", curList);\n    },\n\n    /**\n     * Fade cell types that does not contain selected gene as top 10\n     */\n    geneSelected() {\n      let globalThis = this;\n      let dict = this.loadedDictData;\n      /* Reset default cell opacity(1) */\n      d3.select(this.$refs.graph).select(\"svg\");\n      d3.selectAll(\".cell\").style(\"opacity\", 1);\n      /* Reset link opacity(1) and width(0.5) */\n      d3.select(this.$refs.graph).select(\"svg\");\n      d3.selectAll(\".link\")\n        .style(\"opacity\", 1.0)\n        .attr(\"stroke-width\", 0.5);\n\n      if (this.geneSelected === \"\") {\n        return;\n      }\n\n      let cellTypesThatFitCriteria = new Set();\n\n      /* Determine if each cell type contain selected gene as its top 10 */\n      for (const cellType of Object.entries(dict)) {\n        let cellName = cellType[0];\n        let cellValues = cellType[1];\n        let geneExist = false;\n        for (const gene of cellValues) {\n          let geneName = gene[2];\n          if (this.geneSelected === geneName) {\n            geneExist = true;\n            break;\n          }\n        }\n        /* If a gene is not among a cell type's top 10 */\n        if (!geneExist) {\n          /* Fade the cell type on graph */\n          let svgFade = d3.select(this.$refs.graph).select(\"svg\");\n          svgFade\n            .select(\"#circle-\" + util.FORMAT_TO_ID(cellName))\n            .style(\"opacity\", 0.2);\n        } else {\n          /* Add it to the cell type set */\n          cellTypesThatFitCriteria.add(\n            cellName\n              .replace(/-/g, \" \")\n              .replace(/\\(/g, \"\")\n              .replace(/\\)/g, \"\")\n              .replace(/,/, \"\")\n              .replace(/\\//g, \"-\")\n          );\n        }\n      }\n\n      /**\n       * Current edge cases of nodes that needs to be manually faded,\n       * need to figure out what happened here.\n       */\n      let svgEdgeCase1 = d3.select(this.$refs.graph).select(\"svg\");\n      svgEdgeCase1\n        .select(\"#circle-\" + util.FORMAT_TO_ID(\"cell\"))\n        .style(\"opacity\", 0.2);\n      let svgEdgeCase2 = d3.select(this.$refs.graph).select(\"svg\");\n      svgEdgeCase2\n        .select(\"#circle-\" + util.FORMAT_TO_ID(\"native cell\"))\n        .style(\"opacity\", 0.2);\n      let svgEdgeCase3 = d3.select(this.$refs.graph).select(\"svg\");\n      svgEdgeCase3\n        .select(\"#circle-\" + util.FORMAT_TO_ID(\"eukaryotic cell\"))\n        .style(\"opacity\", 0.2);\n\n      /**\n       * Fade links does not have both nodes contained in our node set\n       */\n      d3.select(this.$refs.graph)\n        .select(\"svg\")\n        .selectAll(\".link\")\n        .each(function() {\n          let linkArray = d3\n            .select(this)\n            .attr(\"id\")\n            .split(\"---\");\n          for (let i = 0; i < linkArray.length; i++) {\n            linkArray[i] = linkArray[i]\n              .replace(/-/g, \" \")\n              .replace(/\\(/g, \"\")\n              .replace(/\\)/g, \"\")\n              .replace(/,/, \"\")\n              .replace(/\\//g, \"-\");\n          }\n          if (\n            !cellTypesThatFitCriteria.has(linkArray[0]) ||\n            !cellTypesThatFitCriteria.has(linkArray[1]) ||\n            globalThis.linkArrayEdgeCases(linkArray[0]) ||\n            globalThis.linkArrayEdgeCases(linkArray[1])\n          ) {\n            d3.select(this).style(\"opacity\", 0.2);\n          } else {\n            // Increase the stroke width if fit all the criteria\n            d3.select(this).attr(\"stroke-width\", 3);\n          }\n        });\n    }\n  },\n  \n  mounted() {\n    this.fetchData();\n  },\n  \n  methods: {\n    async fetchData() {\n      let data = await d3.json(\"./top_abs_10_dict.json\");\n      this.loadedDictData = data;\n    },\n\n    /**\n     * If any of these edge cases nodes are contained,\n     * return true (need to fade the edge in current case)\n     */\n    linkArrayEdgeCases(edgeCaseCheck) {\n      return (\n        edgeCaseCheck === \"cell\" ||\n        edgeCaseCheck === \"native cell\" ||\n        edgeCaseCheck === \"eukaryotic cell\"\n      );\n    },\n\n    /**\n     * Draw, layout and show graph on view\n     */\n    showGraph() {\n      let graph = jsonToGraph(this.cellData);\n      analyzeGraph(graph);\n      primaryParent(graph);\n      for (let i = 0; i < 20; i++) {\n        simpleSorter(graph, 3, i);\n      }\n      graph.links.forEach(\n        link =>\n          (link.color =\n            link.target.primaryParent == link.source ? \"#42b983\" : \"#42b983\")\n      );\n      treeLayout(graph);\n      drawGraph(graph, this.$refs.graph, this);\n    }\n  }\n};\n</script>\n\n<style scoped></style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CellGraph.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CellGraph.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CellGraph.vue?vue&type=template&id=0f921535&scoped=true&\"\nimport script from \"./CellGraph.vue?vue&type=script&lang=js&\"\nexport * from \"./CellGraph.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0f921535\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\",\"align-center\":\"\"}},[_c('v-flex',{attrs:{\"md12\":\"\"}},[_c('v-card',{style:({\n        background:\n          _vm.$vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n            .background\n      }),attrs:{\"max-height\":\"595\"}},[_c('v-card-title',{staticClass:\"justify-center\"},[_c('h4',{staticClass:\"view-title\"},[_vm._v(\"\\n          Gene Details View\\n        \")]),_c('v-spacer'),_c('v-btn',{attrs:{\"medium\":\"\",\"color\":\"red\",\"justify-right\":\"\",\"dark\":\"\"},on:{\"click\":_vm.removeGeneDetails}},[_c('v-icon',{attrs:{\"dark\":\"\"}},[_vm._v(\"\\n            remove_circle\\n          \")])],1)],1),(_vm.geneNotEmpty())?_c('v-card-text',[_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"md9\":\"\",\"sm12\":\"\"}},[_c('v-text-field',{attrs:{\"append-icon\":\"search\",\"label\":\"search\",\"single-line\":\"\",\"hide-details\":\"\",\"hide-no-data\":\"\"},model:{value:(_vm.search),callback:function ($$v) {_vm.search=$$v},expression:\"search\"}})],1),_c('v-spacer'),(_vm.geneNotEmpty())?_c('v-flex',{attrs:{\"md3\":\"\",\"sm12\":\"\"}},[_c('v-select',{attrs:{\"items\":_vm.sortOptions,\"label\":\"sort\"},on:{\"input\":_vm.sortBasedOnOption},model:{value:(_vm.option),callback:function ($$v) {_vm.option=$$v},expression:\"option\"}})],1):_vm._e()],1),_c('v-layout',[(_vm.geneNotEmpty())?_c('v-flex',[_c('h3',{staticClass:\"sub-title\"},[_vm._v(\"\\n              Gene: \"+_vm._s(_vm.geneSelectedPresentedName)+\"\\n            \")]),_c('div',{staticClass:\"gene-description\"},[_vm._v(\"\\n              \"+_vm._s(_vm.geneSelectedDescription)+\"\\n            \")]),_c('v-list',{staticClass:\"list\",class:{ 'max-height': _vm.listHeight },style:({\n                background:\n                  _vm.$vuetify.theme.themes[\n                    this.$store.getters.getCurrentThemeMode\n                  ].background\n              })},_vm._l((_vm.filteredGeneCellList),function(value,index){return _c('v-list-item',{key:index,on:{\"click\":function($event){return _vm.setSelectedCellTypeList(value[0])}}},[_c('v-layout',[_c('v-flex',{staticClass:\"index\",attrs:{\"md3\":\"\",\"offset-md1\":\"\"}},[_vm._v(\"\\n                    \"+_vm._s(value[0])+\": \\n                  \")]),_c('v-flex',{attrs:{\"md6\":\"\",\"offset-md1\":\"\"}},[_c('span',[_c('v-tooltip',{attrs:{\"top\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\n              var on = ref.on;\nreturn [_c('v-progress-linear',_vm._g({attrs:{\"value\":_vm.setGeneIndexBarChartRatio(value, 0),\"color\":_vm.setGeneIndexBarChartColor(value, 1),\"height\":\"15\",\"rounded\":\"\",\"striped\":\"\",\"reactive\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\n              var value = ref.value;\nreturn [_vm._v(\"\\n                              \"+_vm._s(((value / 100) * _vm.maxGeneMagnitude).toFixed(\n                                  _vm.fixedGeneDigits\n                                ))+\"\\n                            \")]}}],null,true)},on))]}}],null,true)},[_c('span',[_vm._v(_vm._s(value[1]))])])],1)])],1)],1)}),1)],1):_vm._e()],1)],1):_vm._e()],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-layout\n    row\n    wrap\n    align-center\n  >\n    <v-flex md12>\n      <v-card\n        max-height=\"595\"\n        :style=\"{\n          background:\n            $vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n              .background\n        }\"\n      >\n        <v-card-title class=\"justify-center\">\n          <h4 class=\"view-title\">\n            Gene Details View\n          </h4>\n          <v-spacer />\n          <v-btn\n            medium\n            color=\"red\"\n            justify-right\n            dark\n            @click=\"removeGeneDetails\"\n          >\n            <v-icon dark>\n              remove_circle\n            </v-icon>\n          </v-btn>\n        </v-card-title>\n        <v-card-text v-if=\"geneNotEmpty()\">\n          <v-layout\n            row\n            wrap\n          >\n            <v-flex\n              md9\n              sm12\n            >\n              <v-text-field\n                v-model=\"search\"\n                append-icon=\"search\"\n                label=\"search\"\n                single-line\n                hide-details\n                hide-no-data\n              />\n            </v-flex>\n            <v-spacer />\n            <v-flex\n              v-if=\"geneNotEmpty()\"\n              md3\n              sm12\n            >\n              <v-select\n                v-model=\"option\"\n                :items=\"sortOptions\"\n                label=\"sort\"\n                @input=\"sortBasedOnOption\"\n              />\n            </v-flex>\n          </v-layout>\n          <v-layout>\n            <v-flex v-if=\"geneNotEmpty()\">\n              <h3 class=\"sub-title\">\n                Gene: {{ geneSelectedPresentedName }}\n              </h3>\n              <div class=\"gene-description\">\n                {{ geneSelectedDescription }}\n              </div>\n              <v-list\n                :class=\"{ 'max-height': listHeight }\"\n                class=\"list\"\n                :style=\"{\n                  background:\n                    $vuetify.theme.themes[\n                      this.$store.getters.getCurrentThemeMode\n                    ].background\n                }\"\n              >\n                <v-list-item\n                  v-for=\"(value, index) in filteredGeneCellList\"\n                  :key=\"index\"\n                  @click=\"setSelectedCellTypeList(value[0])\"\n                >\n                  <v-layout>\n                    <v-flex\n                      md3\n                      offset-md1\n                      class=\"index\"\n                    >\n                      {{ value[0] }}:&nbsp;\n                    </v-flex>\n                    <v-flex\n                      md6\n                      offset-md1\n                    >\n                      <span>\n                        <v-tooltip top>\n                          <template v-slot:activator=\"{ on }\">\n                            <v-progress-linear\n                              :value=\"setGeneIndexBarChartRatio(value, 0)\"\n                              :color=\"setGeneIndexBarChartColor(value, 1)\"\n                              height=\"15\"\n                              rounded\n                              striped\n                              reactive\n                              v-on=\"on\"\n                            >\n                              <template v-slot=\"{ value }\">\n                                {{\n                                  ((value / 100) * maxGeneMagnitude).toFixed(\n                                    fixedGeneDigits\n                                  )\n                                }}\n                              </template>\n                            </v-progress-linear>\n                          </template>\n                          <span>{{ value[1] }}</span>\n                        </v-tooltip>\n                      </span>\n                    </v-flex>\n                  </v-layout>\n                </v-list-item>\n              </v-list>\n            </v-flex>\n          </v-layout>\n        </v-card-text>\n      </v-card>\n    </v-flex>\n  </v-layout>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\n\nexport default {\n  name: \"GeneDetails\",\n\n  props: [],\n  \n  data() {\n    return {\n      cellTypeNames: [],\n      filteredList: [],\n      fixedGeneDigits: 5,\n      geneSelectedPresentedName: \"\",\n      geneSelectedDescription: \"\",\n      listHeight: \"400px\",\n      loadedDictData: {},\n      loadedGeneIdToNameDict: {},\n      loadedGeneIdToDescriptionDict: {},\n      maxGeneMagnitude: 0.14907,\n      sortOptions: [\"default\", \"strength\", \"magnitude\", \"cell type name\"]\n    };\n  },\n\n  computed: {\n    filteredGeneCellList() {\n      return this.$store.getters.getGeneSortOption === \"default\"\n        ? this.returnToDefaultList()\n        : this.sortBasedOnOption(this.$store.getters.getGeneSortOption);\n    },\n\n    geneSelected: {\n      get() {\n        return this.$store.getters.getSelectedGene;\n      },\n      set(option) {\n        this.$store.dispatch(\"changeSelectedGene\", option);\n      }\n    },\n\n    option: {\n      get() {\n        return this.$store.getters.getGeneSortOption;\n      },\n      set(option) {\n        this.$store.dispatch(\"changeGeneSortOption\", option);\n      }\n    },\n\n    search: {\n      get() {\n        return this.$store.getters.getCellTypeSearchEntryInGeneDetailsView;\n      },\n      set(input) {\n        this.$store.dispatch(\"changeCellTypeSearchEntryInGeneDetailsView\", input);\n      }\n    }\n  },\n\n  watch: {\n    geneSelected() {\n      // Change sorting back to default\n      this.$store.dispatch(\"changeGeneSortOption\", \"default\");\n      let globalThis = this;\n      // Clear both local list and store to receive updated values\n      globalThis.filteredList = [];\n      this.$store.dispatch(\"changeCellTypesThatHaveSelectedGeneAsTopValue\", []);\n      this.geneSelectedPresentedName = this.loadedGeneIdToNameDict[\n        this.geneSelected\n      ];\n      this.geneSelectedDescription = this.loadedGeneIdToDescriptionDict[\n        this.geneSelected\n      ];\n\n      for (const [key, value] of Object.entries(this.loadedDictData)) {\n        let geneArr = value;\n        for (let i = 0; i < geneArr.length; i++) {\n          if (geneArr[i][2] === globalThis.geneSelected) {\n            let cellName = key;\n            let geneValue = value[i][1];\n            globalThis.filteredList.push([cellName, geneValue]);\n            globalThis.$store.dispatch(\"addToCellTypesThatHaveSelectedGeneAsTopValue\", [\n              cellName,\n              geneValue\n            ]);\n          }\n        }\n      }\n    }\n  },\n  mounted() {\n    // Fetch gene data once mounted\n    this.fetchData();\n  },\n  methods: {\n    async fetchData() {\n      this.loadedDictData = await d3.json(\"./top_abs_10_dict.json\");\n      this.loadedGeneIdToNameDict = await d3.json(\"./gene_id_to_name.json\");\n      this.loadedGeneIdToDescriptionDict = await d3.json(\n        \"gene_id_to_description.json\"\n      );\n    },\n\n    filterBySearchList(list) {\n      let globalThis = this;\n      let filterBySearchList = [];\n      list.forEach(element => {\n        let lowerCaseElement = element[0].toLowerCase();\n        if (lowerCaseElement.includes(globalThis.search.toLowerCase())) {\n          filterBySearchList.push(element);\n        }\n      });\n      return filterBySearchList;\n    },\n\n    geneNotEmpty() {\n      return this.geneSelected !== \"\";\n    },\n\n    navigateToGenePage() {\n      window.open(\n        \"http://useast.ensembl.org/Homo_sapiens/Gene/Summary?g=\" +\n          this.geneSelected\n      );\n    },\n\n    removeGeneDetails() {\n      this.$store.dispatch(\"changeSelectedGene\", \"\");\n    },\n\n    returnToDefaultList() {\n      let list = [];\n      let globalThis = this;\n      for (const [key, value] of Object.entries(this.loadedDictData)) {\n        let geneArr = value;\n        for (let i = 0; i < geneArr.length; i++) {\n          if (geneArr[i][2] === globalThis.geneSelected) {\n            let cellName = key;\n            let geneValue = value[i][1].toFixed(this.fixedGeneDigits);\n            list.push([cellName, geneValue]);\n          }\n        }\n      }\n\n      return this.filterBySearchList(list);\n    },\n\n    setSelectedCellTypeList(cellName) {\n      let curList = this.$store.getters.getSelectedCellTypeList;\n      if (curList.length > 1) {\n        curList.pop();\n      }\n      curList.push(cellName);\n      this.$store.dispatch(\"changeSelectedCellTypeList\", curList);\n    },\n\n    sortBasedOnOption(option) {\n      switch (option) {\n        case \"default\":\n          return this.filterBySearchList(this.filteredList);\n        case \"strength\":\n          return this.filterBySearchList(\n            this.filteredList.sort((a, b) =>\n              Math.abs(a[1]) > Math.abs(b[1]) ? -1 : 1\n            )\n          );\n        case \"magnitude\":\n          return this.filterBySearchList(\n            this.filteredList.sort((a, b) => (a[1] > b[1] ? -1 : 1))\n          );\n        case \"cell type name\":\n          return this.filterBySearchList(\n            this.filteredList.sort((a,b) => (a[0].toLowerCase() < b[0].toLowerCase() ? -1 : 1))\n          )\n      }\n    },\n\n    topGeneDataExist(topGenes) {\n      return typeof topGenes[this.geneSelected] !== \"undefined\";\n    },\n\n    setGeneIndexBarChartRatio(geneValues, columnIndex) {\n      let globalThis = this;\n      let value = geneValues[1];\n      if (columnIndex == 0) {\n        return Math.abs(\n          ((value / globalThis.maxGeneMagnitude) * 100).toFixed(\n            globalThis.fixedGeneDigits\n          )\n        );\n      }\n    },\n\n    setGeneIndexBarChartColor(geneValues) {\n      let value = geneValues[1];\n      if (value >= 0) {\n        return \"primary\";\n      } else {\n        return \"pink\";\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\nv-card-title {\n  margin: 100px;\n}\n.list {\n  max-height: 355px;\n  overflow-y: auto;\n}\n.gene-web-link {\n  text-align: left;\n  margin-top: 10px;\n  text-decoration: underline;\n}\n.gene-description {\n  text-align: left;\n  font-weight: normal;\n  font-size: medium;\n  margin-top: 10px;\n  color: \"#fff\";\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GeneDetails.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GeneDetails.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GeneDetails.vue?vue&type=template&id=38d9dd14&scoped=true&\"\nimport script from \"./GeneDetails.vue?vue&type=script&lang=js&\"\nexport * from \"./GeneDetails.vue?vue&type=script&lang=js&\"\nimport style0 from \"./GeneDetails.vue?vue&type=style&index=0&id=38d9dd14&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"38d9dd14\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\",\"align-center\":\"\"}},[_c('v-flex',{attrs:{\"md12\":\"\"}},[_c('v-card',{style:({\n        background:\n          _vm.$vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n            .background\n      }),attrs:{\"max-height\":\"1300\"}},[_c('v-card-title',[_c('h4',{staticClass:\"view-title\"},[_vm._v(\"\\n          Cell Details View\\n        \")]),_c('v-spacer'),_c('v-btn',{attrs:{\"medium\":\"\",\"color\":\"red\",\"justify-right\":\"\",\"dark\":\"\"},on:{\"click\":_vm.popFromSelectedCellTypeList}},[_c('v-icon',{attrs:{\"dark\":\"\"}},[_vm._v(\"\\n            remove_circle\\n          \")])],1)],1),(\n          _vm.selectedCellTypeListNotEmpty() &&\n            _vm.geneDataExist(_vm.selectedCellTypeList[0])\n        )?_c('v-card-text',[_c('v-layout',{attrs:{\"row\":\"\"}},[_c('v-flex',{attrs:{\"md12\":\"\",\"sm12\":\"\"}},[_c('v-layout',[_c('v-flex',{attrs:{\"md9\":\"\",\"sm12\":\"\"}},[_c('v-text-field',{attrs:{\"append-icon\":\"search\",\"label\":\"search\",\"single-line\":\"\",\"hide-details\":\"\",\"hide-no-data\":\"\"},model:{value:(_vm.search),callback:function ($$v) {_vm.search=$$v},expression:\"search\"}})],1),_c('v-flex',{attrs:{\"md3\":\"\",\"sm12\":\"\"}},[_c('v-select',{attrs:{\"items\":_vm.sortOptions,\"label\":\"sort\"},on:{\"input\":_vm.sortBasedOnOption},model:{value:(_vm.option),callback:function ($$v) {_vm.option=$$v},expression:\"option\"}})],1)],1),_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"md6\":\"\",\"sm6\":\"\"}},[_c('h3',{staticClass:\"sub-title\"},[_vm._v(\"\\n                  \"+_vm._s(_vm.selectedCellTypeList[0])+\"\\n                \")]),_c('v-list',{staticClass:\"list\",style:({\n                    background:\n                      _vm.$vuetify.theme.themes[\n                        this.$store.getters.getCurrentThemeMode\n                      ].background\n                  })},_vm._l((_vm.filteredData[0]),function(value,index){return _c('v-list-item',{key:index,class:[\n                      value[2] === _vm.geneNameOnHover ? 'highlight-theme' : ''\n                    ],attrs:{\"color\":_vm.setOverlapGeneBackgroundColor(index, value, 0),\"input-value\":\"true\",\"dense\":\"\"},on:{\"click\":function($event){return _vm.setGeneItem(value)},\"mouseover\":function($event){return _vm.setGeneNameOnHover(index, value)},\"mouseleave\":function($event){return _vm.clearGeneNameOnHover()}}},[_c('v-layout',[_c('v-flex',{attrs:{\"md5\":\"\",\"sm5\":\"\"}},[_c('span',{staticClass:\"index\"},[_vm._v(_vm._s(_vm.loadedGeneIdToNameDict[value[2]])+\":\")])]),_c('v-flex',{attrs:{\"md7\":\"\",\"sm7\":\"\"}},[_c('span',[_c('v-tooltip',{attrs:{\"top\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\n                    var on = ref.on;\nreturn [_c('v-progress-linear',_vm._g({attrs:{\"value\":_vm.setGeneIndexBarChartRatio(\n                                    (\"\" + index),\n                                    (\"\" + value)\n                                  ),\"color\":_vm.setGeneIndexBarChartColor(\n                                    (\"\" + index),\n                                    (\"\" + value)\n                                  ),\"height\":\"15\",\"rounded\":\"\",\"striped\":\"\",\"reactive\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\n                                  var value = ref.value;\nreturn [_vm._v(\"\\n                                  \"+_vm._s((\n                                      (value / 100) *\n                                      _vm.maxGeneMagnitude\n                                    ).toFixed(_vm.fixedGeneDigits))+\"\\n                                \")]}}],null,true)},on))]}}],null,true)},[_c('span',[_vm._v(_vm._s(value[1]))])])],1)])],1)],1)}),1)],1),(\n                  _vm.selectedCellTypeList.length == 2 &&\n                    _vm.geneDataExist(_vm.selectedCellTypeList[1])\n                )?_c('v-flex',{attrs:{\"md6\":\"\",\"sm6\":\"\"}},[_c('h3',{staticClass:\"sub-title\"},[_vm._v(\"\\n                  \"+_vm._s(_vm.selectedCellTypeList[1])+\"\\n                \")]),_c('v-list',{staticClass:\"list\",style:({\n                    background:\n                      _vm.$vuetify.theme.themes[\n                        this.$store.getters.getCurrentThemeMode\n                      ].background\n                  })},_vm._l((_vm.filteredData[1]),function(value,index){return _c('v-list-item',{key:index,class:[\n                      value[2] === _vm.geneNameOnHover ? 'highlight-theme' : ''\n                    ],attrs:{\"color\":_vm.setOverlapGeneBackgroundColor(index, value, 1),\"input-value\":\"true\",\"dense\":\"\"},on:{\"click\":function($event){return _vm.setGeneItem(value)},\"mouseover\":function($event){return _vm.setGeneNameOnHover(index, value)},\"mouseleave\":function($event){return _vm.clearGeneNameOnHover()}}},[_c('v-layout',[_c('v-flex',{attrs:{\"md5\":\"\",\"sm12\":\"\"}},[_c('span',{staticClass:\"index\"},[_vm._v(_vm._s(_vm.loadedGeneIdToNameDict[value[2]])+\":\")])]),_c('v-flex',{attrs:{\"md7\":\"\",\"sm12\":\"\"}},[_c('span',[_c('v-tooltip',{attrs:{\"top\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\n                    var on = ref.on;\nreturn [_c('v-progress-linear',_vm._g({attrs:{\"value\":_vm.setGeneIndexBarChartRatio(\n                                    (\"\" + index),\n                                    (\"\" + value)\n                                  ),\"color\":_vm.setGeneIndexBarChartColor(\n                                    (\"\" + index),\n                                    (\"\" + value)\n                                  ),\"height\":\"15\",\"rounded\":\"\",\"striped\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\n                                  var value = ref.value;\nreturn [_vm._v(\"\\n                                  \"+_vm._s((\n                                      (value / 100) *\n                                      _vm.maxGeneMagnitude\n                                    ).toFixed(_vm.fixedGeneDigits))+\"\\n                                \")]}}],null,true)},on))]}}],null,true)},[_c('span',[_vm._v(_vm._s(value[1]))])])],1)])],1)],1)}),1)],1):_vm._e()],1)],1)],1)],1):_vm._e()],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-layout row wrap align-center>\n    <v-flex md12>\n      <v-card\n        max-height=\"1300\"\n        :style=\"{\n          background:\n            $vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n              .background\n        }\"\n      >\n        <v-card-title>\n          <h4 class=\"view-title\">\n            Cell Details View\n          </h4>\n          <v-spacer />\n          <v-btn\n            medium\n            color=\"red\"\n            justify-right\n            dark\n            @click=\"popFromSelectedCellTypeList\"\n          >\n            <v-icon dark>\n              remove_circle\n            </v-icon>\n          </v-btn>\n        </v-card-title>\n\n        <v-card-text\n          v-if=\"\n            selectedCellTypeListNotEmpty() &&\n              geneDataExist(selectedCellTypeList[0])\n          \"\n        >\n          <v-layout row>\n            <v-flex md12 sm12>\n              <v-layout>\n                <!-- Search Box -->\n                <v-flex md9 sm12>\n                  <v-text-field\n                    v-model=\"search\"\n                    append-icon=\"search\"\n                    label=\"search\"\n                    single-line\n                    hide-details\n                    hide-no-data\n                  />\n                </v-flex>\n\n                <!-- Sort Box -->\n                <v-flex md3 sm12>\n                  <v-select\n                    v-model=\"option\"\n                    :items=\"sortOptions\"\n                    label=\"sort\"\n                    @input=\"sortBasedOnOption\"\n                  />\n                </v-flex>\n              </v-layout>\n\n              <!-- Cell Type Top Gene list -->\n              <v-layout row wrap>\n                <v-flex md6 sm6>\n                  <h3 class=\"sub-title\">\n                    {{ selectedCellTypeList[0] }}\n                  </h3>\n                  <v-list\n                    class=\"list\"\n                    :style=\"{\n                      background:\n                        $vuetify.theme.themes[\n                          this.$store.getters.getCurrentThemeMode\n                        ].background\n                    }\"\n                  >\n                    <v-list-item\n                      v-for=\"(value, index) in filteredData[0]\"\n                      :key=\"index\"\n                      :color=\"setOverlapGeneBackgroundColor(index, value, 0)\"\n                      input-value=\"true\"\n                      dense\n                      :class=\"[\n                        value[2] === geneNameOnHover ? 'highlight-theme' : ''\n                      ]\"\n                      @click=\"setGeneItem(value)\"\n                      @mouseover=\"setGeneNameOnHover(index, value)\"\n                      @mouseleave=\"clearGeneNameOnHover()\"\n                    >\n                      <v-layout>\n                        <v-flex md5 sm5>\n                          <span class=\"index\"\n                            >{{ loadedGeneIdToNameDict[value[2]] }}:</span\n                          >\n                        </v-flex>\n                        <v-flex md7 sm7>\n                          <span>\n                            <v-tooltip top>\n                              <template v-slot:activator=\"{ on }\">\n                                <v-progress-linear\n                                  :value=\"\n                                    setGeneIndexBarChartRatio(\n                                      `${index}`,\n                                      `${value}`\n                                    )\n                                  \"\n                                  :color=\"\n                                    setGeneIndexBarChartColor(\n                                      `${index}`,\n                                      `${value}`\n                                    )\n                                  \"\n                                  height=\"15\"\n                                  rounded\n                                  striped\n                                  reactive\n                                  v-on=\"on\"\n                                >\n                                  <template v-slot=\"{ value }\">\n                                    {{\n                                      (\n                                        (value / 100) *\n                                        maxGeneMagnitude\n                                      ).toFixed(fixedGeneDigits)\n                                    }}\n                                  </template></v-progress-linear\n                                >\n                              </template>\n                              <span>{{ value[1] }}</span>\n                            </v-tooltip>\n                          </span>\n                        </v-flex>\n                      </v-layout>\n                    </v-list-item>\n                  </v-list>\n                </v-flex>\n                <v-flex\n                  v-if=\"\n                    selectedCellTypeList.length == 2 &&\n                      geneDataExist(selectedCellTypeList[1])\n                  \"\n                  md6\n                  sm6\n                >\n                  <h3 class=\"sub-title\">\n                    {{ selectedCellTypeList[1] }}\n                  </h3>\n                  <v-list\n                    class=\"list\"\n                    :style=\"{\n                      background:\n                        $vuetify.theme.themes[\n                          this.$store.getters.getCurrentThemeMode\n                        ].background\n                    }\"\n                  >\n                    <v-list-item\n                      v-for=\"(value, index) in filteredData[1]\"\n                      :key=\"index\"\n                      :color=\"setOverlapGeneBackgroundColor(index, value, 1)\"\n                      input-value=\"true\"\n                      dense\n                      :class=\"[\n                        value[2] === geneNameOnHover ? 'highlight-theme' : ''\n                      ]\"\n                      @click=\"setGeneItem(value)\"\n                      @mouseover=\"setGeneNameOnHover(index, value)\"\n                      @mouseleave=\"clearGeneNameOnHover()\"\n                    >\n                      <v-layout>\n                        <v-flex md5 sm12>\n                          <span class=\"index\"\n                            >{{ loadedGeneIdToNameDict[value[2]] }}:</span\n                          >\n                        </v-flex>\n                        <v-flex md7 sm12>\n                          <span>\n                            <v-tooltip top>\n                              <template v-slot:activator=\"{ on }\">\n                                <v-progress-linear\n                                  :value=\"\n                                    setGeneIndexBarChartRatio(\n                                      `${index}`,\n                                      `${value}`\n                                    )\n                                  \"\n                                  :color=\"\n                                    setGeneIndexBarChartColor(\n                                      `${index}`,\n                                      `${value}`\n                                    )\n                                  \"\n                                  height=\"15\"\n                                  rounded\n                                  striped\n                                  v-on=\"on\"\n                                >\n                                  <template v-slot=\"{ value }\">\n                                    {{\n                                      (\n                                        (value / 100) *\n                                        maxGeneMagnitude\n                                      ).toFixed(fixedGeneDigits)\n                                    }}\n                                  </template>\n                                </v-progress-linear>\n                              </template>\n                              <span>{{ value[1] }}</span>\n                            </v-tooltip>\n                          </span>\n                        </v-flex>\n                      </v-layout>\n                    </v-list-item>\n                  </v-list>\n                </v-flex>\n              </v-layout>\n            </v-flex>\n          </v-layout>\n        </v-card-text>\n      </v-card>\n    </v-flex>\n  </v-layout>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\nimport _ from \"lodash\";\nimport { COLOR_RAMP } from \"../config\";\n\nexport default {\n  name: \"CellDetails\",\n\n  props: [],\n\n  data() {\n    return {\n      cardHighlight: false,\n      fixedGeneDigits: 5,\n      maxGeneMagnitude: 0.14907,\n      loadedGeneData: {},\n      loadedGeneIdToNameDict: {},\n      sortOptions: [\"default\", \"magnitude\", \"coordinated\"],\n      geneNameOnHover: \"\"\n    };\n  },\n\n  computed: {\n    selectedCellTypeList: {\n      get() {\n        return this.$store.getters.getSelectedCellTypeList;\n      }\n    },\n\n    currentCellTypes() {\n      return this.$store.getters.getCellTypeSortOption === \"default\"\n        ? this.getDefaultCellTypes()\n        : this.sortCellTypeList();\n    },\n\n    dynamicData() {\n      if (this.geneCellCopy1.length == 0) {\n        return;\n      } else {\n        return this.$store.getters.getCellDetails;\n      }\n    },\n\n    filteredData() {\n      let globalThis = this;\n\n      if (this.$store.getters.getGeneSearchEntry === \"\") {\n        return this.currentCellTypes;\n      } else {\n        let resultArr = [];\n        let cellTypes = this.currentCellTypes;\n        let cell1FilteredArray = [];\n        let cell2FilteredArray = [];\n        if (cellTypes.length > 1) {\n          cellTypes[1].forEach(element => {\n            // Map the gene id to name before converting to lower case for search matching\n            let lowerCaseElement = globalThis.loadedGeneIdToNameDict[\n              element[2]\n            ].toLowerCase();\n            if (lowerCaseElement.includes(globalThis.search.toLowerCase())) {\n              cell2FilteredArray.push(element);\n            }\n          });\n        }\n        if (cellTypes.length > 0) {\n          cellTypes[0].forEach(element => {\n            // Map the gene id to name before converting to lower case for search matching\n            let lowerCaseElement = globalThis.loadedGeneIdToNameDict[\n              element[2]\n            ].toLowerCase();\n            if (lowerCaseElement.includes(globalThis.search.toLowerCase())) {\n              cell1FilteredArray.push(element);\n            }\n          });\n        }\n        resultArr.push(cell1FilteredArray);\n        resultArr.push(cell2FilteredArray);\n        return resultArr;\n      }\n    },\n\n    option: {\n      get() {\n        return this.$store.getters.getCellTypeSortOption;\n      },\n      set(option) {\n        this.$store.dispatch(\"changeCellTypeSortOption\", option);\n      }\n    },\n\n    search: {\n      get() {\n        return this.$store.getters.getGeneSearchEntry;\n      },\n      set(input) {\n        this.$store.dispatch(\"changeGeneSearchEntry\", input);\n      }\n    },\n    selectedTheme() {\n      return this.onHover === true ? \"highlight-theme\" : \"\";\n    }\n  },\n\n  watch: {\n    selectedCellTypeList() {\n      let cellArr = this.$store.getters.getSelectedCellTypeList;\n      this.$store.dispatch(\"changeCellTypeDetailsList\", []);\n      if (cellArr.length === 0) {\n        return;\n      }\n      this.geneCellCopy1 = this.loadedGeneData[cellArr[0]];\n      this.$store.dispatch(\"addToCellTypeDetailsList\", this.geneCellCopy1);\n\n      let geneDataColumnOne = [];\n      for (const geneData of this.geneCellCopy1) {\n        geneDataColumnOne.push(Number(geneData[1]));\n      }\n\n      if (cellArr.length > 1) {\n        this.geneCellCopy2 = this.loadedGeneData[cellArr[1]];\n        this.$store.dispatch(\"addToCellTypeDetailsList\", this.geneCellCopy2);\n        let geneDataColumnTwo = [];\n        for (const geneData of this.geneCellCopy2) {\n          geneDataColumnTwo.push(Number(geneData[1]));\n        }\n      }\n    }\n  },\n\n  mounted() {\n    this.fetchData();\n  },\n\n  methods: {\n    sortBasedOnOption(option) {\n      let globalThis = this;\n\n      let itr = 0;\n      // Dict saves cell type name - index pair\n      let cellTypeNameIndexDict = [];\n\n      switch (option) {\n        case \"default\":\n          this.filteredData[0] = this.loadedGeneData[\n            this.$store.getters.getSelectedCellTypeList[0]\n          ];\n          if (this.filteredData.length > 1) {\n            this.filteredData[1] = this.loadedGeneData[\n              this.$store.getters.getSelectedCellTypeList[1]\n            ];\n          }\n          return;\n        case \"magnitude\":\n          _.sortBy(globalThis.filteredData[0], o => o[1], [\"desc\"]);\n          _.sortBy(globalThis.filteredData[1], o => o[1], [\"desc\"]);\n          return;\n        case \"coordinated\":\n          if (globalThis.filteredData.length <= 1) {\n            return;\n          }\n          for (let i = 0; i < globalThis.filteredData[0].length; i++) {\n            let cellTypeName = globalThis.filteredData[0][i][2];\n            cellTypeNameIndexDict[cellTypeName] = i;\n          }\n          for (let j = 0; j < globalThis.filteredData[1].length; j++) {\n            let cellTypeNameInColumnTwo = globalThis.filteredData[1][j][2];\n\n            if (cellTypeNameInColumnTwo in cellTypeNameIndexDict) {\n              let overlapCellTypeIndex =\n                cellTypeNameIndexDict[cellTypeNameInColumnTwo];\n              this.swapEntryPositions(\n                globalThis.filteredData[0],\n                overlapCellTypeIndex,\n                itr\n              );\n              this.swapEntryPositions(globalThis.filteredData[1], j, itr);\n              itr++;\n            }\n          }\n\n          return;\n      }\n    },\n\n    swapEntryPositions(list, indexA, indexB) {\n      let temp = list[indexA];\n      list[indexA] = list[indexB];\n      list[indexB] = temp;\n    },\n\n    async fetchData() {\n      this.loadedGeneData = await d3.json(\"./top_abs_10_dict.json\");\n      this.loadedGeneIdToNameDict = await d3.json(\"./gene_id_to_name.json\");\n    },\n\n    getDefaultCellTypes() {\n      let cellArr = this.$store.getters.getSelectedCellTypeList;\n      let geneCellCopy = [];\n\n      geneCellCopy.push(this.loadedGeneData[cellArr[0]]);\n      if (cellArr.length > 1) {\n        geneCellCopy.push(this.loadedGeneData[cellArr[1]]);\n      }\n      return geneCellCopy;\n    },\n\n    /**\n     * Get gene color by column and gene index, if negative display pink\n     */\n    setGeneIndexBarChartColor(index, value) {\n      let indexGeneValue = parseFloat(value.split(\",\")[1]);\n\n      if (indexGeneValue >= 0) {\n        return \"primary\";\n      } else {\n        return \"pink\";\n      }\n    },\n\n    setGeneIndexBarChartRatio(index, value) {\n      let globalThis = this;\n      let numberValue = parseFloat(value.split(\",\")[1]);\n      return Math.abs(\n        ((numberValue / globalThis.maxGeneMagnitude) * 100).toFixed(\n          globalThis.fixedGeneDigits\n        )\n      );\n    },\n\n    setOverlapGeneBackgroundColor(index, value, columnIndex) {\n      let globalThis = this;\n      let cellName = value[2];\n      if (columnIndex == 0) {\n        let filteredDataSecondRow = globalThis.filteredData[1];\n        if (globalThis.filteredData.length > 1) {\n          for (const entry of Object.entries(filteredDataSecondRow)) {\n            let geneValueObject = entry[1];\n            if (geneValueObject[2] === cellName) {\n              return COLOR_RAMP[index];\n            }\n          }\n        }\n      } else if (columnIndex == 1) {\n        let filteredDataFirstRow = globalThis.filteredData[0];\n        for (const entry of Object.entries(filteredDataFirstRow)) {\n          let geneValueObject = entry[1];\n          if (geneValueObject[2] === cellName) {\n            let geneIndexInFirstRow = entry[0];\n            return COLOR_RAMP[geneIndexInFirstRow];\n          }\n        }\n      }\n      return \"#303030\";\n    },\n\n    sortCellTypeList() {\n      let cellArr = this.selectedCellTypeList;\n      \n      let geneCellCopy = [];\n      geneCellCopy.push(\n        this.loadedGeneData[cellArr[0]]\n          .concat()\n          .sort((a, b) => (a[1] < b[1] ? 1 : -1))\n      );\n      if (cellArr.length > 1) {\n        geneCellCopy.push(\n          this.loadedGeneData[cellArr[1]]\n            .concat()\n            .sort((a, b) => (a[1] < b[1] ? 1 : -1))\n        );\n      }\n      return geneCellCopy;\n    },\n\n    popFromSelectedCellTypeList() {\n      this.$store.dispatch(\"popFromSelectedCellTypeList\");\n    },\n\n    setGeneItem(value) {\n      this.$store.dispatch(\"changeSelectedGene\", value[2]);\n    },\n\n    setGeneNameOnHover(index, value) {\n      this.geneNameOnHover = value[2];\n    },\n\n    selectedCellTypeListNotEmpty() {\n      return this.$store.getters.getSelectedCellTypeList.length != 0;\n    },\n\n    clearGeneNameOnHover() {\n      this.geneNameOnHover = \"\";\n    },\n\n    geneDataExist(cellTypeName) {\n      if (this.loadedGeneData[cellTypeName] === undefined) {\n        return false;\n      }\n      return true;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.message {\n  color: red;\n  text-align: left;\n}\n.geneName {\n  color: #c5050c;\n}\n.highlight-theme {\n  background: #34495e;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CellDetails.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CellDetails.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CellDetails.vue?vue&type=template&id=6df1d2d2&scoped=true&\"\nimport script from \"./CellDetails.vue?vue&type=script&lang=js&\"\nexport * from \"./CellDetails.vue?vue&type=script&lang=js&\"\nimport style0 from \"./CellDetails.vue?vue&type=style&index=0&id=6df1d2d2&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6df1d2d2\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"app\">\n    <v-app :dark=\"setTheme\">\n      <!--Header Section-->\n      <v-container fluid>\n        <v-layout>\n          <img class=\"logo\" color=\"primary\" src=\"../public/cello.svg\" />\n          <v-spacer></v-spacer>\n          <v-switch\n            v-model=\"goDark\"\n            color=\"primary\"\n            :label=\"selectedTheme\"\n            class=\"switch\"\n          />\n        </v-layout>\n        <Header msg=\"CellO Viewer\" />\n      </v-container>\n\n      <!--Body Section-->\n      <v-container bg grid-list-md fluid>\n        <v-layout row wrap>\n          <!-- \n          Search View \n          -->\n          <v-flex md5>\n            <SearchView\n              :cell-data=\"this.$store.getters.getCellTypeGraphStructureData\"\n            />\n          </v-flex>\n          <!-- \n          Graph View \n          -->\n          <v-flex md7>\n            <Graph\n              :cell-data=\"this.$store.getters.getCellTypeGraphStructureData\"\n            />\n          </v-flex>\n        </v-layout>\n        <v-layout row wrap>\n          <!-- \n          Gene Details View \n          -->\n          <v-flex md5>\n            <GeneDetails />\n          </v-flex>\n          <!-- \n          Cell Details View \n          -->\n          <v-flex md7>\n            <CellDetails />\n          </v-flex>\n        </v-layout>\n      </v-container>\n    </v-app>\n  </div>\n</template>\n\n<script>\n/**\n * Views\n */\nimport Header from \"@/components/TheHeader.vue\";\nimport SearchView from \"@/components/SearchView.vue\";\nimport Graph from \"@/components/CellGraph.vue\";\nimport GeneDetails from \"@/components/GeneDetails.vue\";\nimport CellDetails from \"@/components/CellDetails.vue\";\n\n/**\n * Packages\n */\nimport * as d3 from \"d3\";\n\nexport default {\n  name: \"App\",\n\n  components: {\n    Header,\n    SearchView,\n    Graph,\n    GeneDetails,\n    CellDetails\n  },\n\n  data: function() {\n    return {\n      goDark: true\n    };\n  },\n\n  computed: {\n    // Display which theme is currently on\n    selectedTheme() {\n      return this.goDark ? \"Dark Theme\" : \"Light Theme\";\n    },\n    // Toggle between light and dark theme\n    setTheme() {\n      if (this.goDark == true) {\n        this.$store.dispatch(\"changeCurrentThemeMode\", \"dark\");\n        return (this.$vuetify.theme.dark = true);\n      } else {\n        this.$store.dispatch(\"changeCurrentThemeMode\", \"light\");\n        return (this.$vuetify.theme.dark = false);\n      }\n    }\n  },\n\n  mounted() {\n    this.fetchData();\n  },\n\n  methods: {\n    // Fetch all json data and store it in vuex for children components to use\n    async fetchData() {\n      let cellTypeGraphStructureData = await d3.json(\"./cell_type_graph.json\");\n      this.$store.dispatch(\n        \"changeCellTypeGraphStructureData\",\n        cellTypeGraphStructureData\n      );\n    }\n  }\n};\n</script>\n\n<style>\n#app {\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n}\n.logo {\n  margin: 5px;\n  height: 48px;\n  width: 48px;\n}\n.switch {\n  margin: 10px;\n}\n.index {\n  color: var(--v-primary-base);\n  font-weight: bold;\n  margin: 10px;\n}\na,\nh3 {\n  color: var(--v-primary-base);\n}\n@import url(\"https://fonts.googleapis.com/css?family=BioRhyme&display=swap\");\n.view-title {\n  font-family: \"BioRhyme\", serif;\n}\n.sub-title {\n  font-weight: bold;\n  text-align: left;\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=94634db6&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","let cellTypeStates = {\n  cell_type_details_list: [],\n  selected_cell_type_list: [],\n  cell_type_graph_structure_data: {},\n  cell_type_search_entry_in_search_view: \"\",\n  cell_type_search_entry_in_gene_details_view: \"\",\n  cell_type_sort_option: \"\",\n  cell_types_that_have_selected_gene_as_top_value: [],\n};\n\nlet cellTypeStatesGetters = {\n  getCellTypeList(state) {\n    return state.cell_type_details_list;\n  },\n  getSelectedCellTypeList(state) {\n    return state.selected_cell_type_list;\n  },\n  getCellTypeGraphStructureData(state) {\n    return state.cell_type_graph_structure_data;\n  },\n  getCellTypeSearchEntryInSearchView(state) {\n    return state.cell_type_search_entry_in_search_view;\n  },\n  getCellTypeSearchEntryInGeneDetailsView(state) {\n    return state.cell_type_search_entry_in_gene_details_view;\n  },\n  getCellTypeSortOption(state) {\n    return state.cell_type_sort_option;\n  },\n  getCellTypesThatHaveSelectedGeneAsTopValue(state) {\n    return state.cell_types_that_have_selected_gene_as_top_value;\n  },\n};\n\nlet cellTypeModule = {\n    state: cellTypeStates,\n    getters: cellTypeStatesGetters\n}\n\nexport default cellTypeModule;\n","let cellTypeMutations = {\n  ADD_TO_CELL_TYPE_DETAILS_LIST(state, payload) {\n    state.cell_type_details_list.push(payload);\n  },\n  CHANGE_CELL_TYPE_DETAILS_LIST(state, payload) {\n    state.cell_type_details_list = payload;\n  },\n\n  ADD_TO_SELECTED_CELL_TYPE_LIST(state, payload) {\n    state.selected_cell_type_list.push(payload);\n  },\n  CHANGE_SELECTED_CELL_TYPE_LIST(state, payload) {\n    state.selected_cell_type_list = payload;\n  },\n  POP_FROM_SELECTED_CELL_TYPE_LIST(state) {\n    state.selected_cell_type_list.pop();\n  },\n\n  CHANGE_CELL_TYPE_GRAPH_STRUCTURE_DATA(state, payload) {\n    state.cell_type_graph_structure_data = payload;\n  },\n\n  CHANGE_CELL_TYPE_SEARCH_ENTRY_IN_SEARCH_VIEW(state, payload) {\n    state.cell_type_search_entry_in_search_view = payload;\n  },\n\n  CHANGE_CELL_TYPE_SEARCH_ENTRY_IN_GENE_DETAILS_VIEW(state, payload) {\n    state.cell_type_search_entry_in_gene_details_view = payload;\n  },\n\n  CHANGE_CELL_TYPE_SORT_OPTION(state, payload) {\n    state.cell_type_sort_option = payload;\n  },\n\n  ADD_TO_CELL_TYPES_THAT_HAVE_SELECTED_GENE_AS_TOP_VALUE(state, payload) {\n    state.cell_types_that_have_selected_gene_as_top_value.push(payload);\n  },\n  CHANGE_CELL_TYPES_THAT_HAVE_SELECTED_GENE_AS_TOP_VALUE(state, payload) {\n    state.cell_types_that_have_selected_gene_as_top_value = payload;\n  },\n};\n\nexport default cellTypeMutations;\n","let cellTypeActions = {\n  addToCellTypeDetailsList(context, cell_type_details_list) {\n    context.commit(\"ADD_TO_CELL_TYPE_DETAILS_LIST\", cell_type_details_list);\n  },\n  changeCellTypeDetailsList(context, cell_type_details_list) {\n    context.commit(\"CHANGE_CELL_TYPE_DETAILS_LIST\", cell_type_details_list);\n  },\n\n  addToSelectedCellTypeList(context, selected_cell_type_list) {\n    context.commit(\"ADD_TO_SELECTED_CELL_TYPE_LIST\", selected_cell_type_list);\n  },\n  changeSelectedCellTypeList(context, selected_cell_type_list) {\n    context.commit(\"CHANGE_SELECTED_CELL_TYPE_LIST\", selected_cell_type_list);\n  },\n  popFromSelectedCellTypeList(context) {\n    context.commit(\"POP_FROM_SELECTED_CELL_TYPE_LIST\");\n  },\n\n  changeCellTypeGraphStructureData(context, data) {\n    context.commit(\"CHANGE_CELL_TYPE_GRAPH_STRUCTURE_DATA\", data);\n  },\n\n  changeCellTypeSearchEntryInSearchView(context, searchContent) {\n    context.commit(\"CHANGE_CELL_TYPE_SEARCH_ENTRY_IN_SEARCH_VIEW\", searchContent);\n  },\n\n  changeCellTypeSearchEntryInGeneDetailsView(context, searchContent) {\n    context.commit(\"CHANGE_CELL_TYPE_SEARCH_ENTRY_IN_GENE_DETAILS_VIEW\", searchContent);\n  },\n\n  changeCellTypeSortOption(context, cellTypeSortOption) {\n    context.commit(\"CHANGE_CELL_TYPE_SORT_OPTION\", cellTypeSortOption);\n  },\n\n  addToCellTypesThatHaveSelectedGeneAsTopValue(context, cell_types_that_have_selected_gene_as_top_value) {\n    context.commit(\"ADD_TO_CELL_TYPES_THAT_HAVE_SELECTED_GENE_AS_TOP_VALUE\", cell_types_that_have_selected_gene_as_top_value);\n  },\n  changeCellTypesThatHaveSelectedGeneAsTopValue(context, cell_types_that_have_selected_gene_as_top_value) {\n    context.commit(\"CHANGE_CELL_TYPES_THAT_HAVE_SELECTED_GENE_AS_TOP_VALUE\", cell_types_that_have_selected_gene_as_top_value);\n  },\n};\n\nexport default cellTypeActions;","let geneStates = {\n  gene_search_entry: \"\",\n  gene_sort_option: \"default\",\n  selected_gene: \"\",\n};\n\nlet geneGetters = {\n  getGeneSearchEntry(state) {\n    return state.gene_search_entry;\n  },\n  getGeneSortOption(state) {\n    return state.gene_sort_option;\n  },\n  getSelectedGene(state) {\n    return state.selected_gene;\n  },\n};\n\nlet geneModule = {\n  state: geneStates,\n  getters: geneGetters\n};\n\nexport default geneModule;\n","let geneMutations = {\n  CHANGE_GENE_SEARCH_ENTRY(state, payload) {\n    state.gene_search_entry = payload;\n  },\n  CHANGE_GENE_SORT_OPTION(state, payload) {\n    state.gene_sort_option = payload;\n  },\n  CHANGE_SELECTED_GENE(state, payload) {\n    state.selected_gene = payload;\n  },\n};\n\nexport default geneMutations;\n","let geneActions = {\n  changeGeneSearchEntry(context, searchContent) {\n    context.commit(\"CHANGE_GENE_SEARCH_ENTRY\", searchContent);\n  },\n  changeGeneSortOption(context, geneSortOption) {\n    context.commit(\"CHANGE_GENE_SORT_OPTION\", geneSortOption);\n  },\n  changeSelectedGene(context, selectedGene) {\n    context.commit(\"CHANGE_SELECTED_GENE\", selectedGene);\n  },\n};\n\nexport default geneActions;\n","import Vue from \"vue\";\nimport Vuex from \"vuex\";\n\nimport cellTypeModule from \"./modules/cellType\";\nimport cellTypeMutations from \"./mutations/cellTypeMutations\";\nimport cellTypeActions from \"./actions/cellTypeActions\";\n\nimport geneModule from \"./modules/gene\";\nimport geneMutations from \"./mutations/geneMutations\";\nimport geneActions from \"./actions/geneActions\";\n\nVue.use(Vuex);\n\nconst state = {\n  ...cellTypeModule.state,\n  ...geneModule.state,\n  currentThemeMode: \"dark\"\n};\n\nconst mutations = {\n  ...cellTypeMutations,\n  ...geneMutations,\n  CHANGE_CURRENT_THEME_MODE(state, payload) {\n    state.currentThemeMode = payload;\n  }\n};\n\nconst actions = {\n  ...cellTypeActions,\n  ...geneActions,\n  changeCurrentThemeMode(context, mode) {\n    context.commit(\"CHANGE_CURRENT_THEME_MODE\", mode);\n  }\n};\n\nconst getters = {\n  ...cellTypeModule.getters,\n  ...geneModule.getters,\n  getCurrentThemeMode(state) {\n    return state.currentThemeMode;\n  }\n};\n\nexport default new Vuex.Store({\n  state,\n  mutations,\n  actions,\n  getters\n});\n","import \"material-design-icons-iconfont/dist/material-design-icons.css\";\nimport 'vuetify/dist/vuetify.min.css';\n\nimport Vue from 'vue';\nimport App from './App.vue';\nimport VueLodash from 'vue-lodash';\nimport Vuetify from 'vuetify';\nimport store from './store/index.js';\n\nVue.config.productionTip = true;\nVue.config.performance = true;\n\nconst options = { name: 'lodash' }; // customize the way you want to call it\nVue.use(VueLodash, options);\n\nconst vuetifyOptions = {\n  iconfont: 'md',\n  theme: {\n    dark: true,\n    themes: {\n      dark: {\n        primary: '#42b983',\n        secondary: '#424242',\n        accent: '#8c9eff',\n        error: '#b71c1c'\n      },\n      light: {\n        primary: '#42b983',\n        secondary: '#DCF8C6',\n        accent: '#8c9eff',\n        error: '#b71c1c',\n        background: '#fbf9f0',\n      }\n    },\n    options: {\n      customProperties: true,\n    }\n  }\n};\n\nVue.use(Vuetify);\n\nnew Vue({\n  render: h => h(App),\n  store,\n  vuetify: new Vuetify(vuetifyOptions)\n}).$mount('#app');\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CellDetails.vue?vue&type=style&index=0&id=6df1d2d2&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CellDetails.vue?vue&type=style&index=0&id=6df1d2d2&scoped=true&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SearchView.vue?vue&type=style&index=0&id=6b90ec6c&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SearchView.vue?vue&type=style&index=0&id=6b90ec6c&scoped=true&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GeneDetails.vue?vue&type=style&index=0&id=38d9dd14&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GeneDetails.vue?vue&type=style&index=0&id=38d9dd14&scoped=true&lang=css&\""],"sourceRoot":""}