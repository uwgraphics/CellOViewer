{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/SearchView.vue?72b9","webpack:///./src/App.vue?7e02","webpack:///./src/components/CellDetails.vue?df49","webpack:///./src/App.vue?1398","webpack:///./src/components/TheHeader.vue?cc6f","webpack:///src/components/TheHeader.vue","webpack:///./src/components/TheHeader.vue?0263","webpack:///./src/components/TheHeader.vue","webpack:///./src/components/SearchView.vue?fb1a","webpack:///src/components/SearchView.vue","webpack:///./src/components/SearchView.vue?50ea","webpack:///./src/components/SearchView.vue?0461","webpack:///./src/components/CellGraph.vue?6086","webpack:///./src/config.js","webpack:///./src/util.js","webpack:///./src/apis/utils.js","webpack:///./src/apis/graph.js","webpack:///./src/apis/draw.js","webpack:///./src/apis/structure.js","webpack:///./src/apis/tangler.js","webpack:///./src/apis/layout.js","webpack:///src/components/CellGraph.vue","webpack:///./src/components/CellGraph.vue?92f0","webpack:///./src/components/CellGraph.vue","webpack:///./src/components/GeneDetails.vue?2633","webpack:///src/components/GeneDetails.vue","webpack:///./src/components/GeneDetails.vue?3747","webpack:///./src/components/GeneDetails.vue?334f","webpack:///./src/components/CellDetails.vue?6819","webpack:///src/components/CellDetails.vue","webpack:///./src/components/CellDetails.vue?29d7","webpack:///./src/components/CellDetails.vue?a457","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue?bff9","webpack:///./src/store.js","webpack:///./src/main.js","webpack:///./src/components/GeneDetails.vue?1bbb"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SearchView_vue_vue_type_style_index_0_id_e5f700b6_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SearchView_vue_vue_type_style_index_0_id_e5f700b6_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_CellDetails_vue_vue_type_style_index_0_id_6564603c_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_CellDetails_vue_vue_type_style_index_0_id_6564603c_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","Appvue_type_template_id_6b0dcc52_render","_vm","this","_h","$createElement","_c","_self","attrs","id","dark","setTheme","fluid","staticClass","color","label","selectedTheme","model","callback","$$v","goDark","expression","msg","bg","grid-list-md","row","wrap","md5","cellData","$store","getters","getCellTypeGraphData","md7","staticRenderFns","TheHeadervue_type_template_id_6c560743_scoped_true_render","align-center","md12","center","_v","_s","TheHeadervue_type_template_id_6c560743_scoped_true_staticRenderFns","TheHeadervue_type_script_lang_js_","props","String","components_TheHeadervue_type_script_lang_js_","component","componentNormalizer","TheHeader","SearchViewvue_type_template_id_e5f700b6_scoped_true_render","max-height","$vuetify","theme","themes","getCurrentThemeMode","background","fixed-tabs","background-color","style","md9","sm12","append-icon","single-line","hide-details","hide-no-data","search","md3","items","sortOptions","on","input","sortBasedOnOption","option","class","listHeight","loaded","listLocalCopy","_l","keyValuePair","index","click","$event","setCellSelected","offset-md1","_e","md6","neighbor","dense","geneSearch","size","remain","item","three-line","setGeneItem","loadedGeneIdToNameDict","navigateToGenePage","loadedGeneIdToDescriptionDict","SearchViewvue_type_template_id_e5f700b6_scoped_true_staticRenderFns","SearchViewvue_type_script_lang_js_","mounted","fetchData","cardHeight","getCardHeight","detailItem","listSize","loadedDictData","loadedGeneData","methods","_fetchData","asyncToGenerator","regeneratorRuntime","mark","_callee","_context","prev","next","d3","sent","stop","arguments","cellName","curList","getCellSelected","pop","dispatch","generateListCopy","originalList","entries","lodash_default","a","cloneDeep","open","gene","globalThis","sortBy","list","console","log","computed","filteredData","_this","getSearch","filter","cell","searchResult","toLowerCase","caseInsesitiveCell0","caseInsesitiveCellList","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","iterator","done","_cell","err","return","includes","filteredGeneData","_this2","getGeneSearchFromSearchView","geneSelected","getGeneSelected","getOption","set","watch","_i","_Object$entries","_Object$entries$_i","slicedToArray","geneArr","geneValue","components","virtual-list","dist_default","components_SearchViewvue_type_script_lang_js_","SearchView_component","SearchView","CellGraphvue_type_template_id_ba93787c_scoped_true_render","maxCardHeight","cellType1","cellType2","ref","CellGraphvue_type_template_id_ba93787c_scoped_true_staticRenderFns","FIRST_ROW_CARD_MAX_HEIGHT","MAX_SELECTED_CELL_TYPE_NUMBER","CELL_TYPE_DEFAULT_COLOR","CELL_TYPE_CHANGED_COLOR","NODE_RADIUS_DEFAULT","NODE_RADIUS_POPPED","COLOR_RAMP","FORMAT_TO_ID","split","join","replace","GENERATE_LIST_COPY","_","average","lst","sum","reduce","cur","avg","listOfLists","len","array","Array","simpleSorter","graph","hlevel","pass","levels","getLevels","cmp","b","primaryParent","concat","ai","levelIdx","bi","parents","ap","map","bp","children","ac","bc","dalevel","idx","forEach","level","li","sort","nodes","primaryChildren","Vertex","params","classCallCheck","height","width","istree","phantom","depth","longest","ancestors","Set","descendentAncestors","levelrank","x","y","grandkidIndex","twidth","Link","source","target","Graph","links","constraints","groups","analysis","createClass","nodefunc","nodupes","results","queue","roots","maxLongest","Math","max","toConsumableArray","node","orderedNodes","child","pCount","npars","root","expand","tree","nchildren","nnode","strifyNodes","field","v","phantomGraph","longLinks","link","oldLinks","indexOf","analyzeGraph","_loop","_loop2","newLong","isTree","breadthFirst","ancestor","add","drawGraph","paths","selector","vueThis","nodeRadius","bvert","bezierVert","svg","append","attr","transform","cseg","x1","y1","x2","y2","bv","pathId","util","nodeId","handleMouseOver","d3plus","require","Tooltip","thead","position","render","handleMouseOut","remove","handleMouseClick","selectedCellName","nodeClass","nodeColor","nodeName","nodeStroke","selectAll","enter","pstr","drawPhantoms","text","jsonToGraph","keys","sourceName","targetName","maxChildren","parent","parentKids","treeLayout","topmargin","levelSep","vertexRadius","phantomRadius","spacer","space","minwid","left","ni","goalX","maxX","min","CellGraphvue_type_script_lang_js_","keyValueDict","pathsDict","linkArrayEdgeCases","edgeCaseCheck","showGraph","$refs","cellSelected","topGeneCellList","getTopGeneCellList","util_GENERATE_LIST_COPY","toString","svgClear","select","transition","svgHighlight","dict","cellTypesThatFitCriteria","cellType","cellValues","geneExist","geneName","svgFade","svgEdgeCase1","svgEdgeCase2","svgEdgeCase3","each","linkArray","has","components_CellGraphvue_type_script_lang_js_","CellGraph_component","CellGraph","GeneDetailsvue_type_template_id_6bf70bbe_scoped_true_render","medium","justify-right","removeGeneDetails","geneNotEmpty","geneSelectedPresentedName","geneSelectedDescription","top","scopedSlots","_u","fn","_g","setGeneIndexBarChartRatio","setGeneIndexBarChartColor","rounded","striped","reactive","maxGeneMagnitude","toFixed","fixedGeneDigits","GeneDetailsvue_type_template_id_6bf70bbe_scoped_true_staticRenderFns","GeneDetailsvue_type_script_lang_js_","cellTypeNames","filteredList","filterBySearchList","element","lowerCaseElement","returnToDefaultList","abs","topGeneDataExist","topGenes","cellTypeName","geneValues","columnIndex","filteredGeneCellList","getGeneSearchOption","getCellInGeneSearch","_i2","_Object$entries2","_Object$entries2$_i","components_GeneDetailsvue_type_script_lang_js_","GeneDetails_component","GeneDetails","CellDetailsvue_type_template_id_6564603c_scoped_true_render","removeCellSelected","cellSelectedExist","geneDataExist","sm6","geneNameOnHover","setOverlapGeneBackgroundColor","input-value","mouseover","setGeneNameOnHover","mouseleave","clearGeneNameOnHover","sm5","sm7","CellDetailsvue_type_template_id_6564603c_scoped_true_staticRenderFns","CellDetailsvue_type_script_lang_js_","cardHighlight","cellArr","itr","cellTypeNameIndexDict","cellTypeNameInColumnTwo","overlapCellTypeIndex","swapEntryPositions","indexA","indexB","temp","getDefaultCellTypes","geneCellCopy","indexGeneValue","parseFloat","numberValue","filteredDataSecondRow","entry","geneValueObject","filteredDataFirstRow","_entry","_geneValueObject","geneIndexInFirstRow","sortCells","currentCellTypes","dynamicData","geneCellCopy1","getCellDetails","getGeneSearch","resultArr","cellTypes","cell1FilteredArray","cell2FilteredArray","onHover","geneDataColumnOne","_geneData","Number","geneCellCopy2","geneDataColumnTwo","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","geneData","components_CellDetailsvue_type_script_lang_js_","CellDetails_component","CellDetails","Appvue_type_script_lang_js_","Header","cellTypeGraphData","src_Appvue_type_script_lang_js_","App_component","App","Vue","use","Vuex","state","cellDetails","cellSelectedPrevious","currentThemeMode","topGeneCellListPrevious","topGeneDictData","geneSearchOption","optionSelected","cellInGeneSearch","geneSearchFromSearchView","mutations","ADD_TO_CELL_DETAILS","payload","CHANGE_CELL_DETAILS","ADD_TO_CELL_SELECTED","CHANGE_CELL_SELECTED","POP_FROM_CELL_SELECTED","CHANGE_CELL_TYPE_GRAPH_DATA","CHANGE_CURRENT_THEME_MODE","ADD_TO_TOP_GENE_CELL_LIST","CHANGE_TOP_GENE_CELL_LIST","CHANGE_TOP_GENE_CELL_LIST_PREVIOUS","CHANGE_CELL_SELECTED_PREVIOUS","CHANGE_TOP_GENE_DICT_DATA","CHANGE_GENE_SEARCH_OPTION","CHANGE_GENE_SELECTED","CHANGE_CELL_IN_GENE_SEARCH","CHANGE_GENE_SEARCH","CHANGE_GENE_SEARCH_FROM_SEARCH_VIEW","CHANGE_SEARCH","CHANGE_OPTION","actions","addToCellDetails","context","commit","changeCellDetails","addToCellSelected","changeCellSelected","popFromCellSelected","changeCellTypeGraphData","changeCurrentThemeMode","addToTopGeneCellList","changeTopGeneCellList","changeTopGeneCellListPrevious","changeCellSelectedPrevious","changeTopGeneDictData","changeGeneSearchOption","changeGeneSelected","changeCellInGeneSearch","searchContent","changeGeneSearch","changeGeneSearchFromSearchView","changeSearch","changeOption","getTopGeneCellListPrevious","getCellSelectedPrevious","getTopGeneDictData","store","Store","config","productionTip","options","VueLodash","vuetifyOptions","iconfont","primary","secondary","accent","error","light","Vuetify","h","vuetify","$mount","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_GeneDetails_vue_vue_type_style_index_0_id_6bf70bbe_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_GeneDetails_vue_vue_type_style_index_0_id_6bf70bbe_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/app.eff2f69c.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SearchView.vue?vue&type=style&index=0&id=e5f700b6&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SearchView.vue?vue&type=style&index=0&id=e5f700b6&scoped=true&lang=css&\"","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CellDetails.vue?vue&type=style&index=0&id=6564603c&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CellDetails.vue?vue&type=style&index=0&id=6564603c&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('v-app',{attrs:{\"dark\":_vm.setTheme}},[_c('v-container',{attrs:{\"fluid\":\"\"}},[_c('v-switch',{staticClass:\"switch\",attrs:{\"color\":\"primary\",\"label\":_vm.selectedTheme},model:{value:(_vm.goDark),callback:function ($$v) {_vm.goDark=$$v},expression:\"goDark\"}}),_c('Header',{attrs:{\"msg\":\"Cell Network Viewer\"}})],1),_c('v-container',{attrs:{\"bg\":\"\",\"grid-list-md\":\"\",\"fluid\":\"\"}},[_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"md5\":\"\"}},[_c('SearchView',{attrs:{\"cellData\":this.$store.getters.getCellTypeGraphData}})],1),_c('v-flex',{attrs:{\"md7\":\"\"}},[_c('Graph',{attrs:{\"cellData\":this.$store.getters.getCellTypeGraphData}})],1)],1),_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"md5\":\"\"}},[_c('GeneDetails')],1),_c('v-flex',{attrs:{\"md7\":\"\"}},[_c('CellDetails')],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\",\"align-center\":\"\"}},[_c('v-flex',{attrs:{\"md12\":\"\",\"center\":\"\"}},[_c('h1',{staticClass:\"view-title\"},[_vm._v(\"🦠\"+_vm._s(_vm.msg)+\"🧬\")])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-layout row wrap align-center>\n    <v-flex md12 center>\n      <h1 class=\"view-title\">&#x1F9A0;{{ msg }}&#x1F9EC;</h1>\n    </v-flex>\n  </v-layout>\n</template>\n\n<script>\nexport default {\n  name: \"app-header\",\n  props: {\n    msg: String\n  }\n};\n</script>\n\n<style scoped>\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TheHeader.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TheHeader.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TheHeader.vue?vue&type=template&id=6c560743&scoped=true&\"\nimport script from \"./TheHeader.vue?vue&type=script&lang=js&\"\nexport * from \"./TheHeader.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6c560743\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\",\"align-center\":\"\"}},[_c('v-flex',{attrs:{\"md12\":\"\"}},[_c('v-card',{attrs:{\"max-height\":\"600\",\"color\":_vm.$vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n          .background}},[_c('v-card-title',{staticClass:\"justify-left\"},[_c('h4',{staticClass:\"view-title\"},[_vm._v(\"Search View\")])]),_c('v-tabs',{attrs:{\"fixed-tabs\":\"\",\"background-color\":_vm.$vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n            .background}},[_c('v-tab',[_vm._v(\"Cell Centric\")]),_c('v-tab',[_vm._v(\"Gene Centric\")]),_c('v-tab-item',[_c('v-card-text',{style:({\n              background:\n                _vm.$vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n                  .background\n            })},[_c('v-layout',[_c('v-flex',{attrs:{\"md9\":\"\",\"sm12\":\"\"}},[_c('v-text-field',{attrs:{\"append-icon\":\"search\",\"label\":\"search\",\"single-line\":\"\",\"hide-details\":\"\",\"hide-no-data\":\"\"},model:{value:(_vm.search),callback:function ($$v) {_vm.search=$$v},expression:\"search\"}})],1),_c('v-spacer'),_c('v-flex',{attrs:{\"md3\":\"\",\"sm12\":\"\"}},[_c('v-select',{attrs:{\"items\":_vm.sortOptions,\"label\":\"sort\"},on:{\"input\":_vm.sortBasedOnOption},model:{value:(_vm.option),callback:function ($$v) {_vm.option=$$v},expression:\"option\"}})],1)],1),_c('v-layout',{staticClass:\"list\",class:{ 'max-height': _vm.listHeight },attrs:{\"row\":\"\",\"wrap\":\"\"}},[(_vm.loaded && _vm.listLocalCopy)?_c('v-flex',{attrs:{\"md12\":\"\"}},[_c('v-list',{style:({\n                    background:\n                      _vm.$vuetify.theme.themes[\n                        this.$store.getters.getCurrentThemeMode\n                      ].background\n                  })},_vm._l((_vm.filteredData),function(keyValuePair,index){return _c('v-list-item',{key:index,staticClass:\"list\",on:{\"click\":function($event){return _vm.setCellSelected(keyValuePair[0])}}},[_c('v-layout',[(keyValuePair[0] && keyValuePair[1])?_c('v-flex',{staticClass:\"index\",attrs:{\"md3\":\"\",\"offset-md1\":\"\"}},[_vm._v(_vm._s(keyValuePair[0])+\": \")]):_vm._e(),(keyValuePair[1])?_c('v-flex',{attrs:{\"md6\":\"\",\"offset-md1\":\"\"}},_vm._l((keyValuePair[1]),function(neighbor,index){return _c('v-list',{key:index,attrs:{\"dense\":\"\"}},[(index === keyValuePair[1].length - 1)?_c('div',[_vm._v(\"\\n                            \"+_vm._s(neighbor)+\"\\n                          \")]):_c('div',[_vm._v(_vm._s(neighbor)+\",\")])])}),1):_vm._e()],1)],1)}),1)],1):_vm._e()],1)],1)],1),_c('v-tab-item',[_c('v-card-text',[_c('v-layout',[_c('v-flex',{attrs:{\"md12\":\"\",\"sm12\":\"\"}},[_c('v-text-field',{attrs:{\"append-icon\":\"search\",\"label\":\"search\",\"single-line\":\"\",\"hide-details\":\"\",\"hide-no-data\":\"\"},model:{value:(_vm.geneSearch),callback:function ($$v) {_vm.geneSearch=$$v},expression:\"geneSearch\"}})],1)],1),_c('virtual-list',{staticClass:\"list\",attrs:{\"size\":40,\"remain\":10}},_vm._l((_vm.filteredGeneData),function(item){return _c('v-list-item',{key:item.id,attrs:{\"three-line\":\"\"},on:{\"click\":function($event){return _vm.setGeneItem(item)}}},[_c('v-list-item-content',{staticClass:\"list-item-box\"},[_c('v-list-item-title',[_vm._v(_vm._s(_vm.loadedGeneIdToNameDict[item])+\": \\n                  \")]),_c('v-list-item-subtitle',[_c('a',{staticClass:\"web-link\",on:{\"click\":function($event){return _vm.navigateToGenePage(item)}}},[_vm._v(\"\\n                      \"+_vm._s(item)+\"\\n                    \")])]),_c('v-list-item-subtitle',[_vm._v(\"\\n                    \"+_vm._s(_vm.loadedGeneIdToDescriptionDict[item])+\"\\n                  \")])],1)],1)}),1)],1)],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-layout row wrap align-center>\n    <v-flex md12>\n      <v-card\n        max-height=\"600\"\n        :color=\"\n          $vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n            .background\n        \"\n      >\n        <v-card-title class=\"justify-left\">\n          <h4 class=\"view-title\">Search View</h4>\n        </v-card-title>\n\n        <v-tabs\n          fixed-tabs\n          :background-color=\"\n            $vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n              .background\n          \"\n        >\n          <v-tab>Cell Centric</v-tab>\n          <v-tab>Gene Centric</v-tab>\n          <v-tab-item>\n            <v-card-text\n              :style=\"{\n                background:\n                  $vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n                    .background\n              }\"\n            >\n              <v-layout>\n                <v-flex md9 sm12>\n                  <v-text-field\n                    v-model=\"search\"\n                    append-icon=\"search\"\n                    label=\"search\"\n                    single-line\n                    hide-details\n                    hide-no-data\n                  ></v-text-field>\n                </v-flex>\n                <v-spacer />\n                <v-flex md3 sm12>\n                  <v-select\n                    v-model=\"option\"\n                    :items=\"sortOptions\"\n                    @input=\"sortBasedOnOption\"\n                    label=\"sort\"\n                  ></v-select>\n                </v-flex>\n              </v-layout>\n              <v-layout\n                row\n                wrap\n                class=\"list\"\n                :class=\"{ 'max-height': listHeight }\"\n              >\n                <v-flex md12 v-if=\"loaded && listLocalCopy\">\n                  <v-list\n                    :style=\"{\n                      background:\n                        $vuetify.theme.themes[\n                          this.$store.getters.getCurrentThemeMode\n                        ].background\n                    }\"\n                  >\n                    <v-list-item\n                      v-for=\"(keyValuePair, index) in filteredData\"\n                      :key=\"index\"\n                      class=\"list\"\n                      @click=\"setCellSelected(keyValuePair[0])\"\n                    >\n                      <v-layout>\n                        <v-flex\n                          md3\n                          offset-md1\n                          v-if=\"keyValuePair[0] && keyValuePair[1]\"\n                          class=\"index\"\n                          >{{ keyValuePair[0] }}:&nbsp;</v-flex\n                        >\n                        <v-flex md6 offset-md1 v-if=\"keyValuePair[1]\">\n                          <v-list\n                            v-for=\"(neighbor, index) in keyValuePair[1]\"\n                            :key=\"index\"\n                            dense\n                          >\n                            <div v-if=\"index === keyValuePair[1].length - 1\">\n                              {{ neighbor }}\n                            </div>\n                            <div v-else>{{ neighbor }},</div>\n                          </v-list>\n                        </v-flex>\n                      </v-layout>\n                    </v-list-item>\n                  </v-list>\n                </v-flex>\n              </v-layout>\n            </v-card-text>\n          </v-tab-item>\n          <!-- Gene Centric Search View -->\n          <v-tab-item>\n            <v-card-text>\n              <v-layout>\n                <v-flex md12 sm12>\n                  <v-text-field\n                    v-model=\"geneSearch\"\n                    append-icon=\"search\"\n                    label=\"search\"\n                    single-line\n                    hide-details\n                    hide-no-data\n                  ></v-text-field>\n                </v-flex>\n              </v-layout>\n              <virtual-list :size=\"40\" :remain=\"10\" class=\"list\">\n                <v-list-item\n                  three-line\n                  v-for=\"item of filteredGeneData\"\n                  :key=\"item.id\"\n                  @click=\"setGeneItem(item)\"\n                >\n                  <v-list-item-content class=\"list-item-box\">\n                    <v-list-item-title\n                      >{{ loadedGeneIdToNameDict[item] }}:&nbsp;\n                    </v-list-item-title>\n                    <v-list-item-subtitle>\n                      <a class=\"web-link\" @click=\"navigateToGenePage(item)\">\n                        {{ item }}\n                      </a>\n                    </v-list-item-subtitle>\n                    <v-list-item-subtitle>\n                      {{ loadedGeneIdToDescriptionDict[item] }}\n                    </v-list-item-subtitle>\n                  </v-list-item-content>\n                </v-list-item>\n              </virtual-list>\n            </v-card-text>\n          </v-tab-item>\n        </v-tabs>\n      </v-card>\n    </v-flex>\n  </v-layout>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\nimport virtualList from \"vue-virtual-scroll-list\";\nimport _ from \"lodash\";\n\nexport default {\n  name: \"cell-list\",\n  props: {\n    cellData: Object\n  },\n  mounted() {\n    this.fetchData();\n  },\n  data() {\n    return {\n      cardHeight: this.$store.getters.getCardHeight,\n      detailItem: [],\n      listHeight: \"500px\",\n      listLocalCopy: [],\n      listSize: 2, // Put this in store at cleanup phase\n      loaded: false,\n      loadedDictData: {},\n      loadedGeneData: [],\n      loadedGeneIdToNameDict: {},\n      loadedGeneIdToDescriptionDict: {},\n      sortOptions: [\"default\", \"alphabetical\"]\n    };\n  },\n  methods: {\n    async fetchData() {\n      this.loadedGeneData = await d3.json(\"./genes.json\");\n      this.loadedDictData = await d3.json(\"./top_abs_10_dict.json\");\n      this.loadedGeneIdToNameDict = await d3.json(\"./gene_id_to_name.json\");\n      this.loadedGeneIdToDescriptionDict = await d3.json(\n        \"gene_id_to_description.json\"\n      );\n    },\n    setCellSelected(cellName) {\n      let curList = this.$store.getters.getCellSelected;\n      while (curList.length >= this.listSize) {\n        curList.pop();\n      }\n      curList.push(cellName);\n      this.$store.dispatch(\"changeCellSelected\", curList);\n    },\n    generateListCopy(originalList) {\n      return Object.entries(_.cloneDeep(originalList));\n    },\n    navigateToGenePage(item) {\n      window.open(\n        \"http://useast.ensembl.org/Homo_sapiens/Gene/Summary?g=\" + item\n      );\n    },\n    setGeneItem(gene) {\n      this.$store.dispatch(\"changeGeneSelected\", gene);\n    },\n    sortBasedOnOption(option) {\n      let globalThis = this;\n      this.$store.dispatch(\"changeOption\", String(option));\n      this.listLocalCopy = this.generateListCopy(this.cellData);\n      switch (option) {\n        case \"alphabetical\":\n          globalThis.listLocalCopy = _.sortBy(\n            this.listLocalCopy,\n            [\n              function(list) {\n                console.log(list[0]);\n                return list[0];\n              }\n            ],\n            [\"asc\"]\n          );\n          return globalThis.listLocalCopy;\n      }\n    }\n  },\n  computed: {\n    filteredData() {\n      if (this.$store.getters.getSearch === \"\") {\n        return this.listLocalCopy;\n      } else {\n        return this.listLocalCopy.filter(cell => {\n          let searchResult = this.search.toLowerCase();\n          let caseInsesitiveCell0 = cell[0].toLowerCase();\n          let caseInsesitiveCellList = cell[1];\n          // Make all cell name in corresponding list to be lowercase\n          for (const cell of caseInsesitiveCellList) {\n            cell = cell.toLowerCase();\n          }\n          return (\n            caseInsesitiveCell0.includes(searchResult) ||\n            caseInsesitiveCellList.includes(searchResult)\n          );\n        });\n      }\n    },\n\n    /**\n     * Filtered gene data for gene centric view\n     */\n    filteredGeneData() {\n      let globalThis = this;\n\n      if (this.$store.getters.getGeneSearchFromSearchView === \"\") {\n        return this.loadedGeneData;\n      } else {\n        return this.loadedGeneData.filter(gene => {\n          if (globalThis.loadedGeneIdToNameDict[gene] == undefined) {\n            return;\n          }\n          return globalThis.loadedGeneIdToNameDict[gene].includes(\n            this.geneSearch\n          );\n        });\n      }\n    },\n    geneSelected: {\n      get() {\n        return this.$store.getters.getGeneSelected;\n      }\n    },\n    option: {\n      get() {\n        return this.$store.getters.getOption;\n      },\n      set(option) {\n        this.$store.dispatch(\"changeOption\", option);\n      }\n    },\n    search: {\n      get() {\n        return this.$store.getters.getSearch;\n      },\n      set(input) {\n        this.$store.dispatch(\"changeSearch\", input);\n      }\n    },\n    geneSearch: {\n      get() {\n        return this.$store.getters.getGeneSearchFromSearchView;\n      },\n      set(input) {\n        this.$store.dispatch(\"changeGeneSearchFromSearchView\", input);\n      }\n    }\n  },\n  watch: {\n    cellData() {\n      this.loaded = true;\n      this.listLocalCopy = this.generateListCopy(this.cellData);\n    },\n    geneSelected() {\n      let globalThis = this;\n      this.$store.dispatch(\"changeTopGeneCellList\", []);\n      for (const [key, value] of Object.entries(this.loadedDictData)) {\n        let geneArr = value;\n        for (let i = 0; i < geneArr.length; i++) {\n          if (geneArr[i][2] === globalThis.geneSelected) {\n            let cellName = key;\n            let geneValue = value[i][1];\n            globalThis.$store.dispatch(\"addToTopGeneCellList\", [\n              cellName,\n              geneValue\n            ]);\n          }\n        }\n      }\n    }\n  },\n  components: {\n    \"virtual-list\": virtualList\n  }\n};\n</script>\n\n<style scoped>\nv-card-title {\n  margin: 100px;\n}\n.list {\n  max-height: 350px;\n  overflow-y: auto;\n}\n.title {\n  margin-top: 10px;\n}\n.list-item-box {\n  text-align: left;\n}\n.web-link {\n  text-decoration: underline;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SearchView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SearchView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SearchView.vue?vue&type=template&id=e5f700b6&scoped=true&\"\nimport script from \"./SearchView.vue?vue&type=script&lang=js&\"\nexport * from \"./SearchView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SearchView.vue?vue&type=style&index=0&id=e5f700b6&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"e5f700b6\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"md12\":\"\"}},[_c('v-card',{attrs:{\"max-height\":_vm.maxCardHeight,\"color\":_vm.$vuetify.theme.themes[this.$store.getters.getCurrentThemeMode].background}},[_c('v-card-title',{staticClass:\"justify-center\"},[_c('h4',{staticClass:\"view-title\"},[_vm._v(\"Graph View\")]),_c('v-spacer'),(_vm.cellType1)?_c('v-chip',{staticClass:\"ma-2\"},[_vm._v(_vm._s(_vm.cellType1))]):_vm._e(),(_vm.cellType2)?_c('v-chip',{staticClass:\"ma-2\"},[_vm._v(_vm._s(_vm.cellType2))]):_vm._e()],1),_c('v-card-text',[_c('div',{ref:\"graph\",attrs:{\"id\":\"graph\"}})])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export const FIRST_ROW_CARD_MAX_HEIGHT = 600;\nexport const MAX_SELECTED_CELL_TYPE_NUMBER = 2;\nexport const CELL_TYPE_DEFAULT_COLOR = \"#faed27\";\nexport const CELL_TYPE_CHANGED_COLOR = \"#f33\";\nexport const NODE_RADIUS_DEFAULT = 5;\nexport const NODE_RADIUS_POPPED = 8;\nexport const COLOR_RAMP = [\n    \"#40004b\",\n    \"#762a83\",\n    \"#9970ab\",\n    \"#c2a5cf\",\n    \"#e7d4e8\",\n    \"#d9f0d3\",\n    \"#a6dba0\",\n    \"#5aae61\",\n    \"#1b7837\",\n    \"#00441b\",\n]","import _ from \"lodash\";\nimport * as d3 from \"d3\";\n\nexport const FORMAT_TO_ID = cellName => {\n  return cellName\n    .split(\" \")\n    .join(\"-\")\n    .split(\"(\")\n    .join(\"\")\n    .split(\")\")\n    .join(\"\")\n    .split(\",\")\n    .join(\"\")\n    .replace(/\\//g, \"-\");\n};\n\nexport const GENERATE_LIST_COPY = originalList => {\n  return Object.entries(_.cloneDeep(originalList));\n};","/*jshint esversion: 6 */\n// @ts-check\n// eslint-disable-next-line no-unused-vars\n// @ts-ignore\nimport { Vertex } from \"./graph.js\";\n/**\n *\n * @param {number[]} lst\n */\nexport function average(lst) {\n  if (!lst.length) return 0;\n  let sum = lst.reduce((prev, cur) => (cur += prev));\n  let avg = sum / lst.length;\n  return avg;\n}\n\nexport function sum(lst) {\n  if (!lst.length) return 0;\n  return lst.reduce((prev, cur) => (cur += prev));\n}\n\n/**\n *\n * @param {number} len\n */\nexport function listOfLists(len) {\n  const array = Array(len);\n  for (let i = 0; i < array.length; i++) {\n    array[i] = [];\n  }\n  return array;\n}\n\n/* given 2 edges (x coordinates) do the edges cross? */\nexport function isCross(p1, c1, p2, c2) {\n  return (p1 > p2 && c1 < c2) || (p1 < p2 && c1 > c2) ? 1 : 0;\n}\n\n/**\n * Count the number of crossings between two (adjacent) levels\n * @param {Vertex[]} parents\n */\nexport function countCrossingsLevel(parents) {\n  let count = 0;\n  // no easy way to iterate over the links of a level...\n  if (parents.length > 1) {\n    for (let i = 0; i < parents.length - 1; i++) {\n      let p1 = parents[i];\n      p1.children.forEach(function(c1) {\n        // jshint ignore:line\n        for (let j = i + 1; j < parents.length; j++) {\n          let p2 = parents[j];\n          p2.children.forEach(function(c2) {\n            // jshint ignore:line\n            count += isCross(\n              p1.levelIdx,\n              c1.levelIdx,\n              p2.levelIdx,\n              c2.levelIdx\n            );\n          });\n        }\n      });\n    }\n  }\n  return count;\n}\n\nexport function countCrossingsGraph(graph) {\n  const levels = graph.getLevels();\n  let crossings = 0;\n  for (let i = 0; i < levels.length - 1; i++) {\n    let lc = countCrossingsLevel(levels[i]);\n    crossings += lc;\n  }\n  return crossings;\n}\n\nexport function simpleSorter(graph, hlevel = 3, pass = 0) {\n  const levels = graph.getLevels();\n\n  // compare two nodes\n  function cmp(a, b) {\n    // heuristic one - stick to your primary parent\n    if (!a.primaryParent) {\n      console.log(`node ${a.index} ${a.name} no primary parent`);\n    }\n    let ai = a.primaryParent.levelIdx;\n    let bi = b.primaryParent.levelIdx;\n    if (ai != bi) return ai - bi;\n    if (hlevel > 1) {\n      // hueristic two - consider all your parents\n      // only make sense if at least one has multiple parents\n      if (a.parents.length > 1 || b.parents.length > 1) {\n        let ap = average(a.parents.map(p => p.levelIdx));\n        let bp = average(b.parents.map(p => p.levelIdx));\n        if (ap != bp) return ap - bp;\n      } else {\n        // generally, looking at your children is a really bad\n        // idea - wait until it becomes useful (when things are stable)\n        // and only if you have only 1 child\n        if (pass > 5 && a.children.length == 1 && b.children.length == 1) {\n          // keep diving until someone doesn't have 1 child\n          let ac = a.children[0];\n          let bc = b.children[0];\n          while (ac.children.length == 1 && bc.children.length == 1) {\n            ac = ac.children[0];\n            bc = bc.children[0];\n          }\n          let ap = ac.levelIdx;\n          let bp = bc.levelIdx;\n          return ap - bp;\n        }\n      }\n    }\n    if (hlevel > 2) {\n      // heuristic three - transitive closure of your descendents ancestors\n      if (a.dalevel.length && b.dalevel.length) {\n        let ap = average(a.dalevel.map(p => p.levelIdx));\n        let bp = average(b.dalevel.map(p => p.levelIdx));\n        if (ap != bp) return ap - bp;\n      }\n    }\n    return 0;\n  }\n\n  // sort each level\n  let idx = 0;\n  levels.forEach(function(level, li) {\n    if (li > 0) {\n      level.sort(cmp);\n    }\n    level.forEach((n, i) => {\n      n.levelIdx = i;\n      n.index = idx++;\n    });\n  });\n\n  // reorder the nodes\n  graph.nodes.sort((a, b) => a.index - b.index);\n  // make sure the children are sorted correctly\n  graph.nodes.forEach(n => n.primaryChildren.sort((a, b) => a.index - b.index));\n  graph.nodes.forEach(n => n.children.sort((a, b) => a.index - b.index));\n}\n","/*jshint esversion: 6 */\n// @ts-check\n\n// @ts-ignore\nimport { listOfLists } from \"./utils.js\";\n\n/**\n * Can't be a Node since that's a reserved term by the DOM\n */\nexport class Vertex {\n  /**\n   * make a node\n   * @param {string} name\n   * @param {object} params\n   * @param {number} [params.width=10]\n   * @param {number} [params.height=10]\n   */\n  constructor(name, params = {}) {\n    this.name = name;\n    this.height = \"height\" in params ? params.height : 10;\n    this.width = \"width\" in params ? params.width : 10;\n    // these are usually added later by the reader\n    this.parents = [];\n    this.children = [];\n    this.istree = undefined;\n    this.index = undefined; // overl rank (index into nodes list)\n    this.phantom = false;\n    // these are added later by the analyzer, but we declare them to have no warnings\n    this.depth = -1;\n    this.longest = -1;\n    this.levelIdx = undefined; // index in the level (where in levels list)\n    this.ancestors = new Set();\n    this.descendentAncestors = new Set();\n    this.dalevel = [];\n\n    // these are used for sorting\n    this.levelrank = undefined;\n\n    // these are used for drawing\n    this.x = undefined;\n    this.y = undefined;\n\n    // for the new and improved sorter\n    this.primaryParent = undefined;\n    /** @type {Vertex[]} */\n    this.primaryChildren = [];\n    this.grandkidIndex = undefined;\n\n    // used for layout\n    this.twidth = undefined;\n  }\n}\n\nexport class Link {\n  /**\n   *\n   * @param {Vertex} source\n   * @param {Vertex} target\n   * @param {string} color\n   * @param {number} value\n   */\n  constructor(source, target, color = \"#000\", value = 1) {\n    this.source = source;\n    this.target = target;\n    this.color = color;\n    this.value = value;\n  }\n}\n\n/**\n * @callback NodeFunction\n * @param{Vertex} node\n */\n\n/**\n * @class\n */\nexport class Graph {\n  /**\n   *\n   * @param {Vertex[]} nodes\n   * @param {Link[]} links\n   * @param {Array} constraints\n   * @param {Array} groups\n   */\n  constructor(nodes, links, constraints = [], groups = []) {\n    /** @type {Vertex[]} */\n    this.nodes = nodes;\n    /** @type {Link[]} */\n    this.links = links;\n    this.constraints = constraints;\n    this.groups = groups;\n    this.analysis = undefined;\n  }\n  /**\n   * return a list of the roots\n   * @returns {Vertex[]}\n   */\n  roots() {\n    return this.nodes.filter(n => !n.parents.length);\n  }\n  /**\n   * return a list of the leaves\n   * @returns {Vertex[]}\n   */\n  leaves() {\n    return this.nodes.filter(n => !n.children.length);\n  }\n\n  /**\n   * apply a function to each node in breadth first order\n   * this only works on level graphs!\n   * @param {NodeFunction} nodefunc\n   */\n  breadthFirst(nodefunc, nodupes = true) {\n    let results = [];\n    // start with the roots\n    let queue = this.roots();\n    // now iterate until we're done\n    while (queue.length) {\n      const n = queue.shift();\n      results.push(nodefunc(n));\n      n.children.forEach(function(c) {\n        // jshint ignore:line\n        if (!nodupes || !queue.includes(c)) queue.push(c);\n      });\n    }\n    return results;\n  }\n\n  /**\n   * get the levels of the graph - it also resets the indecies in the levels\n   */\n  getLevels() {\n    const nodes = this.nodes;\n    const maxLongest = Math.max(...nodes.map(n => n.longest));\n\n    /** @type Vertex[][]] */\n    const levels = listOfLists(maxLongest);\n\n    nodes.forEach(n => levels[n.longest - 1].push(n));\n    levels.forEach(level => level.forEach((node, i) => (node.levelIdx = i)));\n\n    return levels;\n  }\n\n  /**\n   * Re-order the nodes based on a breadth first traversal\n   * it puts the nodes in order - which means it can mess stuff up\n   * It does re-assign indecies based on this new order.\n   * It does not re-assign level indecies.\n   */\n  orderNodes() {\n    // beginning with the roots, do a breadth first traversal of the tree to\n    // assign indecies\n    let idx = 0;\n    let orderedNodes = [];\n    let queue = this.nodes.filter(node => !node.primaryParent);\n    while (queue.length) {\n      const node = queue.shift();\n      node.index = idx++;\n      orderedNodes.push(node);\n      node.primaryChildren.forEach(child => queue.push(child)); // jshint ignore:line\n    }\n    this.nodes = orderedNodes;\n  }\n\n  /** describe the graph to the console */\n  describe() {\n    // count the number of nodes with each amount of parents\n    let pCount = {};\n    this.nodes.forEach(node => {\n      let npars = node.parents.length;\n      if (pCount[npars]) {\n        pCount[npars]++;\n      } else {\n        pCount[npars] = 1;\n      }\n    });\n  }\n\n  /** extract a D3 Hierarchy description  - this is the literal\n   *  (someone else has to call d3.hierarchy) */\n  hierarchy() {\n    /** get the root - if there are multiple roots, make a new root node */\n    let roots = this.roots();\n    let root;\n    if (roots.length == 1) {\n      root = {\n        name: roots[0].name,\n        node: roots[0],\n        nchildren: roots[0].primaryChildren\n      };\n    } else {\n      root = { name: \"Fake Root\", node: undefined, nchildren: roots };\n    }\n    /* proceed recursively */\n    function expand(tree) {\n      // converty nchildren (node list) to d3 form.\n      tree.children = [];\n      tree.nchildren.forEach(function(c) {\n        let nnode = { name: c.name, node: c, nchildren: c.primaryChildren };\n        tree.children.push(nnode);\n        expand(nnode);\n      });\n    }\n    expand(root);\n    return root;\n  }\n}\n\n/**\n * turn something with a forEach into a string (works for sets)\n * @param {*} lst\n */\nexport function strifyNodes(lst, field = \"name\") {\n  let s = \"[\";\n  lst.forEach(v => (s += v[field] + \" \"));\n  s += \"]\";\n  return s;\n}\n\n/**\n * Given a graph, change things such that all links are 1 level\n * this means that longer links get broken into a series of steps with phantom nodes inserted\n * @param {Graph} graph\n */\nfunction phantomGraph(graph) {\n  // a list of all of the long links\n  const longLinks = graph.links.filter(\n    link => link.target.longest - link.source.longest > 1\n  );\n  // links are only the links of the correct length\n  const links = graph.links.filter(\n    link => link.target.longest - link.source.longest == 1\n  );\n  // save the old links\n  // @ts-ignore\n  graph.oldLinks = graph.links;\n\n  // break up the long links\n  longLinks.forEach(function(link, li) {\n    // disconnect child and parent\n    link.target.parents.splice(link.target.parents.indexOf(link.source), 1);\n    link.source.children.splice(link.source.children.indexOf(link.target), 1);\n    let prev = link.source;\n    for (\n      let level = link.source.longest + 1;\n      level < link.target.longest;\n      level++\n    ) {\n      let nnode = new Vertex(`connector-${li}-${level}`);\n      nnode.phantom = true;\n      nnode.parents.push(prev);\n      nnode.longest = level;\n      nnode.depth = link.source.depth + 1;\n      nnode.istree = false;\n      prev.children.push(nnode);\n      graph.nodes.push(nnode);\n      links.push(new Link(prev, nnode));\n      prev = nnode;\n    }\n    link.target.parents.push(prev);\n    prev.children.push(link.target);\n    links.push(new Link(prev, link.target));\n  });\n\n  graph.links = links;\n}\n\n/**\n * analyze a graph in place\n * this just adds information to the nodes (in place)\n * depth, longest, istree, index\n * if we level the graph, we add phantom nodes BEFORE doing ancestry\n * @param {Graph} graph\n * @param {boolean} [level=true]\n */\nexport function analyzeGraph(graph, level = true) {\n  // some analysis\n  let roots = graph.roots();\n\n  // Depths\n  // do a simple breadth-first search to get depth - where depth is shortest path to a root\n  // start with the roots\n  let queue = [];\n  roots.forEach(x => {\n    x.depth = 1;\n    queue.push(x);\n  });\n  // now iterate until we're done\n  while (queue.length) {\n    const n = queue.shift();\n    n.children.forEach(child => {\n      // jshint ignore:line\n      if (child.depth < 1) {\n        child.depth = n.depth + 1;\n        queue.push(child);\n      }\n    });\n  }\n\n  // a tricker thing is to find the LONGEST path to a node\n  // I am doing this inefficiently - each node may be visited multiple times\n  // each time it is updated\n  queue = [];\n  roots.forEach(x => {\n    x.longest = 1;\n    queue.push(x);\n  });\n  // now iterate until we're done\n  while (queue.length) {\n    const n = queue.shift();\n    const newLong = n.longest + 1;\n    n.children.forEach(child => {\n      // jshint ignore:line\n      if (child.longest < newLong) {\n        child.longest = newLong;\n        queue.push(child);\n      }\n    });\n  }\n\n  // Is the subtree below a node a tree?\n  // this requires that: each child is a tree, and each child has 1 parent\n  // we cache this within the node\n  function isTree(n) {\n    // jshint ignore:line\n    if (n.istree != undefined) return n.istree;\n    // look for a child that makes us not a tree\n    let istree = true;\n    n.children.forEach(function(child) {\n      if (!isTree(child) || child.parents.length > 1) {\n        istree = false;\n      }\n    });\n    n.istree = istree;\n    return istree;\n  }\n  graph.nodes.forEach(n => isTree(n));\n\n  // add the phantom nodes if need be\n  if (level) phantomGraph(graph);\n\n  // assign indecies based on order - AFTER phantom nodes added\n  graph.nodes.forEach((n, i) => (n.index = i));\n\n  // analyses after adding the phantoms\n  let levels = graph.getLevels();\n\n  // ancestor sets - a place where naive breadth first actually makes sense\n  graph.breadthFirst(function(node) {\n    node.children.forEach(function(child) {\n      node.ancestors.forEach(ancestor => child.ancestors.add(ancestor));\n      child.ancestors.add(node);\n    });\n  });\n\n  // work bottom up, rather than using breadth first\n  for (let li = levels.length - 1; li >= 0; li--) {\n    const level = levels[li];\n    level.forEach(function(node) {\n      node.children.forEach(function(child) {\n        child.ancestors.forEach(a => node.descendentAncestors.add(a));\n        child.descendentAncestors.forEach(a => node.descendentAncestors.add(a));\n      });\n    });\n  }\n  // find the das at the level above the node\n  graph.nodes.forEach(function(node) {\n    node.dalevel = [...node.descendentAncestors].filter(\n      n => n.longest == node.longest\n    );\n  });\n}\n","/* eslint-disable no-console */\n/*jshint esversion: 6 */\n// @ts-check\n\n// eslint-disable-next-line no-unused-vars\nimport { Graph, strifyNodes } from \"./graph.js\";\n// @ts-ignore\n// @ts-ignore\nimport * as d3 from \"d3\";\nimport * as util from \"../util\";\n\n// /**\n//  *\n//  * @param {Graph} graph\n//  * @param {string} selector=\"body\"\n//  * @param {Object} params={}\n//  * @param {number} [params.height = 800]\n//  * @param {number} [params.nodeRadius = 4]\n//  * @param {?Boolean} [params.drawPhantoms]\n//  * @param {number} [params.bezierVert = 25]\n//  */\n// export function drawGraphLab(graph, selector = \"body\", vueThis, params = {}) {\n\n//   let linkType = \"paths\";\n//   let paths;\n\n//   /**\n//    * Where the vanilla JavaScript pass the click event to Vue\n//    */\n//   function update() {\n//     switch (linkType) {\n//       case \"arrows\":\n//         // draw directed edges with proper padding from node centers\n//         paths.attr(\"d\", function(d) {\n//           let deltaX = d.target.x - d.source.x,\n//             deltaY = d.target.y - d.source.y,\n//             dist = Math.sqrt(deltaX * deltaX + deltaY * deltaY),\n//             normX = deltaX / dist,\n//             normY = deltaY / dist,\n//             sourcePadding = d.source.phantom ? 1 : nodeRadius,\n//             targetPadding = d.target.phantom ? 1 : nodeRadius + 2,\n//             sourceX = d.source.x + sourcePadding * normX,\n//             sourceY = d.source.y + sourcePadding * normY,\n//             targetX = d.target.x - targetPadding * normX,\n//             targetY = d.target.y - targetPadding * normY;\n//           return \"M\" + sourceX + \",\" + sourceY + \"L\" + targetX + \",\" + targetY;\n//         });\n//         break; // end arrow update\n//       case \"lines\":\n//         paths.attr(\"x1\", d => d.source.x);\n//         paths.attr(\"y1\", d => d.source.y);\n//         paths.attr(\"x2\", d => d.target.x);\n//         paths.attr(\"y2\", d => d.target.y);\n//         break;\n//       case \"paths\":\n//         paths.attr(\"d\", function(d) {\n//           let x1 = d.source.x;\n//           let y1 = d.source.y + radius(d.source);\n//           let x2 = d.target.x;\n//           let y2 = d.target.y - radius(d.target);\n//           //return `M${x1},${y1}L${x2},${y2}`;\n//           return `M${x1},${y1}C${x1},${y1 + 15},${x2},${y2 - 15},${x2},${y2}`;\n//         });\n//         break;\n//     }\n\n//     // update node positions\n//     node\n//       .attr(\"cx\", function(d) {\n//         return d.x;\n//       })\n//       .attr(\"cy\", function(d) {\n//         return d.y;\n//       });\n//   }\n//   update();\n// }\n\n/**\n * New drawwing code - only does Beziers\n * has a few parameters\n * and cannot update node positions\n *\n * @param {Graph} graph\n * @param {string} selector=\"body\"\n * @param {Object} params={}\n * @param {number} [params.height = 800]\n * @param {number} [params.nodeRadius = 4.5]\n * @param {?Boolean} [params.drawPhantoms]\n * @param {number} [params.bezierVert = 25]\n */\n// @ts-ignore\n// @ts-ignore\nexport function drawGraph(graph, selector = \"body\", vueThis, params = {}) {\n  let nodeRadius = params.nodeRadius || 4.5;\n  let bvert = params.bezierVert || 15;\n  let height = params.height || 985;\n  const width = Math.max(...graph.nodes.map(n => n.x)) + nodeRadius;\n\n  let svg = d3\n    // @ts-ignore\n    .select(selector)\n    .append(\"svg\")\n    .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n    .attr(\"viewBox\", `0 0 ${width} ${height}`)\n    .call(\n      // @ts-ignore\n      d3.zoom().on(\"zoom\", function() {\n        // @ts-ignore\n        svg.attr(\"transform\", d3.event.transform);\n      })\n    )\n    .append(\"g\");\n\n  let paths;\n\n  // create the Bezier segment from x1,y1 to x2,y2 - assuming that x1,y1 was the last point\n  // note that the derivatives go vertically\n  function cseg(x1, y1, x2, y2) {\n    // I made this a variable to experiment with computing better values\n    // nothing works well\n    let bv = bvert;\n    return `C${x1},${y1 + nodeRadius + bv},${x2},${y2 -\n      nodeRadius -\n      bv},${x2},${y2 - nodeRadius}`;\n  }\n\n  // @ts-ignore\n  function pathId(links) {\n    return (\n      util.FORMAT_TO_ID(links[\"source\"][\"name\"]) +\n      \"---\" +\n      util.FORMAT_TO_ID(links[\"target\"][\"name\"])\n    );\n  }\n\n  // we only create links for the non-phantom source nodes\n  // we then trace through the phantom nodes\n  paths = svg\n    .selectAll(\".link\")\n    .data(graph.links.filter(link => !link.source.phantom))\n    .enter()\n    .append(\"svg:path\")\n    .attr(\"id\", pathId)\n    .attr(\"stroke-width\", 0.75)\n    .attr(\"fill\", \"none\")\n    .attr(\"d\", function(d) {\n      // start at the beginning of the first source\n      let x1 = d.source.x;\n      let y1 = d.source.y + nodeRadius;\n      let pstr = `M${x1},${y1}`;\n      let next = d.target;\n      // traverse phantom nodes\n      while (next.phantom) {\n        let x2 = next.x;\n        let y2 = next.y;\n        pstr += cseg(x1, y1, x2, y2);\n        // vertical line through the node's location\n        pstr += `L${x2},${y2 + nodeRadius}`;\n        next = next.children[0];\n        x1 = x2;\n        y1 = y2;\n      }\n      // now we go to the final place\n      let x2 = next.x;\n      let y2 = next.y;\n      pstr += cseg(x1, y1, x2, y2);\n      return pstr;\n    });\n\n  paths.style(\"stroke\", link => link.color).attr(\"class\", \"link\");\n  paths.on(\"mouseover\", function handle(d) {\n    // @ts-ignore\n    let link = d3.select(this);\n    link.style(\"stroke\", \"#FF6F61\");\n   \n    /**\n     * \n     * \n     * Need to add the hover over edge show tooltips\n     * on both nodes functionality here\n     * \n     * \n     */\n  });\n  paths.on(\"mouseout\", function handle(d) {\n    // @ts-ignore\n    d3.select(this).style(\"stroke\", d.color);\n  });\n\n  /**\n   * Assign an id to each circle based on node type\n   * @param {Object} node\n   */\n  // Assign an id to each circle based on node type\n  // @ts-ignore\n  function nodeId(node) {\n    if (node.phantom) {\n      return \"phantom-\" + util.FORMAT_TO_ID(node.name);\n    } else {\n      return \"circle-\" + util.FORMAT_TO_ID(node.name);\n    }\n  }\n\n  // @ts-ignore\n  function handleMouseOver() {\n    // Use D3 to select element, change color and size\n    // @ts-ignore\n    let node = d3.select(this);\n    node.attr(\"r\", nodeRadius * 2);\n\n    // @ts-ignore\n    let d3plus = require(\"d3plus-tooltip\");\n    // @ts-ignore: This is a notation that d3plus-tooltip uses\n    new d3plus.Tooltip()\n      .data([{ name: node.attr(\"name\") }])\n      .thead([\n        function(node) {\n          return node.name;\n        }\n      ])\n      .position(\"#\" + node.attr(\"id\"))\n      .render();\n  }\n\n  // @ts-ignore\n  function handleMouseOut() {\n    // @ts-ignore\n    d3.select(this).attr(\"r\", nodeRadius);\n    // @ts-ignore\n    d3.select(\".d3plus-tooltip\").remove();\n  }\n\n  function handleMouseClick() {\n    // @ts-ignore\n    vueThis.selectedCellName = d3.select(this).attr(\"name\");\n  }\n\n  function nodeClass(node) {\n    if (node.phantom) {\n      return \"phantom\";\n    } else {\n      return \"cell\";\n    }\n  }\n\n  function nodeColor(node) {\n    if (node.phantom) return \"#42b98300\";\n    if (node.istree) return \"#faed27\";\n    return \"#faed27\";\n  }\n\n  function nodeName(node) {\n    return node.name;\n  }\n\n  function nodeStroke(node) {\n    if (node.phantom) return \"none\";\n    return \"#000\";\n  }\n\n  let node = svg\n    .selectAll(\".node\")\n    .data(\n      params.drawPhantoms ? graph.nodes : graph.nodes.filter(n => !n.phantom)\n    )\n    .enter()\n    .append(\"circle\")\n    .attr(\"name\", nodeName)\n    .attr(\"id\", nodeId)\n    .attr(\"class\", nodeClass)\n    .attr(\"r\", nodeRadius)\n    .style(\"fill\", nodeColor)\n    .style(\"stroke\", nodeStroke)\n    .style(\"stroke-width\", 0.5)\n    .attr(\"cx\", d => d.x)\n    .attr(\"cy\", d => d.y);\n\n  node\n    .filter(\".cell\")\n    .on(\"mouseover\", handleMouseOver)\n    .on(\"mouseout\", handleMouseOut)\n    .on(\"click\", handleMouseClick);\n\n  node.append(\"title\").text(function(d) {\n    return `${\n      d.index\n    }:${d.name} ${strifyNodes(d.dalevel, \"index\")} tw:${d.twidth}`;\n  });\n}\n","import { Link, Graph, Vertex } from \"./graph.js\";\n\n/* just make the graph data structure given the input data */\n/**\n *\n * @param {Graph} data\n */\nexport function jsonToGraph(data) {\n  // we have a set of node names (in data) with their children\n  // make a list of node objects\n  // warning: arrow notation can't return an object directly\n  let nodes = Object.keys(data).map(name => new Vertex(name));\n\n  // make a dictionary so that we can find things by name\n  // it's called \"node\" since it lets us find a node\n  let node = {};\n  nodes.forEach(function(n) {\n    node[n.name] = n;\n  });\n\n  // assign reasonable indecies\n  nodes.forEach((node, idx) => (node.index = idx));\n\n  // make links in the correct format\n  // now process all of the links - create a list of links, as well\n  // as store the graph information in the nodes\n  let links = [];\n  for (const sourceName in data) {\n    data[sourceName].forEach(function(targetName) {\n      const source = node[sourceName];\n      const target = node[targetName];\n      if (!source) console.log(`Bad node ${sourceName} as source`);\n      if (!target) console.log(`Bad node ${targetName} as target`);\n      if (source && target) {\n        let link = new Link(source, target);\n        links.push(link);\n        source.children.push(target);\n        target.parents.push(source);\n      }\n    });\n  }\n\n  return new Graph(nodes, links);\n}\n","/*jshint esversion: 6 */\n// @ts-check\nimport { Graph } from \"./graph.js\";\n\n/**\n * @param {Graph} graph\n */\nexport function primaryParent(graph) {\n  // for every node, choose it's primary parent\n  graph.nodes.forEach(function(node) {\n    node.primaryParent = undefined;\n    let maxChildren = 0;\n    node.parents.forEach(function(parent) {\n      const parentKids = parent.children.length;\n      if (parentKids > maxChildren) {\n        maxChildren = parentKids;\n        node.primaryParent = parent;\n      }\n    });\n  });\n  // for every node, get all of the children for which it is primary\n  graph.nodes.forEach(node => (node.primaryChildren = []));\n  graph.nodes.forEach(node => {\n    if (node.primaryParent) node.primaryParent.primaryChildren.push(node);\n  });\n}\n","/*jshint esversion: 6 */\n// @ts-check\nimport { Graph } from \"./graph.js\";\nimport { average, sum } from \"./utils.js\";\n\nimport * as d3 from \"d3\";\n\nfunction xLength(graph) {\n  const diffs = graph.links.map(link =>\n    Math.abs(link.source.x - link.target.x)\n  );\n  return diffs.reduce((a, b) => (b += a));\n}\n\n/** use the d3 layout */\nexport function d3Layout(graph, levelSep = 100, leftMargin = 10) {\n  // @ts-ignore\n  let hier = d3.hierarchy(graph.hierarchy());\n  // @ts-ignore\n  let tree = d3.tree();\n  // @ts-ignore\n  tree.size([]); // do we have to give it a size?\n  // node size is fixed - so instead, use separation to control spacing\n  tree.separation(function(a, b) {\n    let na = a.data.node;\n    let nb = b.data.node;\n    if (na && nb) {\n      return 1 + (na.phantom ? 2 : 5) + (nb.phantom ? 2 : 5);\n    } else {\n      return 10;\n    }\n  });\n  tree.nodeSize([1, 1]);\n  tree(hier);\n  // things are centered at zero, so shift things\n  // @ts-ignore\n  let left = Math.min(...hier.descendants().map(n => n.x));\n  hier.descendants().forEach(n => {\n    // @ts-ignore\n    n.x -= left - leftMargin;\n  });\n  // copy the D3 positions into the node positions\n  hier.descendants().forEach(function(node) {\n    if ((node.data, node)) {\n      // @ts-ignore\n      node.data.node.x = node.x;\n      node.data.node.y = (node.data.node.longest + 1) * levelSep;\n    }\n  });\n}\n\n/**\n *\n * @param {Graph} graph\n */\nexport function layout(graph) {\n  // for debugging - keep a set of nodes (a dictionary) that we'll do print statements\n  const examine = {\n    129: true\n  };\n\n  const width = 1200;\n  const topmargin = 50;\n  const levelSep = 50;\n\n  const vertexRadius = 5;\n  const phantomRadius = 1;\n  const spacer = 2;\n\n  function space(node) {\n    return spacer + (node.phantom ? phantomRadius : vertexRadius);\n  }\n\n  const levels = graph.getLevels();\n  // @ts-ignore\n  // @ts-ignore\n  const links = graph.links;\n\n  // assign indecies based on levels\n  // this means creating a new node list\n  const orderedNodes = [];\n  levels.forEach(level => level.forEach(n => orderedNodes.push(n)));\n  orderedNodes.forEach((node, idx) => (node.index = idx));\n\n  // make initial positions\n  levels.forEach(function(level, li) {\n    let left = 0;\n    // @ts-ignore\n    // @ts-ignore\n    level.forEach(function(n, ni) {\n      // @ts-ignore\n      // @ts-ignore\n      let px = n.parents.length ? Math.min(...n.parents.map(m => m.x)) : 0;\n      n.x = left + space(n); // Math.max(px, left+space(n));\n      n.y = topmargin + li * levelSep;\n      left = n.x + space(n);\n    });\n  });\n  console.log(`Initial Lengths = ${xLength(graph)}`);\n\n  // adjust initial positions to the right\n  if (1) {\n    // need to go bottom to top\n    // levels.forEach( function(level,li)\n    for (let li = levels.length - 1; li >= 0; li--) {\n      const level = levels[li];\n      let right = width;\n      // go from right to left shifting things right if they can\n      for (let ni = level.length - 1; ni >= 0; ni--) {\n        let n = level[ni];\n\n        // if the rightmost thing is a leaf, we might want to move it to\n        // make space for other things\n        let rightLeaf = width;\n\n        // 4 different heuristics as to where to move to - purely aesthetics\n        let nx1 = n.children.length\n          ? Math.min(...n.children.map(m => m.x))\n          : rightLeaf;\n        let nx3 = n.children.length\n          ? Math.max(...n.children.map(m => m.x))\n          : rightLeaf;\n        // @ts-ignore\n        // @ts-ignore\n        let nx2 = (nx1 + nx3) / 2;\n        let na = n.children.length\n          ? average(n.children.map(m => m.x))\n          : rightLeaf;\n\n        if (n.index in examine) {\n          console.log(`right: n.x:${n.x} na:${na} right:${right}`);\n        }\n\n        let nx = Math.max(na, n.x);\n        n.x = Math.min(nx, right - space(n));\n        right = n.x - space(n);\n      }\n    } // );\n  }\n\n  function argmax(lst) {\n    let val = lst[0];\n    let mi = 0;\n    for (let i = 1; i < lst.length; i++) {\n      if (lst[i] > val) {\n        mi = i;\n        val = lst[i];\n      }\n    }\n    return mi;\n  }\n\n  function argmin(lst) {\n    let val = lst[0];\n    let mi = 0;\n    for (let i = 1; i < lst.length; i++) {\n      if (lst[i] < val) {\n        mi = i;\n        val = lst[i];\n      }\n    }\n    return mi;\n  }\n\n  // greedy pull left\n  // if the average of the children of a parent is to the right of the parent\n  // then this is a candidate to move to the left\n  // a parent should shift its children to the left if they aren't centered\n  levels.forEach(function(level) {\n    let left = 0;\n    level.forEach(function(node) {\n      if (node.primaryChildren.length) {\n        // we can't count on the ordering of the primary children\n        let leftChild =\n          node.primaryChildren[argmin(node.primaryChildren.map(n => n.x))];\n        let rightChild =\n          node.primaryChildren[argmax(node.primaryChildren.map(n => n.x))];\n        // console.log(`$N:${node.name} LC:${leftChild.name} RC:${rightChild.name} Left:${left}`)\n        // figure out how much shift we want\n        let goalDelta = average(node.primaryChildren.map(n => n.x)) - node.x;\n        if (goalDelta > 0) {\n          // we want to shift left, but how much can we\n          let maxShift = leftChild.x - (left + space(leftChild));\n          let shift = Math.min(maxShift, goalDelta);\n          if (shift > 0) {\n            node.primaryChildren.forEach(n => (n.x -= shift));\n          }\n        }\n        // put the boundary to the right of the rightmost child\n        left = rightChild.x + space(rightChild);\n      }\n    });\n  });\n\n  console.log(`Final Lengths = ${xLength(graph)}`);\n\n  // Report Out\n  console.log(\n    `${graph.nodes.length} nodes (w/phantoms), ${graph.links.length} links (w/phantoms)`\n  );\n  console.log(`${graph.constraints.length} constraints`);\n}\n\n/**\n * New version - use tree layout first (which will be too wide) and then try to do some packing for conciseness\n * @param {Graph} graph\n */\nexport function treeLayout(graph) {\n  // parameters (should be passed)\n  const topmargin = 50;\n  const levelSep = 65;\n\n  const vertexRadius = 5;\n  const phantomRadius = 2;\n  const spacer = 2;\n\n  function space(node) {\n    return spacer + (node.phantom ? phantomRadius : vertexRadius);\n  }\n\n  function minwid(node) {\n    return spacer + 2 * (node.phantom ? phantomRadius : vertexRadius);\n  }\n\n  const levels = graph.getLevels();\n\n  // compute various vertex properties - needs to be done from bottom to top\n  for (let li = levels.length - 1; li >= 0; li--) {\n    const level = levels[li];\n    // figure out the twidth of each node - the twidth includes the \"left\" spacer\n    level.forEach(function(node) {\n      // jshint ignore:line\n      node.twidth = Math.max(\n        minwid(node),\n        sum(node.primaryChildren.map(n => n.twidth))\n      );\n    });\n  }\n\n  // in theory, if we use the twidths, we shoud get a left leaning tree layout\n  levels.forEach(function(level, li) {\n    let left = vertexRadius;\n    level.forEach(function(node) {\n      node.x = Math.max(\n        left + space(node),\n        node.primaryParent ? node.primaryParent.x : 0\n      );\n      node.y = topmargin + li * levelSep;\n      // left += node.twidth;\n      left = node.x - space(node) + node.twidth;\n    });\n  });\n\n  // we have a left leaning tree, center parents over their kids (if we can move them that far right)\n  for (let ni = graph.nodes.length - 1; ni >= 0; ni--) {\n    const node = graph.nodes[ni];\n    if (node.primaryChildren.length) {\n      const goalX = average(node.primaryChildren.map(n => n.x));\n      const neighbor = graph.nodes[ni + 1];\n      if (neighbor.longest == node.longest) {\n        const maxX = neighbor.x - space(node) - space(neighbor) + spacer;\n        node.x = Math.min(maxX, goalX);\n      } else {\n        node.x = goalX;\n      }\n    }\n  }\n}\n","<template>\n  <v-layout row wrap>\n    <v-flex md12>\n      <v-card :max-height=\"maxCardHeight\" :color=\"$vuetify.theme.themes[this.$store.getters.getCurrentThemeMode].background\">\n        <v-card-title class=\"justify-center\">\n          <h4 class=\"view-title\">Graph View</h4>\n          <v-spacer />\n          <v-chip v-if=\"cellType1\" class=\"ma-2\">{{ cellType1 }}</v-chip>\n          <v-chip v-if=\"cellType2\" class=\"ma-2\">{{ cellType2 }}</v-chip>\n        </v-card-title>\n        <v-card-text>\n          <div ref=\"graph\" id=\"graph\"></div>\n        </v-card-text>\n      </v-card>\n    </v-flex>\n  </v-layout>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\nimport _ from \"lodash\";\n\nimport * as config from \"@/config\";\nimport * as util from \"@/util\";\n\nimport { analyzeGraph } from \"@/apis/graph.js\";\nimport { average, countCrossingsGraph, simpleSorter } from \"@/apis/utils.js\";\nimport { drawGraph } from \"@/apis/draw.js\";\nimport { jsonToGraph } from \"@/apis/structure.js\";\nimport { primaryParent } from \"@/apis/tangler.js\";\nimport { treeLayout } from \"@/apis/layout.js\";\n\nexport default {\n  name: \"cell-graph\",\n  props: {\n    cellData: Object\n  },\n  mounted() {\n    this.fetchData();\n  },\n  data() {\n    return {\n      cellType1: \"\",\n      cellType2: \"\",\n      keyValueDict: {},\n      listLocalCopy: [],\n      listSize: config.MAX_SELECTED_CELL_TYPE_NUMBER,\n      loaded: false,\n      loadedDictData: {},\n      maxCardHeight: config.FIRST_ROW_CARD_MAX_HEIGHT,\n      selectedCellName: \"\",\n      pathsDict: {}\n    };\n  },\n  methods: {\n    async fetchData() {\n      let data = await d3.json(\"./top_abs_10_dict.json\");\n      this.loadedDictData = data;\n    },\n\n    /**\n     * If any of these edge cases nodes are contained,\n     * return true (need to fade the edge in current case)\n     */\n    linkArrayEdgeCases(edgeCaseCheck) {\n      return (\n        edgeCaseCheck === \"cell\" ||\n        edgeCaseCheck === \"native cell\" ||\n        edgeCaseCheck === \"eukaryotic cell\"\n      );\n    },\n\n    /**\n     * Draw, layout and show graph on view\n     */\n    showGraph() {\n      let graph = jsonToGraph(this.cellData);\n      analyzeGraph(graph);\n      primaryParent(graph);\n      for (let i = 0; i < 20; i++) {\n        simpleSorter(graph, 3, i);\n      }\n      graph.links.forEach(\n        link =>\n          (link.color =\n            link.target.primaryParent == link.source ? \"#42b983\" : \"#42b983\")\n      );\n      treeLayout(graph);\n      drawGraph(graph, this.$refs.graph, this);\n    }\n  },\n  computed: {\n    geneSelected: {\n      get() {\n        return this.$store.getters.getGeneSelected;\n      }\n    },\n    cellSelected: {\n      get() {\n        return this.$store.getters.getCellSelected;\n      }\n    },\n    topGeneCellList: {\n      get() {\n        return this.$store.getters.getTopGeneCellList;\n      }\n    },\n    search: {\n      get() {\n        return this.$store.getters.getSearch;\n      },\n      set(value) {\n        return this.$store.dispatch(\"changeSearch\", value);\n      }\n    }\n  },\n  watch: {\n    // This is entry point of where the graph starts rendering\n    cellData() {\n      this.loaded = true;\n      this.listLocalCopy = util.GENERATE_LIST_COPY(this.cellData);\n      // Create a key(cell name) value(cell neighbors) list dict\n      const keys = Object.entries(this.listLocalCopy);\n      keys.forEach(item => {\n        this.keyValueDict[item[1][0]] = item[1][1];\n      });\n\n      for (let i = 0; i < this.listLocalCopy.length; i++) {\n        this.listLocalCopy[i].push(i.toString());\n      }\n      this.showGraph();\n    },\n    cellSelected() {\n      let curList = this.cellSelected;\n      this.cellType1 = \"\";\n      this.cellType2 = \"\";\n\n      if (curList.length == 1) {\n        this.cellType1 = curList[0];\n      } else if (curList.length == 2) {\n        this.cellType1 = curList[0];\n        this.cellType2 = curList[1];\n      }\n      // Set all cell nodes back to default\n      let svgClear = d3.select(this.$refs.graph).select(\"svg\");\n      svgClear\n        .selectAll(\".cell\")\n        .style(\"r\", config.NODE_RADIUS_DEFAULT)\n        .transition()\n        .style(\"fill\", config.CELL_TYPE_DEFAULT_COLOR);\n      // Highlight the node being selected\n      for (let i = 0; i < curList.length; i++) {\n        let svgHighlight = d3.select(this.$refs.graph).select(\"svg\");\n        svgHighlight\n          .select(\"#circle-\" + util.FORMAT_TO_ID(curList[i]))\n          .style(\"r\", config.NODE_RADIUS_POPPED)\n          .transition()\n          .style(\"fill\", config.CELL_TYPE_CHANGED_COLOR);\n      }\n    },\n    // Maintain selected cell type in display list\n    selectedCellName() {\n      let curList = this.cellSelected;\n      while (curList.length >= this.listSize) {\n        curList.pop();\n      }\n      curList.push(this.selectedCellName);\n      this.$store.dispatch(\"changeCellSelected\", curList);\n    },\n    /**\n     * Fade cell types that does not contain selected gene as top 10\n     */\n    geneSelected() {\n      let globalThis = this;\n      let dict = this.loadedDictData;\n      /* Reset default cell opacity(1) */\n      let cellReset = d3.select(this.$refs.graph).select(\"svg\");\n      cellReset = d3.selectAll(\".cell\").style(\"opacity\", 1);\n      /* Reset link opacity(1) and width(0.5) */\n      let linkReset = d3.select(this.$refs.graph).select(\"svg\");\n      linkReset = d3\n        .selectAll(\".link\")\n        .style(\"opacity\", 1.0)\n        .attr(\"stroke-width\", 0.5);\n\n      if (this.geneSelected === \"\") {\n        return;\n      }\n\n      let cellTypesThatFitCriteria = new Set();\n\n      /* Determine if each cell type contain selected gene as its top 10 */\n      for (const cellType of Object.entries(dict)) {\n        let cellName = cellType[0];\n        let cellValues = cellType[1];\n        let geneExist = false;\n        for (const gene of cellValues) {\n          let geneName = gene[2];\n          if (this.geneSelected === geneName) {\n            geneExist = true;\n            break;\n          }\n        }\n        /* If a gene is not among a cell type's top 10 */\n        if (!geneExist) {\n          /* Fade the cell type on graph */\n          let svgFade = d3.select(this.$refs.graph).select(\"svg\");\n          svgFade\n            .select(\"#circle-\" + util.FORMAT_TO_ID(cellName))\n            .style(\"opacity\", 0.2);\n        } else {\n          /* Add it to the cell type set */\n          cellTypesThatFitCriteria.add(\n            cellName\n              .replace(/-/g, \" \")\n              .replace(/\\(/g, \"\")\n              .replace(/\\)/g, \"\")\n              .replace(/,/, \"\")\n              .replace(/\\//g, \"-\")\n          );\n        }\n      }\n\n      /**\n       * Current edge cases of nodes that needs to be manually faded,\n       * need to figure out what happened here.\n       */\n      let svgEdgeCase1 = d3.select(this.$refs.graph).select(\"svg\");\n      svgEdgeCase1\n        .select(\"#circle-\" + util.FORMAT_TO_ID(\"cell\"))\n        .style(\"opacity\", 0.2);\n      let svgEdgeCase2 = d3.select(this.$refs.graph).select(\"svg\");\n      svgEdgeCase2\n        .select(\"#circle-\" + util.FORMAT_TO_ID(\"native cell\"))\n        .style(\"opacity\", 0.2);\n      let svgEdgeCase3 = d3.select(this.$refs.graph).select(\"svg\");\n      svgEdgeCase3\n        .select(\"#circle-\" + util.FORMAT_TO_ID(\"eukaryotic cell\"))\n        .style(\"opacity\", 0.2);\n\n      /**\n       * Fade links does not have both nodes contained in our node set\n       */\n      d3.select(this.$refs.graph)\n        .select(\"svg\")\n        .selectAll(\".link\")\n        .each(function(d) {\n          let linkArray = d3\n            .select(this)\n            .attr(\"id\")\n            .split(\"---\");\n          for (let i = 0; i < linkArray.length; i++) {\n            linkArray[i] = linkArray[i]\n              .replace(/-/g, \" \")\n              .replace(/\\(/g, \"\")\n              .replace(/\\)/g, \"\")\n              .replace(/,/, \"\")\n              .replace(/\\//g, \"-\");\n          }\n          if (\n            !cellTypesThatFitCriteria.has(linkArray[0]) ||\n            !cellTypesThatFitCriteria.has(linkArray[1]) ||\n            globalThis.linkArrayEdgeCases(linkArray[0]) ||\n            globalThis.linkArrayEdgeCases(linkArray[1])\n          ) {\n            d3.select(this).style(\"opacity\", 0.2);\n          } else {\n            // Increase the stroke width if fit all the criteria\n            d3.select(this).attr(\"stroke-width\", 3);\n          }\n        });\n    }\n  }\n};\n</script>\n\n<style scoped>\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CellGraph.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CellGraph.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CellGraph.vue?vue&type=template&id=ba93787c&scoped=true&\"\nimport script from \"./CellGraph.vue?vue&type=script&lang=js&\"\nexport * from \"./CellGraph.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ba93787c\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\",\"align-center\":\"\"}},[_c('v-flex',{attrs:{\"md12\":\"\"}},[_c('v-card',{style:({\n        background:\n          _vm.$vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n            .background\n      }),attrs:{\"max-height\":\"595\"}},[_c('v-card-title',{staticClass:\"justify-center\"},[_c('h4',{staticClass:\"view-title\"},[_vm._v(\"Gene Details View\")]),_c('v-spacer'),_c('v-btn',{attrs:{\"medium\":\"\",\"color\":\"red\",\"justify-right\":\"\",\"dark\":\"\"},on:{\"click\":_vm.removeGeneDetails}},[_c('v-icon',{attrs:{\"dark\":\"\"}},[_vm._v(\"remove_circle\")])],1)],1),_c('v-card-text',[_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[(_vm.geneNotEmpty())?_c('v-flex',{attrs:{\"md9\":\"\",\"sm12\":\"\"}},[_c('v-text-field',{attrs:{\"append-icon\":\"search\",\"label\":\"search\",\"single-line\":\"\",\"hide-details\":\"\",\"hide-no-data\":\"\"},model:{value:(_vm.search),callback:function ($$v) {_vm.search=$$v},expression:\"search\"}})],1):_vm._e(),_c('v-spacer'),(_vm.geneNotEmpty())?_c('v-flex',{attrs:{\"md3\":\"\",\"sm12\":\"\"}},[_c('v-select',{attrs:{\"items\":_vm.sortOptions,\"label\":\"sort\"},on:{\"input\":_vm.sortBasedOnOption},model:{value:(_vm.option),callback:function ($$v) {_vm.option=$$v},expression:\"option\"}})],1):_vm._e()],1),_c('v-layout',[(_vm.geneNotEmpty())?_c('v-flex',[_c('h3',{staticClass:\"sub-title\"},[_vm._v(\"Gene: \"+_vm._s(_vm.geneSelectedPresentedName))]),_c('div',{staticClass:\"gene-description\"},[_vm._v(_vm._s(_vm.geneSelectedDescription))]),_c('v-list',{staticClass:\"list\",class:{ 'max-height': _vm.listHeight },style:({\n                background:\n                  _vm.$vuetify.theme.themes[\n                    this.$store.getters.getCurrentThemeMode\n                  ].background\n              })},_vm._l((_vm.filteredGeneCellList),function(value,index){return _c('v-list-item',{key:index,on:{\"click\":function($event){return _vm.setCellSelected(value[0])}}},[_c('v-layout',[_c('v-flex',{staticClass:\"index\",attrs:{\"md3\":\"\",\"offset-md1\":\"\"}},[_vm._v(_vm._s(value[0])+\": \")]),_c('v-flex',{attrs:{\"md6\":\"\",\"offset-md1\":\"\"}},[_c('span',[_c('v-tooltip',{attrs:{\"top\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\n              var on = ref.on;\nreturn [_c('v-progress-linear',_vm._g({attrs:{\"value\":_vm.setGeneIndexBarChartRatio(value, 0),\"color\":_vm.setGeneIndexBarChartColor(value, 1),\"height\":\"15\",\"rounded\":\"\",\"striped\":\"\",\"reactive\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\n              var value = ref.value;\nreturn [_vm._v(\"\\n                              \"+_vm._s(((value / 100) * _vm.maxGeneMagnitude).toFixed(\n                                  _vm.fixedGeneDigits\n                                ))+\"\\n                            \")]}}],null,true)},on))]}}],null,true)},[_c('span',[_vm._v(_vm._s(value[1]))])])],1)])],1)],1)}),1)],1):_vm._e()],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-layout row wrap align-center>\n    <v-flex md12>\n      <v-card\n        max-height=\"595\"\n        :style=\"{\n          background:\n            $vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n              .background\n        }\"\n      >\n        <v-card-title class=\"justify-center\">\n          <h4 class=\"view-title\">Gene Details View</h4>\n          <v-spacer></v-spacer>\n          <v-btn\n            medium\n            color=\"red\"\n            justify-right\n            dark\n            @click=\"removeGeneDetails\"\n          >\n            <v-icon dark>remove_circle</v-icon>\n          </v-btn>\n        </v-card-title>\n        <v-card-text>\n          <v-layout row wrap>\n            <v-flex md9 sm12 v-if=\"geneNotEmpty()\">\n              <v-text-field\n                v-model=\"search\"\n                append-icon=\"search\"\n                label=\"search\"\n                single-line\n                hide-details\n                hide-no-data\n              ></v-text-field>\n            </v-flex>\n            <v-spacer />\n            <v-flex md3 sm12 v-if=\"geneNotEmpty()\">\n              <v-select\n                v-model=\"option\"\n                :items=\"sortOptions\"\n                @input=\"sortBasedOnOption\"\n                label=\"sort\"\n              ></v-select>\n            </v-flex>\n          </v-layout>\n          <v-layout>\n            <v-flex v-if=\"geneNotEmpty()\">\n              <h3 class=\"sub-title\">Gene: {{ geneSelectedPresentedName }}</h3>\n              <div class=\"gene-description\">{{ geneSelectedDescription }}</div>\n              <v-list\n                :class=\"{ 'max-height': listHeight }\"\n                class=\"list\"\n                :style=\"{\n                  background:\n                    $vuetify.theme.themes[\n                      this.$store.getters.getCurrentThemeMode\n                    ].background\n                }\"\n              >\n                <v-list-item\n                  v-for=\"(value, index) in filteredGeneCellList\"\n                  :key=\"index\"\n                  @click=\"setCellSelected(value[0])\"\n                >\n                  <v-layout>\n                    <v-flex md3 offset-md1 class=\"index\"\n                      >{{ value[0] }}:&nbsp;</v-flex\n                    >\n                    <v-flex md6 offset-md1>\n                      <span>\n                        <v-tooltip top>\n                          <template v-slot:activator=\"{ on }\">\n                            <v-progress-linear\n                              :value=\"setGeneIndexBarChartRatio(value, 0)\"\n                              :color=\"setGeneIndexBarChartColor(value, 1)\"\n                              height=\"15\"\n                              v-on=\"on\"\n                              rounded\n                              striped\n                              reactive\n                            >\n                              <template v-slot=\"{ value }\">\n                                {{\n                                  ((value / 100) * maxGeneMagnitude).toFixed(\n                                    fixedGeneDigits\n                                  )\n                                }}\n                              </template>\n                            </v-progress-linear>\n                          </template>\n                          <span>{{ value[1] }}</span>\n                        </v-tooltip>\n                      </span>\n                    </v-flex>\n                  </v-layout>\n                </v-list-item>\n              </v-list>\n            </v-flex>\n          </v-layout>\n        </v-card-text>\n      </v-card>\n    </v-flex>\n  </v-layout>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\n\nexport default {\n  name: \"gene-details\",\n  props: [],\n  mounted() {\n    // Fetch gene data once mounted\n    this.fetchData();\n  },\n  data() {\n    return {\n      cellTypeNames: [],\n      filteredList: [],\n      fixedGeneDigits: 5,\n      geneSelectedPresentedName: \"\",\n      geneSelectedDescription: \"\",\n      listHeight: \"400px\",\n      loadedDictData: {},\n      loadedGeneIdToNameDict: {},\n      loadedGeneIdToDescriptionDict: {},\n      maxGeneMagnitude: 0.14907,\n      sortOptions: [\"default\", \"strength\", \"magnitude\", \"cell type name\"]\n    };\n  },\n  methods: {\n    async fetchData() {\n      this.loadedDictData = await d3.json(\"./top_abs_10_dict.json\");\n      this.loadedGeneIdToNameDict = await d3.json(\"./gene_id_to_name.json\");\n      this.loadedGeneIdToDescriptionDict = await d3.json(\n        \"gene_id_to_description.json\"\n      );\n    },\n    filterBySearchList(list) {\n      let globalThis = this;\n      let filterBySearchList = [];\n      list.forEach(element => {\n        let lowerCaseElement = element[0].toLowerCase();\n        if (lowerCaseElement.includes(globalThis.search.toLowerCase())) {\n          filterBySearchList.push(element);\n        }\n      });\n      return filterBySearchList;\n    },\n    geneNotEmpty() {\n      return this.geneSelected !== \"\";\n    },\n    navigateToGenePage() {\n      window.open(\n        \"http://useast.ensembl.org/Homo_sapiens/Gene/Summary?g=\" +\n          this.geneSelected\n      );\n    },\n    removeGeneDetails() {\n      this.$store.dispatch(\"changeGeneSelected\", \"\");\n    },\n    returnToDefaultList() {\n      let list = [];\n      let globalThis = this;\n      for (const [key, value] of Object.entries(this.loadedDictData)) {\n        let geneArr = value;\n        for (let i = 0; i < geneArr.length; i++) {\n          if (geneArr[i][2] === globalThis.geneSelected) {\n            let cellName = key;\n            let geneValue = value[i][1].toFixed(this.fixedGeneDigits);\n            list.push([cellName, geneValue]);\n          }\n        }\n      }\n\n      return this.filterBySearchList(list);\n    },\n    setCellSelected(cellName) {\n      let curList = this.$store.getters.getCellSelected;\n      if (curList.length > 1) {\n        curList.pop();\n      }\n      curList.push(cellName);\n      this.$store.dispatch(\"changeCellSelected\", curList);\n    },\n    sortBasedOnOption(option) {\n      let globalThis = this;\n      switch (option) {\n        case \"default\":\n          return this.filterBySearchList(this.filteredList);\n        case \"strength\":\n          return this.filterBySearchList(\n            this.filteredList.sort((a, b) =>\n              Math.abs(a[1]) > Math.abs(b[1]) ? -1 : 1\n            )\n          );\n        case \"magnitude\":\n          return this.filterBySearchList(\n            this.filteredList.sort((a, b) => (a[1] > b[1] ? -1 : 1))\n          );\n        case \"cell type name\":\n          return this.filterBySearchList(\n            this.filteredList.sort((a,b) => (a[0].toLowerCase() < b[0].toLowerCase() ? -1 : 1))\n          )\n      }\n    },\n    topGeneDataExist(topGenes, cellTypeName) {\n      return typeof topGenes[this.geneSelected] !== \"undefined\";\n    },\n\n    setGeneIndexBarChartRatio(geneValues, columnIndex) {\n      let globalThis = this;\n      let value = geneValues[1];\n      if (columnIndex == 0) {\n        return Math.abs(\n          ((value / globalThis.maxGeneMagnitude) * 100).toFixed(\n            globalThis.fixedGeneDigits\n          )\n        );\n      }\n    },\n\n    setGeneIndexBarChartColor(geneValues, columnIndex) {\n      let value = geneValues[1];\n      if (value >= 0) {\n        return \"primary\";\n      } else {\n        return \"pink\";\n      }\n    }\n  },\n  computed: {\n    filteredGeneCellList() {\n      return this.$store.getters.getGeneSearchOption === \"default\"\n        ? this.returnToDefaultList()\n        : this.sortBasedOnOption(this.$store.getters.getGeneSearchOption);\n    },\n    geneSelected: {\n      get() {\n        return this.$store.getters.getGeneSelected;\n      },\n      set(option) {\n        this.$store.dispatch(\"changeGeneSelected\", option);\n      }\n    },\n    option: {\n      get() {\n        return this.$store.getters.getGeneSearchOption;\n      },\n      set(option) {\n        this.$store.dispatch(\"changeGeneSearchOption\", option);\n      }\n    },\n    search: {\n      get() {\n        return this.$store.getters.getCellInGeneSearch;\n      },\n      set(input) {\n        this.$store.dispatch(\"changeCellInGeneSearch\", input);\n      }\n    }\n  },\n  watch: {\n    geneSelected() {\n      // Change sorting back to default\n      this.$store.dispatch(\"changeGeneSearchOption\", \"default\");\n      let globalThis = this;\n      // Clear both local list and store to receive updated values\n      globalThis.filteredList = [];\n      this.$store.dispatch(\"changeTopGeneCellList\", []);\n      this.geneSelectedPresentedName = this.loadedGeneIdToNameDict[\n        this.geneSelected\n      ];\n      this.geneSelectedDescription = this.loadedGeneIdToDescriptionDict[\n        this.geneSelected\n      ];\n\n      for (const [key, value] of Object.entries(this.loadedDictData)) {\n        let geneArr = value;\n        for (let i = 0; i < geneArr.length; i++) {\n          if (geneArr[i][2] === globalThis.geneSelected) {\n            let cellName = key;\n            let geneValue = value[i][1];\n            globalThis.filteredList.push([cellName, geneValue]);\n            globalThis.$store.dispatch(\"addToTopGeneCellList\", [\n              cellName,\n              geneValue\n            ]);\n          }\n        }\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\nv-card-title {\n  margin: 100px;\n}\n.list {\n  max-height: 355px;\n  overflow-y: auto;\n}\n.gene-web-link {\n  text-align: left;\n  margin-top: 10px;\n  text-decoration: underline;\n}\n.gene-description {\n  text-align: left;\n  font-weight: normal;\n  font-size: medium;\n  margin-top: 10px;\n  color: \"#fff\";\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GeneDetails.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GeneDetails.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GeneDetails.vue?vue&type=template&id=6bf70bbe&scoped=true&\"\nimport script from \"./GeneDetails.vue?vue&type=script&lang=js&\"\nexport * from \"./GeneDetails.vue?vue&type=script&lang=js&\"\nimport style0 from \"./GeneDetails.vue?vue&type=style&index=0&id=6bf70bbe&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6bf70bbe\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\",\"align-center\":\"\"}},[_c('v-flex',{attrs:{\"md12\":\"\"}},[_c('v-card',{style:({\n        background:\n          _vm.$vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n            .background\n      }),attrs:{\"max-height\":\"1300\"}},[_c('v-card-title',[_c('h4',{staticClass:\"view-title\"},[_vm._v(\"Cell Details View\")]),_c('v-spacer'),_c('v-btn',{attrs:{\"medium\":\"\",\"color\":\"red\",\"justify-right\":\"\",\"dark\":\"\"},on:{\"click\":_vm.removeCellSelected}},[_c('v-icon',{attrs:{\"dark\":\"\"}},[_vm._v(\"remove_circle\")])],1)],1),_c('v-card-text',[_c('v-layout',{attrs:{\"row\":\"\"}},[_c('v-flex',{attrs:{\"md12\":\"\",\"sm12\":\"\"}},[_c('v-layout',[_c('v-flex',{attrs:{\"md9\":\"\",\"sm12\":\"\"}},[_c('v-text-field',{attrs:{\"append-icon\":\"search\",\"label\":\"search\",\"single-line\":\"\",\"hide-details\":\"\",\"hide-no-data\":\"\"},model:{value:(_vm.search),callback:function ($$v) {_vm.search=$$v},expression:\"search\"}})],1),_c('v-flex',{attrs:{\"md3\":\"\",\"sm12\":\"\"}},[_c('v-select',{attrs:{\"items\":_vm.sortOptions,\"label\":\"sort\"},on:{\"input\":_vm.sortBasedOnOption},model:{value:(_vm.option),callback:function ($$v) {_vm.option=$$v},expression:\"option\"}})],1)],1),_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[(_vm.cellSelectedExist && _vm.geneDataExist(_vm.cellSelected[0]))?_c('v-flex',{attrs:{\"md6\":\"\",\"sm6\":\"\"}},[_c('h3',{staticClass:\"sub-title\"},[_vm._v(_vm._s(_vm.cellSelected[0]))]),_c('v-list',{staticClass:\"list\",style:({\n                    background:\n                      _vm.$vuetify.theme.themes[\n                        this.$store.getters.getCurrentThemeMode\n                      ].background\n                  })},_vm._l((_vm.filteredData[0]),function(value,index){return _c('v-list-item',{key:index,class:[\n                      value[2] === _vm.geneNameOnHover ? 'highlight-theme' : ''\n                    ],attrs:{\"color\":_vm.setOverlapGeneBackgroundColor(index, value, 0),\"input-value\":\"true\",\"dense\":\"\"},on:{\"click\":function($event){return _vm.setGeneItem(value)},\"mouseover\":function($event){return _vm.setGeneNameOnHover(index, value)},\"mouseleave\":function($event){return _vm.clearGeneNameOnHover()}}},[_c('v-layout',[_c('v-flex',{attrs:{\"md5\":\"\",\"sm5\":\"\"}},[_c('span',{staticClass:\"index\"},[_vm._v(_vm._s(_vm.loadedGeneIdToNameDict[value[2]])+\":\")])]),_c('v-flex',{attrs:{\"md7\":\"\",\"sm7\":\"\"}},[_c('span',[_c('v-tooltip',{attrs:{\"top\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\n                    var on = ref.on;\nreturn [_c('v-progress-linear',_vm._g({attrs:{\"value\":_vm.setGeneIndexBarChartRatio(\n                                    (\"\" + index),\n                                    (\"\" + value)\n                                  ),\"color\":_vm.setGeneIndexBarChartColor(\n                                    (\"\" + index),\n                                    (\"\" + value)\n                                  ),\"height\":\"15\",\"rounded\":\"\",\"striped\":\"\",\"reactive\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\n                                  var value = ref.value;\nreturn [_vm._v(\"\\n                                  \"+_vm._s((\n                                      (value / 100) *\n                                      _vm.maxGeneMagnitude\n                                    ).toFixed(_vm.fixedGeneDigits))+\"\\n                                \")]}}],null,true)},on))]}}],null,true)},[_c('span',[_vm._v(_vm._s(value[1]))])])],1)])],1)],1)}),1)],1):_vm._e(),(\n                  _vm.cellSelected.length == 2 && _vm.geneDataExist(_vm.cellSelected[1])\n                )?_c('v-flex',{attrs:{\"md6\":\"\",\"sm6\":\"\"}},[_c('h3',{staticClass:\"sub-title\"},[_vm._v(_vm._s(_vm.cellSelected[1]))]),_c('v-list',{staticClass:\"list\",style:({\n                    background:\n                      _vm.$vuetify.theme.themes[\n                        this.$store.getters.getCurrentThemeMode\n                      ].background\n                  })},_vm._l((_vm.filteredData[1]),function(value,index){return _c('v-list-item',{key:index,class:[\n                      value[2] === _vm.geneNameOnHover ? 'highlight-theme' : ''\n                    ],attrs:{\"color\":_vm.setOverlapGeneBackgroundColor(index, value, 1),\"input-value\":\"true\",\"dense\":\"\"},on:{\"click\":function($event){return _vm.setGeneItem(value)},\"mouseover\":function($event){return _vm.setGeneNameOnHover(index, value)},\"mouseleave\":function($event){return _vm.clearGeneNameOnHover()}}},[_c('v-layout',[_c('v-flex',{attrs:{\"md5\":\"\",\"sm12\":\"\"}},[_c('span',{staticClass:\"index\"},[_vm._v(_vm._s(_vm.loadedGeneIdToNameDict[value[2]])+\":\")])]),_c('v-flex',{attrs:{\"md7\":\"\",\"sm12\":\"\"}},[_c('span',[_c('v-tooltip',{attrs:{\"top\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\n                    var on = ref.on;\nreturn [_c('v-progress-linear',_vm._g({attrs:{\"value\":_vm.setGeneIndexBarChartRatio(\n                                    (\"\" + index),\n                                    (\"\" + value)\n                                  ),\"color\":_vm.setGeneIndexBarChartColor(\n                                    (\"\" + index),\n                                    (\"\" + value)\n                                  ),\"height\":\"15\",\"rounded\":\"\",\"striped\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\n                                  var value = ref.value;\nreturn [_vm._v(\"\\n                                  \"+_vm._s((\n                                      (value / 100) *\n                                      _vm.maxGeneMagnitude\n                                    ).toFixed(_vm.fixedGeneDigits))+\"\\n                                \")]}}],null,true)},on))]}}],null,true)},[_c('span',[_vm._v(_vm._s(value[1]))])])],1)])],1)],1)}),1)],1):_vm._e()],1)],1)],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-layout row wrap align-center>\n    <v-flex md12>\n      <v-card\n        max-height=\"1300\"\n        :style=\"{\n          background:\n            $vuetify.theme.themes[this.$store.getters.getCurrentThemeMode]\n              .background\n        }\"\n      >\n        <v-card-title>\n          <h4 class=\"view-title\">Cell Details View</h4>\n          <v-spacer></v-spacer>\n          <v-btn\n            medium\n            color=\"red\"\n            justify-right\n            dark\n            @click=\"removeCellSelected\"\n          >\n            <v-icon dark>remove_circle</v-icon>\n          </v-btn>\n        </v-card-title>\n\n        <v-card-text>\n          <v-layout row>\n            <v-flex md12 sm12>\n              <v-layout>\n                <!-- Search Box -->\n                <v-flex md9 sm12>\n                  <v-text-field\n                    v-model=\"search\"\n                    append-icon=\"search\"\n                    label=\"search\"\n                    single-line\n                    hide-details\n                    hide-no-data\n                  ></v-text-field>\n                </v-flex>\n\n                <!-- Sort Box -->\n                <v-flex md3 sm12>\n                  <v-select\n                    v-model=\"option\"\n                    :items=\"sortOptions\"\n                    @input=\"sortBasedOnOption\"\n                    label=\"sort\"\n                  ></v-select>\n                </v-flex>\n              </v-layout>\n\n              <!-- Cell Type Top Gene list -->\n              <v-layout row wrap>\n                <v-flex\n                  md6\n                  sm6\n                  v-if=\"cellSelectedExist && geneDataExist(cellSelected[0])\"\n                >\n                  <h3 class=\"sub-title\">{{ cellSelected[0] }}</h3>\n                  <v-list\n                    class=\"list\"\n                    :style=\"{\n                      background:\n                        $vuetify.theme.themes[\n                          this.$store.getters.getCurrentThemeMode\n                        ].background\n                    }\"\n                  >\n                    <v-list-item\n                      :color=\"setOverlapGeneBackgroundColor(index, value, 0)\"\n                      input-value=\"true\"\n                      v-for=\"(value, index) in filteredData[0]\"\n                      :key=\"index\"\n                      dense\n                      @click=\"setGeneItem(value)\"\n                      @mouseover=\"setGeneNameOnHover(index, value)\"\n                      @mouseleave=\"clearGeneNameOnHover()\"\n                      :class=\"[\n                        value[2] === geneNameOnHover ? 'highlight-theme' : ''\n                      ]\"\n                    >\n                      <v-layout>\n                        <v-flex md5 sm5>\n                          <span class=\"index\"\n                            >{{ loadedGeneIdToNameDict[value[2]] }}:</span\n                          >\n                        </v-flex>\n                        <v-flex md7 sm7>\n                          <span>\n                            <v-tooltip top>\n                              <template v-slot:activator=\"{ on }\">\n                                <v-progress-linear\n                                  :value=\"\n                                    setGeneIndexBarChartRatio(\n                                      `${index}`,\n                                      `${value}`\n                                    )\n                                  \"\n                                  :color=\"\n                                    setGeneIndexBarChartColor(\n                                      `${index}`,\n                                      `${value}`\n                                    )\n                                  \"\n                                  height=\"15\"\n                                  v-on=\"on\"\n                                  rounded\n                                  striped\n                                  reactive\n                                >\n                                  <template v-slot=\"{ value }\">\n                                    {{\n                                      (\n                                        (value / 100) *\n                                        maxGeneMagnitude\n                                      ).toFixed(fixedGeneDigits)\n                                    }}\n                                  </template></v-progress-linear\n                                >\n                              </template>\n                              <span>{{ value[1] }}</span>\n                            </v-tooltip>\n                          </span>\n                        </v-flex>\n                      </v-layout>\n                    </v-list-item>\n                  </v-list>\n                </v-flex>\n                <v-flex\n                  md6\n                  sm6\n                  v-if=\"\n                    cellSelected.length == 2 && geneDataExist(cellSelected[1])\n                  \"\n                >\n                  <h3 class=\"sub-title\">{{ cellSelected[1] }}</h3>\n                  <v-list\n                    class=\"list\"\n                    :style=\"{\n                      background:\n                        $vuetify.theme.themes[\n                          this.$store.getters.getCurrentThemeMode\n                        ].background\n                    }\"\n                  >\n                    <v-list-item\n                      :color=\"setOverlapGeneBackgroundColor(index, value, 1)\"\n                      input-value=\"true\"\n                      v-for=\"(value, index) in filteredData[1]\"\n                      :key=\"index\"\n                      dense\n                      @click=\"setGeneItem(value)\"\n                      @mouseover=\"setGeneNameOnHover(index, value)\"\n                      @mouseleave=\"clearGeneNameOnHover()\"\n                      :class=\"[\n                        value[2] === geneNameOnHover ? 'highlight-theme' : ''\n                      ]\"\n                    >\n                      <v-layout>\n                        <v-flex md5 sm12>\n                          <span class=\"index\"\n                            >{{ loadedGeneIdToNameDict[value[2]] }}:</span\n                          >\n                        </v-flex>\n                        <v-flex md7 sm12>\n                          <span>\n                            <v-tooltip top>\n                              <template v-slot:activator=\"{ on }\">\n                                <v-progress-linear\n                                  :value=\"\n                                    setGeneIndexBarChartRatio(\n                                      `${index}`,\n                                      `${value}`\n                                    )\n                                  \"\n                                  :color=\"\n                                    setGeneIndexBarChartColor(\n                                      `${index}`,\n                                      `${value}`\n                                    )\n                                  \"\n                                  height=\"15\"\n                                  v-on=\"on\"\n                                  rounded\n                                  striped\n                                >\n                                  <template v-slot=\"{ value }\">\n                                    {{\n                                      (\n                                        (value / 100) *\n                                        maxGeneMagnitude\n                                      ).toFixed(fixedGeneDigits)\n                                    }}\n                                  </template>\n                                </v-progress-linear>\n                              </template>\n                              <span>{{ value[1] }}</span>\n                            </v-tooltip>\n                          </span>\n                        </v-flex>\n                      </v-layout>\n                    </v-list-item>\n                  </v-list>\n                </v-flex>\n              </v-layout>\n            </v-flex>\n          </v-layout>\n        </v-card-text>\n      </v-card>\n    </v-flex>\n  </v-layout>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\nimport _ from \"lodash\";\nimport { COLOR_RAMP } from \"../config\";\n\nexport default {\n  name: \"cell-details\",\n  props: [],\n  mounted() {\n    this.fetchData();\n  },\n  data() {\n    return {\n      cardHighlight: false,\n      fixedGeneDigits: 5,\n      maxGeneMagnitude: 0.14907,\n      loadedGeneData: {},\n      loadedGeneIdToNameDict: {},\n      sortOptions: [\"default\", \"magnitude\", \"coordinated\"],\n      geneNameOnHover: \"\"\n    };\n  },\n  methods: {\n    sortBasedOnOption(option) {\n      let globalThis = this;\n      console.log(this.filteredData[0]);\n      switch (option) {\n        case \"default\":\n          this.filteredData[0] = this.loadedGeneData[cellArr[0]];\n          if (this.filteredData.length > 1) {\n            this.filteredData[1] = this.loadedGeneData[cellArr[0]];\n          }\n          return;\n        case \"magnitude\":\n          _.sortBy(globalThis.filteredData[0], (o) => o[1], ['desc'])\n          _.sortBy(globalThis.filteredData[1], (o) => o[1], ['desc'])\n          return;\n        case \"coordinated\":\n          if (globalThis.filteredData.length <= 1) {\n            return;\n          }\n          let itr = 0;\n          // Dict saves cell type name - index pair\n          let cellTypeNameIndexDict = [];\n          for (let i = 0; i < globalThis.filteredData[0].length; i++) {\n            let cellTypeName = globalThis.filteredData[0][i][2];\n            cellTypeNameIndexDict[cellTypeName] = i;\n          }\n          for (let j = 0; j < globalThis.filteredData[1].length; j++) {\n            let cellTypeNameInColumnTwo = globalThis.filteredData[1][j][2];\n\n            if (cellTypeNameInColumnTwo in cellTypeNameIndexDict) {\n              let overlapCellTypeIndex =\n                cellTypeNameIndexDict[cellTypeNameInColumnTwo];\n              this.swapEntryPositions(\n                globalThis.filteredData[0],\n                overlapCellTypeIndex,\n                itr\n              );\n              this.swapEntryPositions(globalThis.filteredData[1], j, itr);\n              itr++;\n            }\n          }\n\n          return;\n      }\n    },\n    swapEntryPositions(list, indexA, indexB) {\n      let temp = list[indexA];\n      list[indexA] = list[indexB];\n      list[indexB] = temp;\n    },\n    async fetchData() {\n      this.loadedGeneData = await d3.json(\"./top_abs_10_dict.json\");\n      this.loadedGeneIdToNameDict = await d3.json(\"./gene_id_to_name.json\");\n    },\n    getDefaultCellTypes() {\n      let cellArr = this.$store.getters.getCellSelected;\n      let geneCellCopy = [];\n      console.log(this.loadedGeneData[cellArr[0]]);\n      geneCellCopy.push(this.loadedGeneData[cellArr[0]]);\n      if (cellArr.length > 1) {\n        geneCellCopy.push(this.loadedGeneData[cellArr[1]]);\n      }\n      return geneCellCopy;\n    },\n    /**\n     * Get gene color by column and gene index, if negative display pink\n     */\n    setGeneIndexBarChartColor(index, value) {\n      let globalThis = this;\n      let indexGeneValue = parseFloat(value.split(\",\")[1]);\n\n      if (indexGeneValue >= 0) {\n        return \"primary\";\n      } else {\n        return \"pink\";\n      }\n    },\n    setGeneIndexBarChartRatio(index, value) {\n      let globalThis = this;\n      let numberValue = parseFloat(value.split(\",\")[1]);\n      return Math.abs(\n        ((numberValue / globalThis.maxGeneMagnitude) * 100).toFixed(\n          globalThis.fixedGeneDigits\n        )\n      );\n    },\n    setOverlapGeneBackgroundColor(index, value, columnIndex) {\n      let globalThis = this;\n      let cellName = value[2];\n      if (columnIndex == 0) {\n        let filteredDataSecondRow = globalThis.filteredData[1];\n        if (globalThis.filteredData.length > 1) {\n          for (const entry of Object.entries(filteredDataSecondRow)) {\n            let geneValueObject = entry[1];\n            if (geneValueObject[2] === cellName) {\n              return COLOR_RAMP[index];\n            }\n          }\n        }\n      } else if (columnIndex == 1) {\n        let filteredDataFirstRow = globalThis.filteredData[0];\n        for (const entry of Object.entries(filteredDataFirstRow)) {\n          let geneValueObject = entry[1];\n          if (geneValueObject[2] === cellName) {\n            let geneIndexInFirstRow = entry[0];\n            return COLOR_RAMP[geneIndexInFirstRow];\n          }\n        }\n      }\n      return \"#303030\";\n    },\n    sortCells() {\n      let cellArr = this.$store.getters.getCellSelected;\n      let geneCellCopy = [];\n      geneCellCopy.push(\n        this.loadedGeneData[cellArr[0]]\n          .concat()\n          .sort((a, b) => (a[1] < b[1] ? 1 : -1))\n      );\n      if (cellArr.length > 1) {\n        geneCellCopy.push(\n          this.loadedGeneData[cellArr[1]]\n            .concat()\n            .sort((a, b) => (a[1] < b[1] ? 1 : -1))\n        );\n      }\n      return geneCellCopy;\n    },\n    removeCellSelected() {\n      this.$store.dispatch(\"popFromCellSelected\");\n    },\n    setGeneItem(value) {\n      this.$store.dispatch(\"changeGeneSelected\", value[2]);\n    },\n    setGeneNameOnHover(index, value) {\n      this.geneNameOnHover = value[2];\n    },\n    cellSelectedExist() {\n      return this.$store.getters.getCellSelected.length !== 0;\n    },\n    clearGeneNameOnHover() {\n      this.geneNameOnHover = \"\";\n    },\n    geneDataExist(cellTypeName) {\n      if (this.loadedGeneData[cellTypeName] === undefined) {\n        return false;\n      }\n      return true;\n    }\n  },\n  computed: {\n    cellSelected: {\n      get() {\n        return this.$store.getters.getCellSelected;\n      }\n    },\n    currentCellTypes() {\n      return this.$store.getters.getOption === \"default\"\n        ? this.getDefaultCellTypes()\n        : this.sortCells();\n    },\n    dynamicData() {\n      if (this.geneCellCopy1.length == 0) {\n        return;\n      } else {\n        return this.$store.getters.getCellDetails;\n      }\n    },\n    filteredData() {\n      let globalThis = this;\n      if (this.$store.getters.getGeneSearch === \"\") {\n        return this.currentCellTypes;\n      } else {\n        let resultArr = [];\n        let cellTypes = this.currentCellTypes;\n        let cell1FilteredArray = [];\n        let cell2FilteredArray = [];\n        if (cellTypes.length > 1) {\n          cellTypes[1].forEach(element => {\n            // Map the gene id to name before converting to lower case for search matching\n            let lowerCaseElement = globalThis.loadedGeneIdToNameDict[\n              element[2]\n            ].toLowerCase();\n            if (lowerCaseElement.includes(globalThis.search.toLowerCase())) {\n              cell2FilteredArray.push(element);\n            }\n          });\n        }\n        if (cellTypes.length > 0) {\n          cellTypes[0].forEach(element => {\n            // Map the gene id to name before converting to lower case for search matching\n            let lowerCaseElement = globalThis.loadedGeneIdToNameDict[\n              element[2]\n            ].toLowerCase();\n            if (lowerCaseElement.includes(globalThis.search.toLowerCase())) {\n              cell1FilteredArray.push(element);\n            }\n          });\n        }\n        resultArr.push(cell1FilteredArray);\n        resultArr.push(cell2FilteredArray);\n        return resultArr;\n      }\n    },\n    option: {\n      get() {\n        return this.$store.getters.getOption;\n      },\n      set(option) {\n        this.$store.dispatch(\"changeOption\", option);\n      }\n    },\n    search: {\n      get() {\n        return this.$store.getters.getGeneSearch;\n      },\n      set(input) {\n        this.$store.dispatch(\"changeGeneSearch\", input);\n      }\n    },\n    selectedTheme() {\n      return this.onHover === true ? \"highlight-theme\" : \"\";\n    }\n  },\n  watch: {\n    cellSelected() {\n      let cellArr = this.$store.getters.getCellSelected;\n      this.$store.dispatch(\"changeCellDetails\", []);\n      if (cellArr.length === 0) {\n        return;\n      }\n      this.geneCellCopy1 = this.loadedGeneData[cellArr[0]];\n      this.$store.dispatch(\"addToCellDetails\", this.geneCellCopy1);\n\n      let geneDataColumnOne = [];\n      for (const geneData of this.geneCellCopy1) {\n        geneDataColumnOne.push(Number(geneData[1]));\n      }\n\n      if (cellArr.length > 1) {\n        this.geneCellCopy2 = this.loadedGeneData[cellArr[1]];\n        this.$store.dispatch(\"addToCellDetails\", this.geneCellCopy2);\n        let geneDataColumnTwo = [];\n        for (const geneData of this.geneCellCopy2) {\n          geneDataColumnTwo.push(Number(geneData[1]));\n        }\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.message {\n  color: red;\n  text-align: left;\n}\n.geneName {\n  color: #c5050c;\n}\n.highlight-theme {\n  background: #34495e;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CellDetails.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CellDetails.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CellDetails.vue?vue&type=template&id=6564603c&scoped=true&\"\nimport script from \"./CellDetails.vue?vue&type=script&lang=js&\"\nexport * from \"./CellDetails.vue?vue&type=script&lang=js&\"\nimport style0 from \"./CellDetails.vue?vue&type=style&index=0&id=6564603c&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6564603c\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"app\">\n    <v-app\n      :dark=\"setTheme\"\n    >\n      <!--Header Section-->\n      <v-container fluid>\n        <v-switch\n          color=\"primary\"\n          :label=\"selectedTheme\"\n          v-model=\"goDark\"\n          class=\"switch\"\n        ></v-switch>\n        <Header msg=\"Cell Network Viewer\" />\n      </v-container>\n\n      <!--Body Section-->\n      <v-container bg grid-list-md fluid>\n        <v-layout row wrap>\n          <!-- \n          Search View \n          -->\n          <v-flex md5>\n            <SearchView :cellData=\"this.$store.getters.getCellTypeGraphData\" />\n          </v-flex>\n          <!-- \n          Graph View \n          -->\n          <v-flex md7>\n            <Graph :cellData=\"this.$store.getters.getCellTypeGraphData\" />\n          </v-flex>\n        </v-layout>\n        <v-layout row wrap>\n          <!-- \n          Gene Details View \n          -->\n          <v-flex md5>\n            <GeneDetails />\n          </v-flex>\n          <!-- \n          Cell Details View \n          -->\n          <v-flex md7>\n            <CellDetails />\n          </v-flex>\n        </v-layout>\n      </v-container>\n    </v-app>\n  </div>\n</template>\n\n<script>\n/**\n * Views\n */\nimport Header from \"@/components/TheHeader.vue\";\nimport SearchView from \"@/components/SearchView.vue\";\nimport Graph from \"@/components/CellGraph.vue\";\nimport GeneDetails from \"@/components/GeneDetails.vue\";\nimport CellDetails from \"@/components/CellDetails.vue\";\n\n/**\n * Packages\n */\nimport * as d3 from \"d3\";\n\nexport default {\n  name: \"app\",\n  components: {\n    Header,\n    SearchView,\n    Graph,\n    GeneDetails,\n    CellDetails\n  },\n  mounted() {\n    this.fetchData();\n  },\n  data: function() {\n    return {\n      goDark: true\n    };\n  },\n  methods: {\n    // Fetch all json data and store it in vuex for children components to use\n    async fetchData() {\n      let cellTypeGraphData = await d3.json(\"./cell_type_graph.json\");\n      this.$store.dispatch(\"changeCellTypeGraphData\", cellTypeGraphData);\n    }\n  },\n  computed: {\n    // Display which theme is currently on\n    selectedTheme() {\n      return this.goDark ? \"Dark Theme\" : \"Light Theme\";\n    },\n    // Toggle between light and dark theme\n    setTheme() {\n      if (this.goDark == true) {\n        this.$store.dispatch(\"changeCurrentThemeMode\", \"dark\");\n        return (this.$vuetify.theme.dark = true);\n      } else {\n        this.$store.dispatch(\"changeCurrentThemeMode\", \"light\");\n        return (this.$vuetify.theme.dark = false);\n      }\n    }\n  }\n};\n</script>\n\n<style>\n#app {\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n}\n.switch {\n  margin: 20px;\n}\na,\nh3 {\n  color: #42b983;\n}\n.index {\n  color: #42b983;\n  font-weight: bold;\n}\n@import url(\"https://fonts.googleapis.com/css?family=BioRhyme&display=swap\");\n.view-title {\n  font-family: \"BioRhyme\", serif;\n}\n.sub-title {\n  font-weight: bold;\n  text-align: left;\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=6b0dcc52&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from \"vue\";\nimport Vuex from \"vuex\";\n\nVue.use(Vuex);\n\nconst state = {\n  cellDetails: [],\n  cellSelected: [],\n  cellSelectedPrevious: \"\",\n  cellTypeGraphData: {},\n  currentThemeMode: \"dark\",\n  topGeneCellList: [],\n  topGeneCellListPrevious: [],\n  topGeneDictData: {},\n  geneSearchOption: \"default\",\n  geneSelected: \"\",\n  optionSelected: \"default\",\n  cellInGeneSearch: \"\",\n  geneSearchFromSearchView: \"\",\n  geneSearch: \"\",\n  search: \"\"\n};\n\nconst mutations = {\n  ADD_TO_CELL_DETAILS(state, payload) {\n    state.cellDetails.push(payload);\n  },\n  CHANGE_CELL_DETAILS(state, payload) {\n    state.cellDetails = payload;\n  },\n  ADD_TO_CELL_SELECTED(state, payload) {\n    state.cellSelected.push(payload);\n  },\n  CHANGE_CELL_SELECTED(state, payload) {\n    state.cellSelected = payload;\n  },\n  POP_FROM_CELL_SELECTED(state) {\n    state.cellSelected.pop();\n  },\n  CHANGE_CELL_TYPE_GRAPH_DATA(state, payload) {\n    state.cellTypeGraphData = payload;\n  },\n  CHANGE_CURRENT_THEME_MODE(state, payload) {\n    state.currentThemeMode = payload;\n  },\n  ADD_TO_TOP_GENE_CELL_LIST(state, payload) {\n    state.topGeneCellList.push(payload);\n  },\n  CHANGE_TOP_GENE_CELL_LIST(state, payload) {\n    state.topGeneCellList = payload;\n  },\n  CHANGE_TOP_GENE_CELL_LIST_PREVIOUS(state, payload) {\n    state.topGeneCellListPrevious = payload;\n  },\n  CHANGE_CELL_SELECTED_PREVIOUS(state, payload) {\n    state.cellSelectedPrevious = payload;\n  },\n  CHANGE_TOP_GENE_DICT_DATA(state, payload) {\n    state.topGeneDictData = payload;\n  },\n  CHANGE_GENE_SEARCH_OPTION(state, payload) {\n    state.geneSearchOption = payload;\n  },\n  CHANGE_GENE_SELECTED(state, payload) {\n    state.geneSelected = payload;\n  },\n  CHANGE_CELL_IN_GENE_SEARCH(state, payload) {\n    state.cellInGeneSearch = payload;\n  },\n  CHANGE_GENE_SEARCH(state, payload) {\n    state.geneSearch = payload;\n  },\n  CHANGE_GENE_SEARCH_FROM_SEARCH_VIEW(state, payload) {\n    state.geneSearchFromSearchView = payload;\n  },\n  CHANGE_SEARCH(state, payload) {\n    state.search = payload;\n  },\n  CHANGE_OPTION(state, payload) {\n    state.optionSelected = payload;\n  }\n};\n\nconst actions = {\n  addToCellDetails(context, cellDetails) {\n    context.commit(\"ADD_TO_CELL_DETAILS\", cellDetails);\n  },\n  changeCellDetails(context, cellDetails) {\n    context.commit(\"CHANGE_CELL_DETAILS\", cellDetails);\n  },\n  addToCellSelected(context, cellSelected) {\n    context.commit(\"ADD_TO_CELL_SELECTED\", cellSelected);\n  },\n  changeCellSelected(context, cellSelected) {\n    context.commit(\"CHANGE_CELL_SELECTED\", cellSelected);\n  },\n  popFromCellSelected(context) {\n    context.commit(\"POP_FROM_CELL_SELECTED\");\n  },\n  changeCellTypeGraphData(context, data) {\n    context.commit(\"CHANGE_CELL_TYPE_GRAPH_DATA\", data);\n  },\n  changeCurrentThemeMode(context, mode) {\n    context.commit(\"CHANGE_CURRENT_THEME_MODE\", mode)\n  },\n  addToTopGeneCellList(context, topGeneCellList) {\n    context.commit(\"ADD_TO_TOP_GENE_CELL_LIST\", topGeneCellList);\n  },\n  changeTopGeneCellList(context, topGeneCellList) {\n    context.commit(\"CHANGE_TOP_GENE_CELL_LIST\", topGeneCellList);\n  },\n  changeTopGeneCellListPrevious(context, topGeneCellListPrevious) {\n    context.commit(\"CHANGE_TOP_GENE_CELL_LIST_PREVIOUS\", topGeneCellListPrevious);\n  },\n  changeCellSelectedPrevious(context, cellSelectedPrevious) {\n    context.commit(\"CHANGE_CELL_SELECTED_PREVIOUS\", cellSelectedPrevious);\n  },\n  changeTopGeneDictData(context, data) {\n    context.commit(\"CHANGE_TOP_GENE_DICT_DATA\", data);\n  },\n  changeGeneSearchOption(context, geneSearchOption) {\n    context.commit(\"CHANGE_GENE_SEARCH_OPTION\", geneSearchOption);\n  },\n  changeGeneSelected(context, geneSelected) {\n    context.commit(\"CHANGE_GENE_SELECTED\", geneSelected);\n  },\n  changeCellInGeneSearch(context, searchContent) {\n    context.commit(\"CHANGE_CELL_IN_GENE_SEARCH\", searchContent);\n  },\n  changeGeneSearch(context, searchContent) {\n    context.commit(\"CHANGE_GENE_SEARCH\", searchContent);\n  },\n  changeGeneSearchFromSearchView(context, searchContent) {\n    context.commit(\"CHANGE_GENE_SEARCH_FROM_SEARCH_VIEW\", searchContent);\n  },\n  changeSearch(context, searchContent) {\n    context.commit(\"CHANGE_SEARCH\", searchContent);\n  },\n  changeOption(context, optionSelected) {\n    context.commit(\"CHANGE_OPTION\", optionSelected);\n  }\n};\n\nconst getters = {\n  getCellDetails(state) {\n    return state.cellDetails;\n  },\n  getCellSelected(state) {\n    return state.cellSelected;\n  },\n  getTopGeneCellList(state) {\n    return state.topGeneCellList;\n  },\n  getTopGeneCellListPrevious(state) {\n    return state.topGeneCellListPrevious;\n  },\n  getCellSelectedPrevious(state) {\n    return state.cellSelectedPrevious;\n  },\n  getCellTypeGraphData(state) {\n    return state.cellTypeGraphData;\n  },\n  getCurrentThemeMode(state) {\n    return state.currentThemeMode;\n  },\n  getTopGeneDictData(state) {\n    return state.topGeneDictData;\n  },\n  getGeneSearchOption(state) {\n    return state.geneSearchOption;\n  },\n  getGeneSelected(state) {\n    return state.geneSelected;\n  },\n  getCellInGeneSearch(state) {\n    return state.cellInGeneSearch;\n  },\n  getGeneSearch(state) {\n    return state.geneSearch;\n  },\n  getGeneSearchFromSearchView(state) {\n    return state.geneSearchFromSearchView;\n  },\n  getSearch(state) {\n    return state.search;\n  },\n  getOption(state) {\n    return state.optionSelected;\n  }\n};\n\nexport default new Vuex.Store({\n  state,\n  mutations,\n  actions,\n  getters\n});\n","import \"material-design-icons-iconfont/dist/material-design-icons.css\";\nimport 'vuetify/dist/vuetify.min.css';\n\nimport Vue from 'vue';\nimport App from './App.vue';\nimport VueLodash from 'vue-lodash';\nimport Vuetify from 'vuetify';\nimport store from './store.js';\n\nVue.config.productionTip = false;\n\nconst options = { name: 'lodash' }; // customize the way you want to call it\nVue.use(VueLodash, options);\n\nconst vuetifyOptions = {\n  iconfont: 'md',\n  theme: {\n    dark: true,\n    themes: {\n      dark: {\n        primary: '#42b983',\n        secondary: '#424242',\n        accent: '#8c9eff',\n        error: '#b71c1c'\n      },\n      light: {\n        primary: '#42b983',\n        secondary: '#DCF8C6',\n        accent: '#8c9eff',\n        error: '#b71c1c',\n        background: '#fbf9f0',\n      }\n    }\n  }\n};\n\nVue.use(Vuetify);\n\nnew Vue({\n  render: h => h(App),\n  store,\n  vuetify: new Vuetify(vuetifyOptions)\n}).$mount('#app');\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GeneDetails.vue?vue&type=style&index=0&id=6bf70bbe&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GeneDetails.vue?vue&type=style&index=0&id=6bf70bbe&scoped=true&lang=css&\""],"sourceRoot":""}